{"version":3,"file":"static/js/514.141f1b0d.chunk.js","mappings":"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","sources":["components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.js","components/ChoosedDay/TasksColumn/TasksColumn.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskModal/TaskModal.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskModal/TaskModal.js","components/ChoosedDay/TasksColumn/TasksColumn.js","components/ChoosedDay/TasksColumnsList.styled.jsx","components/ChoosedDay/TasksColumnsList.js","components/ChoosedDay/ChoosedDay.js","components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.js","redux/currentDate/selector.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  /* padding: 30px 0; */\n  /* background-color: transparent; */\n`;\n\nexport const AddTask = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 20px;\n  width: 100%;\n\n  cursor: pointer;\n  border-radius: 8px;\n  backface-visibility: hidden;\n  transition: transform 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  //! для светлой темы\n  // border: 2px dashed #3e85f3;\n  background-color: #e3f3ff;\n  //? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  color: #111111;\n  //? color: ${props => props.theme.ltTextColor}; //переключение по теме\n\n  //! для темной темы\n  // border: none;\n  // background-color: #3e85f3;\n  //// ? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  // color: #ffffff;\n  //// ? color: ${props => props.theme.ltTextColor}; //переключение по теме\n`;\n\nexport const Text = styled.span`\n  font-size: 14px;\n  font-family: Inter, sans-serif;\n  font-weight: 600;\n  line-height: 18px;\n`;\n","import { FiPlus } from 'react-icons/fi';\nimport { AddTask, Div, Text } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({ listId, handleAddTask}) => {\n  \n  return (\n    <Div>\n      <AddTask id={listId} type=\"button\" onClick={handleAddTask}>\n        <FiPlus size={24} />\n        <Text>Add task</Text>\n      </AddTask>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnsItem = styled.li`\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  width: 100%;\n  height: 100%;\n\n  /* min-height: 155px; */\n  /* max-height: 432px; */\n\n  height: fit-content;\n  /* min-width: 280px; */\n  line-height: 1.12;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 18px 18px 10px 18px;\n  gap: 16px;\n  font-family: 'InterSemiBolt';\n  max-width: 335px;\n\n\n  @media screen and (min-width: 768px) {\n    padding: 18px 22px 28px;\n    font-size: 20px;\n    max-width: 344px;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 7px 0;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\nmargin-bottom: 28px;\n  }\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-family: 'InterSemiBolt';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.11;\n  color: #111111;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Icon = styled(AiOutlinePlusCircle)`\n  width: 22px;\n  height: 22px;\n  fill: black;\n  border-radius: 50%;\n  &:hover,\n  &:focus {\n    fill: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const BtnAddTop = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 22px;\n  height: 22px;\n`;\n","import { Wrap, ColumnTitle, BtnAddTop, Icon } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ title }) => {\n  return (\n    <>\n      <Wrap>\n        <ColumnTitle>\n          {title === 'toDo'\n            ? 'To do'\n            : title === 'inProgress'\n            ? 'In progress'\n            : title === 'done'\n            ? 'Done'\n            : null}\n        </ColumnTitle>\n        <BtnAddTop>\n          <Icon />\n        </BtnAddTop>\n      </Wrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\ndisplay: flex;\nflex-direction: column;\ngap: 14px;\nlist-style: none;\nwidth: 100%;\nheight: 356px;\npadding-right: 6px;\n\n  overflow: hidden;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n  margin-bottom: -8px;\n\n  /* width */\n::-webkit-scrollbar {\n  width: 6px;\n\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 30px #F2F2F2;\n  border-radius: 12px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #E7E5E5;\n  border-radius: 12px;\n}\n\n  @media screen and (min-width: 768px) {\n\n  height: 372px;\n  gap: 18px;\n  margin-bottom: 32px;\n\n    /* width */\n::-webkit-scrollbar {\n  width: 8px;\n\n}\n\n  }\n`;\n\nexport const ListItem = styled.li`\nheight: 108px;\n\n\n  @media screen and (min-width: 768px) {\n    height: 112px;\n  }\n`;\n","import styled from \"styled-components\"\n\nexport const Card = styled.div`\nposition: relative;\npadding: 14px 14px 18px 14px;\nwidth: 100%;\nheight: 100%;\nbackground-color: #F7F6F9;\nborder: 1px solid #DCE3E5CC;\nborder-radius: 8px;\n`;\n\nexport const TextTask = styled.p`\nmargin-bottom: 24px;\n\ncolor: #111;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\noverflow: hidden;\nfont-size: 14px;\nfont-family: Inter;\nfont-weight: 500;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 28px;\n  }\n`\n\nexport const WrapperToolbar = styled.div`\nposition: relative;\ndisplay: flex;\nalign-items: self-end;\njustify-content: space-between;\n`;\n\nexport const ContainerDataUser = styled.div`\ndisplay: flex;\nalign-items: self-end;\ngap: 8px;\n`;\n\nexport const Avatar = styled.img`\nwidth: 32px;\nheight: 32px;\nborder-radius: 50%;\n`;\n\nexport const Priority = styled.span`\nfont-size: 10px;\nfont-family: Inter;\nfont-weight: 600;\nline-height: 1.2;\n\ncolor: #F7F6F9;\npadding: 4px 12px;\nborder-radius: 4px;\nbackground-color: ${props => props.children === \"low\" ? \"#72C2F8\" : props.children === \"medium\" ? \"#F3B249\" : \"#EA3D65\"};\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const SectionToolbar = styled.div`\n  display: flex;\n  gap:10px;\n\n`;\n\nexport const TaskAction = styled.button`\n  width: 14px;\n  height: 14px;\n\n  border-radius: 50%;\n  cursor: pointer;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    transition-duration: 200ms;\n  }\n\n`;\n\nexport const Icon = styled.img`\n  width: 14px;\n  height: 14px;\n`;\n","import { SectionToolbar, TaskAction, Icon } from './Toolbar.styled';\n\nexport const Toolbar = ({setTargetElement, setTaskModalOpen}) => {\n\nconst handleClick = ( e ) => {\n  setTaskModalOpen(true);\n  setTargetElement(e.target);\n}\n    \n    return (\n      <SectionToolbar >\n        <TaskAction onClick={handleClick}>\n          <Icon\n            src={process.env.PUBLIC_URL + '/images/icons/icon-arrow-circle-broken-right-16x16.svg'}\n            alt=\"button-move\"\n          />\n        </TaskAction>\n        <TaskAction>\n          <Icon\n            src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16.svg'}\n            alt=\"button-edit\"\n          />\n        </TaskAction>\n        <TaskAction>\n          <Icon\n            src={process.env.PUBLIC_URL + '/images/icons/icon-trash-16x16.svg'}\n            alt=\"button-delete\"\n          />\n        </TaskAction>\n      </SectionToolbar>\n    );\n  };","import { useAuth } from \"hooks/useAuth\";\nimport { Avatar, Card, ContainerDataUser, TextTask, WrapperToolbar, Priority } from \"./TaskColumnCard.styled\"\nimport { Toolbar } from './Toolbar/Toolbar';\n// import {TaskModal} from \"./TaskModal/TaskModal\"\n\n\n\nexport const TaskColumnCard = ({task, listId, setTargetElement, setTaskModalOpen}) => {\n  const {user: {avatarUrl}} = useAuth();\n  const { priority = \"low\"} = task;\n\n  return(\n    <Card id=\"targetElement\">\n      <TextTask>{task}</TextTask>\n            {/* <TaskModal  listId={listId} targetElement={document.getElementById('targetElement')}/> */}\n\n      <WrapperToolbar>\n        <ContainerDataUser>\n        <Avatar src={avatarUrl} alt=\"avatar\" />\n        <Priority>{priority}</Priority>\n        </ContainerDataUser>\n      <Toolbar setTaskModalOpen={setTaskModalOpen} setTargetElement={setTargetElement}/>\n      </WrapperToolbar>\n    </Card>\n  )\n}","// import { nanoid } from 'nanoid';\nimport { List, ListItem } from './ColumnTasksList.styled';\nimport { TaskColumnCard } from './TaskColumnCard/TaskColumnCard';\n\nexport const ColumnTasksList = ({\n  listId,\n  setTargetElement,\n  setTaskModalOpen,\n}) => {\n  const test = [\n    'Erruer esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n    'Euer esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n    'Eue esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n    'Eu esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n  ];\n  return (\n    <List>\n      {test.map(e => (\n        <ListItem key={e}>\n          <TaskColumnCard\n            listId={listId}\n            task={e}\n            setTaskModalOpen={setTaskModalOpen}\n            setTargetElement={setTargetElement}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from \"styled-components\"\nimport { TaskAction } from \"../Toolbar/Toolbar.styled\";\n\nexport const ModalCardTask = styled.ul`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 14px;\npadding: 14px;\nwidth: 147px;\nheight: 90px;\nbackground-color: #FFFFFF;\nborder-radius: 8px;\nbox-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10);\n@media screen and (min-width: 768px) {\npadding: 20px 24px;\n    \n  }\n`;\n\n\nexport const BtnMoove = styled(TaskAction)`\ndisplay: flex;\nwidth: 87px;\nalign-items: center;\njustify-content: space-between;\n\ncolor: #343434;\n\n@media screen and (min-width: 768px) {\nwidth: 99px;\n    \n    }\n`\nexport const Lable = styled.p`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 500;\nline-height: 1.2;\n\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nline-height: 1.3;\n    \n  }\n`\n\n\n","import { Icon } from '../Toolbar/Toolbar.styled';\nimport { BtnMoove, Lable, ModalCardTask } from './TaskModal.styled';\nimport { createPortal } from 'react-dom';\nimport { useState, useEffect, useRef, useCallback } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const TaskModal = ({\n  id,\n  listId,\n  targetElement,\n  setTaskModalOpen,\n}) => {\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n  const modalRef = useRef();\n\n  const moove = {\n    toDo: 'To do',\n    inProgress: 'In progress',\n    done: 'Done',\n  };\n\n  const arrMoove = Object.keys(moove);\n  const mooveTask = arrMoove.filter(e => e !== listId);\n\n  const handleOutsideClick = useCallback(\n    event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setTaskModalOpen(false);\n      }\n    },\n    [setTaskModalOpen]\n  );\n\n  useEffect(() => {\n    const updateModalPosition = () => {\n      if (targetElement) {\n        const targetRect = targetElement.getBoundingClientRect();\n        const isMobile = window.innerWidth < 768;\n        const topOffsetX = isMobile ? targetRect.height + 12 : targetRect.height + 8;\n        const topOffsetY = isMobile ? targetRect.left - 70 : targetRect.left;\n        setModalPosition({\n          top: targetRect.top + topOffsetX,\n          left: topOffsetY,\n        });\n      }\n    };\n\n    updateModalPosition();\n\n    window.addEventListener('resize', updateModalPosition);\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      window.removeEventListener('resize', updateModalPosition);\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetElement]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setTaskModalOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <ModalCardTask\n      style={{ top: modalPosition.top, left: modalPosition.left }}\n      ref={modalRef}\n    >\n      {mooveTask.map(e => (\n        <li  key={e}>\n          <BtnMoove id={id} toMoome={e}>\n            <Lable>{moove[e]}</Lable>\n            <Icon\n              src={\n                process.env.PUBLIC_URL +\n                '/images/icons/icon-arrow-circle-broken-right-16x16.svg'\n              }\n              alt=\"button-move\"\n            />\n          </BtnMoove>\n        </li>\n      ))}\n    </ModalCardTask>,\n    modalRoot\n  );\n};\n","import { AddTaskBtn } from 'components/AddTaskBtn/AddTaskBtn';\nimport { ColumnsItem } from './TasksColumn.styled';\nimport { ColumnHeadBar } from './TasksComponents/ColumnHeadBar';\nimport { ColumnTasksList } from './TasksComponents/ColumnTasksList';\nimport { useState } from 'react';\nimport { TaskModal } from \"./TasksComponents/TaskColumnCard/TaskModal/TaskModal\";\nexport const TasksColumn = ({ listId, date, tasks }) => {\n  // const [isOpen, setIsModalOpen] = useState(false);\n  const [setIsModalOpen] = useState(false);\n\n  const [taskModalOpen, setTaskModalOpen] = useState(false)\n  const [ targetElement, setTargetElement] = useState(null)\n\n  const handleAddTask = () => setIsModalOpen(true);\n\n  return (\n\n    <ColumnsItem>\n\n      {taskModalOpen && <TaskModal  listId={listId} targetElement={targetElement} setTaskModalOpen={setTaskModalOpen}/>}\n\n      <ColumnHeadBar title={listId} />\n\n      <ColumnTasksList listId={listId} tasks={tasks} setTaskModalOpen={setTaskModalOpen} setTargetElement={setTargetElement}/>\n      {/* //! Это Руслана код */}\n      {/* <AddTaskBtn listId={listId}  date={date}/> */}\n\n      {/* //! Это я вставил - Никита */}\n      <AddTaskBtn listId={listId} handleAddTask={handleAddTask} />\n    </ColumnsItem>\n\n  );\n};\n","import styled from 'styled-components';\n\nexport const TasksList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\npadding-bottom: 34px;\n  scrollbar-width: thin; /* Товщина полоси прокрутки */\n  scrollbar-color: red lightgray; /* Колір полоси прокрутки і фону */\n\n\n/* width */\n::-webkit-scrollbar {\n  width: 12px;\n\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 30px #F2F2F2;\n  border-radius: 12px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #E7E5E5;\n  border-radius: 12px;\n}\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n    height: 568px;\n  }\n\n  ::-webkit-scrollbar {\n  width: 14px;\n\n}\n`;\n","import { TasksColumn } from './TasksColumn/TasksColumn';\nimport { TasksList } from './TasksColumnsList.styled';\n\nimport { useSelector } from 'react-redux';\nimport { isSameDay, parseISO } from 'date-fns';\n\nexport const TasksColumnsList = ({ date }) => {\n  const tasks = useSelector(state => state.tasks.tasks);\n\n  const todoTasks = tasks.filter(task => task.category === 'toDo');\n  const inProgressTasks = tasks.filter(task => task.category === 'inProgress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n\n  const toDo = todoTasks.filter(todo => isSameDay(date, parseISO(todo.date)));\n  const inProgress = inProgressTasks.filter(inProgress =>\n    isSameDay(date, parseISO(inProgress.date))\n  );\n  const done = doneTasks.filter(done => isSameDay(date, parseISO(done.date)));\n\n  return (\n    <TasksList>\n      <TasksColumn listId=\"toDo\" date={date} tasks={toDo} />\n      <TasksColumn listId=\"inProgress\" date={date} tasks={inProgress} />\n      <TasksColumn listId=\"done\" date={date} tasks={done} />\n    </TasksList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { DayCalendarHead } from '../DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from './TasksColumnsList';\n\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\nimport { useEffect } from 'react';\nimport { fetchAllTasks } from 'redux/task/operations';\n\nconst ChoosedDay = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  const dataDay = {\n    month,\n    day,\n    year,\n  };\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n  useEffect(() => {\n    dispatch(fetchAllTasks(dataDay));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date, dispatch]);\n\n  return (\n    <>\n      <DayCalendarHead date={date} setDate={handleSetDate} />\n      <TasksColumnsList date={date} />\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from 'styled-components';\n// import styled, { css } from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  margin-top: 24px;\n  margin-bottom: 14px;\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.mainBackgroundColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.CalendarHead};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props => props.weekend && '#3e85f3'};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","export const getDate = state => state.date;"],"names":["Div","styled","AddTask","props","theme","ltMainAccentColor","ltTextColor","Text","AddTaskBtn","listId","handleAddTask","id","type","onClick","size","ColumnsItem","Wrap","ColumnTitle","Icon","AiOutlinePlusCircle","page","BtnAddTop","ColumnHeadBar","title","List","ListItem","Card","TextTask","WrapperToolbar","ContainerDataUser","Avatar","Priority","children","SectionToolbar","TaskAction","Toolbar","setTargetElement","setTaskModalOpen","e","target","src","process","alt","TaskColumnCard","task","avatarUrl","useAuth","user","priority","ColumnTasksList","map","ModalCardTask","BtnMoove","Lable","modalRoot","document","querySelector","TaskModal","targetElement","useState","top","left","modalPosition","setModalPosition","modalRef","useRef","moove","toDo","inProgress","done","mooveTask","Object","keys","filter","handleOutsideClick","useCallback","event","current","contains","useEffect","updateModalPosition","targetRect","getBoundingClientRect","isMobile","window","innerWidth","topOffsetX","height","topOffsetY","addEventListener","removeEventListener","handleKeyDown","code","createPortal","style","ref","toMoome","TasksColumn","tasks","date","setIsModalOpen","taskModalOpen","TasksList","TasksColumnsList","useSelector","state","todoTasks","category","inProgressTasks","doneTasks","todo","isSameDay","parseISO","dispatch","useDispatch","Date","getDate","day","dataDay","month","getMonth","year","getFullYear","fetchAllTasks","DayCalendarHead","setDate","newDate","toString","GridWrapper","CellWrapperOfDate","mainBackgroundColor","CalendarHead","Day","weekend","isCurrentDay","path","useLocation","pathname","includes","formatDay","useMedia","start","startOfWeek","weekStartsOn","end","endOfWeek","week","currentDay","formattedDate","format","dayOfWeek","push","fullDate","addDays","dateItem","isWeekend"],"sourceRoot":""}