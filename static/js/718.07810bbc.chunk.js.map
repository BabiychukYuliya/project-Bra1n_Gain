{"version":3,"file":"static/js/718.07810bbc.chunk.js","mappings":"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","sources":["components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.jsx","utils/calendarToolbar/formatPeriod.js","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.js","utils/calendarToolbar/changeDate.js","components/UserForm/UserForm.styled.jsx","pages/StatisticsPage/StatisticsPage.styled.js","pages/StatisticsPage/StatisticsPage.js","redux/currentDate/selector.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from 'react-icons/md';\n\nimport {\n  DatePickerStyles,\n  DatePickerWrapper,\n} from 'components/UserForm/UserForm.styled';\n\nexport const Period = styled.span`\n  padding: 6px 12px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 600;\n  background-color: #3e85f3;\n  border-radius: 8px;\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    padding: 8px 12px;\n    font-size: 16px;\n  }\n`;\n\nexport const PickerWrapper = styled(DatePickerWrapper)`\n  position: absolute;\n  left: 0;\n  top: 8px;\n\n  @media screen and (min-width: 768px) {\n    top: 13px;\n  }\n\n  .react-datepicker {\n    width: 235px;\n    height: 100%;\n    padding: 18px;\n  }\n\n  .react-datepicker__month-container {\n    width: 235px;\n  }\n\n  .react-datepicker__header {\n    padding: 0;\n  }\n  .react-datepicker__current-month {\n    margin: 0;\n    margin-bottom: 18px;\n  }\n  .react-datepicker__navigation {\n    top: 16px;\n    width: 20px;\n    height: 20px;\n    text-align: center;\n\n    :focus-visible {\n      outline: 2px solid #fff;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 20px;\n  }\n  .react-datepicker__navigation-icon--previous {\n    top: 1px;\n    right: 0;\n  }\n\n  .react-datepicker__navigation--next {\n    right: 20px;\n  }\n\n  .react-datepicker__navigation-icon--next {\n    top: 1px;\n    left: 0;\n  }\n  .react-datepicker__navigation-icon--next::before {\n  }\n\n  .react-datepicker__current-month {\n    font-size: 16px;\n    font-family: Inter;\n    font-weight: 600;\n    letter-spacing: -0.32px;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 199px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 8px;\n\n    border: none;\n  }\n\n  .react-datepicker__day-name {\n    width: 24px;\n    height: 17px;\n    padding: 0;\n\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    line-height: 1.3;\n    color: #ffffff80;\n    cursor: default;\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 13px;\n    width: 235px;\n    padding-left: 18px;\n    padding-right: 18px;\n    padding-top: 10px;\n    border-top: 1px solid #ffffff33;\n  }\n\n  .react-datepicker__day--outside-month,\n  .react-datepicker__day--disabled {\n    color: #ffffff33;\n  }\n\n  .react-datepicker__day--disabled.react-datepicker__day {\n    cursor: default;\n  }\n\n  .react-datepicker__day--weekend {\n    opacity: 1;\n  }\n\n  .react-datepicker__week {\n    width: 199px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n\n    font-size: 14px;\n    font-family: Inter;\n    line-height: 1.3;\n    letter-spacing: -0.28px;\n    cursor: pointer;\n\n    :hover {\n      background-color: #fff;\n      color: #3e85f3;\n      border-radius: 24px;\n      opacity: 0.8;\n    }\n\n    :focus,\n    :focus-visible {\n      background-color: #fff;\n      color: #3e85f3;\n      border-radius: 24px;\n      opacity: 1;\n    }\n\n    :focus-visible {\n      outline: none;\n    }\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: #fff;\n    color: #3e85f3;\n    opacity: 0.7;\n  }\n\n  .react-datepicker__day--today {\n    border: 1px solid #fff;\n    background-color: transparent;\n    color: #fff;\n  }\n  .react-datepicker__day--selected.react-datepicker__day--today,\n  .react-datepicker__day--outside-month.react-datepicker__day--selected {\n    background-color: #fff;\n    color: #3e85f3;\n  }\n`;\n\nexport const DatePickerCastom = styled(DatePickerStyles)`\n  display: none;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    justify-content: none;\n    gap: 8px;\n  }\n\n`;\n\nexport const ContainerBtn = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 30px;\n  font-size: 14px;\n  color: #343434;\n  border: 1px solid #edf1f2;\n  background-color: #fff;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const ButtonLeft = styled(Button)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: none;\n  background-color: ${props => props.typeDate === 'month' && '#CAE8FF'};\n`;\n\nexport const ButtonRight = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  background-color: ${props => props.typeDate === 'day' && '#CAE8FF'};\n`;\n\nexport const ArrowLeft = styled(MdOutlineKeyboardArrowLeft)`\n  width: 16px;\n  height: 16px;\n  fill: ${props => (props.disabled ? '#DCE3E5' : '#343434')};\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const ArrowRight = styled(MdOutlineKeyboardArrowRight)`\n  width: 16px;\n  height: 16px;\n  fill: #343434;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","export const formatPeriod = (date, type) => {\n  const options = {};\n  let formattedDate = '';\n\n  if (type === 'month') {\n    options.month = 'long';\n    options.year = 'numeric';\n    formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\n  } else if (type === 'day') {\n    options.day = 'numeric';\n    options.month = 'short';\n    options.year = 'numeric';\n    const newDate = new Intl.DateTimeFormat('en-US', options).format(date);\n    const year = newDate.split(\",\")[1];\n    const dayMonth = newDate.split(\",\")[0].split(\" \").reverse().join(\" \");\n    formattedDate = `${dayMonth}${year}`\n  }\n\n  return formattedDate;\n}","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  ArrowLeft,\n  ArrowRight,\n  ButtonLeft,\n  ButtonRight,\n  ContainerBtn,\n  Period,\n  Wrapper,\n  PickerWrapper,\n  DatePickerCastom,\n} from './PeriodPaginator.styled';\n\nimport { formatPeriod } from 'utils/calendarToolbar/formatPeriod';\nimport { changeDate } from 'utils/calendarToolbar/changeDate';\n\nexport const PeriodPaginator = ({ minDate, date, setDate, typenav }) => {\n  const { pathname } = useLocation();\n  const path = typenav ? typenav : pathname.includes('day') ? 'day' : 'month';\n  const page = pathname.includes('calendar');\n  const navigate = useNavigate();\n\n  const [period, setPeriod] = useState(() => formatPeriod(date, path));\n  const [openPicker, setOpenPicker] = useState(false);\n  const [minDateDisabled, setMinDateDisabled] = useState(false);\n\n  const handlePickerChange = newValue => {\n    setDate(newValue);\n    setOpenPicker(false);\n  };\n\n  const handleClickPeriod = () => {\n    if (path === 'day') {\n      setOpenPicker(true);\n    }\n  };\n\n  const handleClick = num => {\n    setDate(changeDate(date, num, path));\n  };\n\n  useEffect(() => {\n    if (!page) return;\n    const newParams = date.getDate();\n    if (path === 'day') {\n      navigate(`/calendar/day/${newParams}`, { replace: true });\n    }\n    if (path === 'month') {\n      navigate(`/calendar/month/${newParams}`, { replace: true });\n    }\n  }, [date, navigate, path, page]);\n\n  useEffect(() => {\n    setPeriod(formatPeriod(date, path));\n  }, [path, date]);\n\n  useEffect(() => {\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n\n    if (path === 'day') {\n      const formattedDate = `${\n        months[date.getMonth()]\n      } ${date.getDate()} ${date.getFullYear()}`;\n\n      setMinDateDisabled(formattedDate === minDate);\n    }\n    if (path === 'month') {\n      const formattedDate = `${months[date.getMonth()]} ${date.getFullYear()}`;\n      const arrDate = minDate.split(' ');\n      const newMinDate = `${arrDate[0]} ${arrDate[2]}`;\n      setOpenPicker(false);\n      setMinDateDisabled(formattedDate === newMinDate);\n    }\n  }, [date, minDate, path]);\n\n  return (\n    <Wrapper>\n      <Period onClick={handleClickPeriod}>{period}</Period>\n\n      <PickerWrapper>\n        {openPicker && path === 'day' && (\n          <DatePickerCastom\n            open\n            selected={date}\n            calendarStartDay={1}\n            closeOnSelect={true}\n            minDate={new Date(minDate)}\n            onChange={handlePickerChange}\n            formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n            onClickOutside={() => setOpenPicker(false)}\n          />\n        )}\n      </PickerWrapper>\n\n      <ContainerBtn>\n        <ButtonLeft onClick={() => handleClick(-1)} disabled={minDateDisabled}>\n          <ArrowLeft disabled={minDateDisabled} />\n        </ButtonLeft>\n\n        <ButtonRight onClick={() => handleClick(1)}>\n          <ArrowRight />\n        </ButtonRight>\n      </ContainerBtn>\n    </Wrapper>\n  );\n};\n","export const changeDate = (date, num, type) => {\n  const modifiedDate = new Date(date);\n  if (type === 'month') {\n    modifiedDate.setMonth(modifiedDate.getMonth() + num);\n    return modifiedDate;\n  }\n  if (type === 'day') {\n    modifiedDate.setDate(modifiedDate.getDate() + num);\n    return modifiedDate;\n  }\n};\n","import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { theme } from '../../constants/Theme';\n\nexport const Wrapper = styled.div`\n display: flex;\n flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background: rgba(255, 255, 255, 1); \n  border-radius: 16px;\n   padding: 40px 18px;\n\n    @media screen and (min-width: 1440px) {\n      padding-top: 60px;\n    }\n`;\n\nexport const FormUserProfile = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\n\n    @media screen and (min-width: 375px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 354px;\n    }\n     @media screen and (min-width: 1440px) {\n        width: 758px;\n    }\n`;\n\nexport const BtnUploadAvatar = styled(Field)`\nopacity: 1;\nposition: absolute;\nbottom: -6%;\nright: 20%;\noverflow: hidden;\nwidth: 14px;\nheight: 14px;\nborder-radius: 50%;\nfont-size: 15px;\n\n  ::before {\n    content: \" +\";\n    color: rgba(255, 255, 255, 1);\n    cursor: pointer;\n    padding: 5px;\n    background: rgba(62, 133, 243, 1);\n    position: absolute;\n          // transition: background анимация;\n    top: -8px;\n    left: -6px;\n    width: 40px;\n    height: 40px;\n    }\n\n @media screen and (min-width: 768px) {\n      font-size: 24px;\n       width: 24px;\n       height: 24px;\n       bottom: 31%;\n       right: 14%;\n\n       ::before {\n         top: -8px;\n          left: -6px;\n          width: 40px;\n          height: 40px;\n       }\n    }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: inherit;\n  width: inherit;\n  height: inherit;\n`;\n\nexport const LabelAvatar = styled.label`\nposition: relative;\nmargin: 0 auto;\ntext-align: center;\n`;\n\n\nexport const AvatarWrapper = styled.div`\nposition: absolute;\ntop: -71px;\nright: -36px;\nwidth: 72px;\nheight: 72px;\nborder: 2px solid ${theme.colors.primaryColor};\nborder-radius: 50%;\n\n @media screen and (min-width: 768px) {\n       top: 0;\n       left: -60px;\n       width: 124px;\n       height: 124px;\n      \n    }\n`;\n\nexport const UserName = styled.p`\nmargin: 0 auto;\nmargin-top: 18px;\n\nfont-size: 14px;\nfont-weight: 700;\n\n @media screen and (min-width: 768px) {\n    margin-top: 144px;\n      font-size: 18px;\n      margin-bottom: 8px;\n    }\n`;\n\nexport const UserLabel = styled.span`\nmargin-top: 6px;\nmargin-bottom: 40px;\ntext-align: center;\nfont-size: 12px;\nfont-weight: 600;\nline-height: 1.17;\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const Input = styled(Field)`\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 1.17;\ncolor: rgba(17, 17, 17, 1);\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const MainFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n   flex-wrap: wrap;\n   gap: 50px;\n   margin-bottom: 70px;\n    }\n`;\nexport const BlockFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n\n    }\n`;\n\n\nexport const SubmitBtn = styled.button`\n  margin: 0 auto;\n  margin-top: 22px;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: rgba(62, 133, 243, 1);\n  color: rgba(255, 255, 255, 1);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n      width: 262px;\n    }\n\n//   transition: background-color анимация;\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    background-color: rgba(43, 120, 239, 1);\n  }\n\n  :disabled {\n    opacity: 0.4;\n  }\n\n`;\n\nexport const DatePickerStyles = styled(DatePicker)`\n\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-family: Inter-600, sans-serif;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.3;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: rgba(62, 133, 243, 1);\n    border-radius: 16px;\n    overflow: hidden;\n    border: none;\n    color: rgba(255, 255, 255, 1);\n    width: 327px;\n    height: 354px;\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n}\n.react-datepicker__header {\n        position: relative;\n\n    background-color: rgba(62, 133, 243, 1);\n    border-bottom: 1px solid rgba(62, 133, 243, 1);\n  }\n\n  .react-datepicker__navigation-icon {\n    ::before {\n      border-color: rgba(255, 255, 255, 1);\n    }\n\n.react-datepicker__navigation--next {\n    right: 9px;\n    top: 35px;\n}\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    padding: 5px;\n    width: 90px;\n    color: rgba(255, 255, 255, 1);\n\n    text-align: center;\n    font-size: 10px;\n    overflow-y: auto;\n    cursor: pointer;\n\n    @media screen and (min-width: 375px) {\n      width: 110px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 120px;\n      font-size: 16px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    ::-webkit-scrollbar {\n      box-sizing: border-box;\n      width: 5px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: rgba(255, 255, 255, 1);\n      border-radius: 10px;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      border-radius: 10px;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n    }\n  }\n\n  .react-datepicker__current-month {\n    margin-top: 15px;\n    margin-bottom: 11px;\n    font-size: 20px;\n    font-weight: 600;\n    line-height : 1.2;\n\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day-name {\n     width: 46px;\n    height: 42px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day {\n    width: 46px;\n    height: 46px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n    :hover,\n    :focus {\n      background-color: var(--auth-bg-color);\n      color: var(--hover-btn-background-color);\n      border-radius: 24px;\n      opacity: 0.7;\n    }\n  }\n\n\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 1));\n    opacity: 40%;\n  }\n\n\n    .react-datepicker__day--today,\n  .react-datepicker__day--selected {\n    background-color: rgba(255, 255, 255, 1);\n    color: rgba(62, 133, 243, 1);\n    border-radius: 50%;\n    opacity: 1;\n  }\n\n    .react-datepicker__day--keyboard-selected{\n            border-radius: 50%;\n    }\n\n    .react-datepicker__month {\n    margin: 0;\n}\n\n\n.react-datepicker__navigation--previous {\n    left: 7px;\n    top: 30px;\n}\n\n.react-datepicker__navigation--next {\n    right: 7px;\n    top: 30px;\n}\n\n.react-datepicker__day-names {\nborder-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n    `;\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  padding: 40px;\n  border: 0.8px solid #e3f3ff;\n  border-radius: 29px;\n`;\n\nexport const Text = styled.p`\n  color: #343434;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 150%;\n  text-align: left;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { Container, Text } from './StatisticsPage.styled';\nimport { PeriodPaginator } from 'components/CalendarToolbar/PeriodPaginator/PeriodPaginator';\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\n\nconst StatisticsPage = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n\n  const data = [\n    {\n      name: 'To Do',\n      uv: 80,\n      pv: 60,\n    },\n    {\n      name: 'In Progress',\n      uv: 70,\n      pv: 50,\n    },\n    {\n      name: 'Done',\n      uv: 98,\n      pv: 45,\n    },\n  ];\n\n  const renderLabel = props => {\n    const { x, y, width, value } = props;\n\n    return (\n      <text x={x + width / 2} y={y} fill=\"#black\" textAnchor=\"middle\" dy={-6}>\n        {value}\n      </text>\n    );\n  };\n\n  return (\n    <div style={{ padding: '100px' }}>\n      <PeriodPaginator\n        minDate={'Jun 23 2023'}\n        date={date}\n        setDate={handleSetDate}\n        typenav={'day'}\n      />\n\n      <Container style={{ width: 860, height: 440, margin: 'auto' }}>\n        <Text>Tasks</Text>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            width={150}\n            height={40}\n            data={data}\n            barGap={-95}\n            maxBarSize={27}\n            margin={{\n              top: 20,\n              right: 20,\n              left: 20,\n              bottom: 20,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"0\" vertical={false} />\n            <XAxis dataKey=\"name\" />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              domain={[0, 'dataMax + 2']}\n              tickCount={6}\n            />\n            <Tooltip cursor={{ fill: 'transparent' }} />\n            <Bar\n              dataKey=\"pv\"\n              unit=\"%\"\n              fill=\"url(#gradient)\"\n              label={{ content: renderLabel }}\n              radius={[0, 0, 10, 10]}\n            />\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0.1} />\n\n                <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={1} />\n              </linearGradient>\n            </defs>\n            <Bar\n              dataKey=\"uv\"\n              unit=\"%\"\n              fill=\"url(#gradient2)\"\n              label={{ content: renderLabel }}\n              radius={[0, 0, 10, 10]}\n            />\n            <defs>\n              <linearGradient id=\"gradient2\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0.1} />\n\n                <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={1} />\n              </linearGradient>\n            </defs>\n            {/* <LabelList\n              dataKey=\"uv\"\n              position=\"top\"\n              style={{ fill: '#343434' }}\n            /> */}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n","export const getDate = state => state.date;"],"names":["Period","styled","PickerWrapper","DatePickerWrapper","DatePickerCastom","DatePickerStyles","Wrapper","ContainerBtn","Button","ButtonLeft","props","typeDate","ButtonRight","ArrowLeft","MdOutlineKeyboardArrowLeft","disabled","ArrowRight","MdOutlineKeyboardArrowRight","formatPeriod","date","type","options","formattedDate","month","year","Intl","DateTimeFormat","format","day","newDate","split","dayMonth","reverse","join","PeriodPaginator","minDate","setDate","typenav","pathname","useLocation","path","includes","page","navigate","useNavigate","useState","period","setPeriod","openPicker","setOpenPicker","minDateDisabled","setMinDateDisabled","handleClick","num","modifiedDate","Date","setMonth","getMonth","getDate","changeDate","useEffect","newParams","replace","months","getFullYear","arrDate","newMinDate","onClick","open","selected","calendarStartDay","closeOnSelect","onChange","newValue","formatWeekDay","nameOfDay","slice","onClickOutside","FormUserProfile","Form","BtnUploadAvatar","Field","Avatar","LabelAvatar","AvatarWrapper","theme","UserName","UserLabel","Input","Label","MainFieldWrapper","BlockFieldWrapper","SubmitBtn","DatePicker","Container","Text","dispatch","useDispatch","useSelector","renderLabel","x","y","width","value","fill","textAnchor","dy","style","padding","toString","height","margin","ResponsiveContainer","BarChart","data","name","uv","pv","barGap","maxBarSize","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","YAxis","axisLine","tickLine","domain","tickCount","Tooltip","cursor","Bar","unit","label","content","radius","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","state"],"sourceRoot":""}