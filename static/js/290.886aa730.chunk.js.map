{"version":3,"file":"static/js/290.886aa730.chunk.js","mappings":"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","sources":["components/ChoosedMonth/CalendarTable/CalendarTable.styled.jsx","components/ChoosedMonth/CalendarTable/CalendarTable.js","components/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.styled.jsx","components/ChoosedMonth/MonthCalendarHead/MonthCalendarHead.js","components/ChoosedMonth/ChoosedMonth.jsx","redux/currentDate/selector.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useMedia.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst getTaskColor = props => {\n  switch (props.taskColor) {\n    case 'low':\n      return 'color: #3E85F3; background-color: #CEEEFD;';\n    case 'medium':\n      return 'color: #F3B249; background-color: #FCF0D4;';\n    case 'high':\n      return 'color: #EA3D65; background-color: #FFD2DD;';\n    default:\n      return 'color: #3E85F3; background-color: #FFFFFF';\n  }\n};\n\nexport const GridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  border-radius: 8px;\n`;\n\nexport const CurrentDay = styled.div`\n  color: ${props => (props.isCurrentDate ? '#FFFFFF' : 'inherit')};\n  background-color: ${props => (props.isCurrentDate ? '#3e85f3' : 'inherit')};\n  border-radius: 6px;\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  width: 22px;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    margin: -4px -8px;\n    border-radius: 8px;\n  }\n`;\n\nexport const SelectedCell = styled.ul`\n  background-color: red;\n  color: red;\n`;\n\nexport const CellWrapper = styled(NavLink)`\n  min-width: 28px;\n  min-height: 94px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background: #fff;\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.17;\n  color: ${props => (props.selected ? 'red' : '#343434')};\n\n  &:first-child {\n    border-top-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-bottom-right-radius: 8px;\n  }\n\n  &:nth-child(7) {\n    border-top-right-radius: 8px;\n  }\n\n  &:nth-last-child(7) {\n    border-bottom-left-radius: 8px;\n  }\n\n  @media (min-width: 376px) {\n    min-width: 48px;\n  }\n\n  @media (min-width: 768px) {\n    min-width: 100px;\n    height: 144px;\n    line-height: 1.12;\n  }\n\n  @media (min-width: 1280px) {\n    height: 135px;\n  }\n`;\n\nexport const DayWrapper = styled.div`\n  padding: 10px 12px;\n  font-weight: 700;\n  font-family: 'InterBolt';\n\n  @media (min-width: 768px) {\n    padding: 18px 22px;\n  }\n`;\n\nexport const ShowDayWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #fff;\n  padding: 40px;\n`;\n\nexport const TaskItem = styled.li`\n  height: 22px;\n  padding: 4px 4px 4px 8px;\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.4;\n  border-radius: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n  ${props => getTaskColor(props)};\n\n  @media (min-width: 768px) {\n    min-width: 92px;\n    height: 26px;\n    padding: 4px 8px 4px 12px;\n    font-size: 10px;\n    line-height: 1.29;\n  }\n\n  @media (min-width: 1280px) {\n    min-width: 114px;\n  }\n`;\n\nexport const TasksMoreLabel = styled.div`\n  margin-top: auto;\n  margin: auto;\n  color: #3e85f3;\n  text-align: center;\n  overflow: hidden;\n  font-size: 14px;\n`;\nexport const TaskWrapper = styled.ul`\n  list-style-type: none;\n  padding: 0 8px 0px 8px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport {\n  CellWrapper,\n  CurrentDay,\n  DayWrapper,\n  GridWrapper,\n  Modal,\n  ModalContent,\n  ShowDayWrapper,\n  TaskItem,\n  TasksMoreLabel,\n  TaskWrapper,\n} from './CalendarTable.styled';\nimport { nanoid } from 'nanoid';\n\nexport const CalendarTable = ({ date, setDate }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [task, setTask] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [calendarGrid, setCalendarGrid] = useState([]);\n\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  useEffect(() => {\n    generateCalendar();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date]);\n\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleTaskChange = event => {\n    setTask(event.target.value);\n  };\n  const handleTaskSubmit = event => {\n    event.preventDefault();\n    const newTask = {\n      date: selectedDate,\n      task: task,\n    };\n    setTasks([...tasks, newTask]);\n    setTask('');\n    closeModal();\n  };\n\n  const generateCalendar = () => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDayIndex = new Date(year, month, 1).getDay();\n\n    const calendarGrid = [];\n    const emptyCellsBefore = firstDayIndex === 0 ? 6 : firstDayIndex - 1;\n    const totalWeeks = Math.ceil((emptyCellsBefore + daysInMonth) / 7);\n\n    for (let i = 0; i < emptyCellsBefore; i++) {\n      calendarGrid.push(<CellWrapper key={nanoid()}/>);\n    }\n\n    for (let dayNum = 1; dayNum <= daysInMonth; dayNum++) {\n      const dateS = new Date(year, month, dayNum);\n      const isCurrentDay =\n        dayNum === date.getDate() &&\n        month === new Date().getMonth() &&\n        year === new Date().getFullYear();\n\n      const dayTasks = tasks.filter(\n        task => task.dateS.toDateString() === dateS.toDateString()\n        );\n\n      calendarGrid.push(\n        <CellWrapper\n          key={nanoid()}\n          selected={selectedDate === date}\n          to={`/calendar/day/${dayNum}`}\n        >\n          <ShowDayWrapper onClick={() => setDate(dateS)}>\n            <DayWrapper>\n              <CurrentDay isCurrentDate={isCurrentDay}>{dayNum}</CurrentDay>\n            </DayWrapper>\n          </ShowDayWrapper>\n          {dayTasks.length > 0 && (\n            <TaskWrapper>\n              {dayTasks.slice(0, 2).map(task => (\n                <TaskItem key={nanoid()} onClick={() => handleDateClick(date)}>\n                  {task.task}\n                </TaskItem>\n              ))}\n            </TaskWrapper>\n          )}\n          {dayTasks?.length > 2 && <TasksMoreLabel>...</TasksMoreLabel>}\n        </CellWrapper>\n      );\n    }\n\n    const remainingCells = totalWeeks * 7 - emptyCellsBefore - daysInMonth;\n    for (let i = 0; i < remainingCells; i++) {\n      calendarGrid.push(<CellWrapper key={nanoid()}/>);\n    }\n\n    setCalendarGrid(calendarGrid);\n  };\n\n\n  return (\n    <>\n      <GridWrapper>\n        {calendarGrid}\n        {isModalOpen && (\n          <Modal>\n            <ModalContent>\n              <h3>Selected Date:</h3>\n              <p>{selectedDate?.toDateString()}</p>\n              <form onSubmit={handleTaskSubmit}>\n                <label htmlFor=\"task\">Task:</label>\n                <input\n                  type=\"text\"\n                  id=\"task\"\n                  value={task}\n                  onChange={handleTaskChange}\n                />\n                <button type=\"submit\">Add Task</button>\n              </form>\n              <button onClick={closeModal}>Close</button>\n            </ModalContent>\n          </Modal>\n        )}\n      </GridWrapper>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  padding-left: 0;\n  margin-bottom: 14px;\n`;\n\nexport const CellWrapper = styled.div`\n  height: 50px;\n  background: #ffffff;\n  font-family: 'InterSemiBolt';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.12;\n  text-align: center;\n  text-transform: uppercase;\n  color: #343434;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:first-child {\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n  }\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n  }\n\n  @media (min-width: 768px) {\n    height: 46px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n","import {\n  CellWrapper,\n  CellWrapperWeekend,\n  GridWrapper,\n} from './MonthCalendarHead.styled';\nimport { useMedia } from 'react-use';\n\nexport const MonthCalendarHead = () => {\n  const isMobile = useMedia('(max-width: 767px)');\n  return (\n    <GridWrapper>\n      {isMobile ? (\n        <>\n          <CellWrapper>m</CellWrapper>\n          <CellWrapper>t</CellWrapper>\n          <CellWrapper>w</CellWrapper>\n          <CellWrapper>t</CellWrapper>\n          <CellWrapper>f</CellWrapper>\n          <CellWrapper>\n            <CellWrapperWeekend>s</CellWrapperWeekend>\n          </CellWrapper>\n          <CellWrapper>\n            <CellWrapperWeekend>s</CellWrapperWeekend>\n          </CellWrapper>\n        </>\n      ) : (\n        <>\n          <CellWrapper>mon</CellWrapper>\n          <CellWrapper>tue</CellWrapper>\n          <CellWrapper>wed</CellWrapper>\n          <CellWrapper>thu</CellWrapper>\n          <CellWrapper>fri</CellWrapper>\n          <CellWrapper>\n            <CellWrapperWeekend>sat</CellWrapperWeekend>\n          </CellWrapper>\n          <CellWrapper>\n            <CellWrapperWeekend>sun</CellWrapperWeekend>\n          </CellWrapper>\n        </>\n      )}\n    </GridWrapper>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { CalendarTable } from './CalendarTable/CalendarTable';\nimport { MonthCalendarHead } from './MonthCalendarHead/MonthCalendarHead';\n\nimport {getDate} from 'redux/currentDate/selector'\nimport {setDate} from 'redux/currentDate/curentDateSlice'\n\nconst ChoosedMonth = () => {\n\n  const dispatch = useDispatch()\n  const date = new Date(useSelector(getDate))\n\n  const handleSetDate = (newDate) => {\n    dispatch(setDate(newDate.toString()))\n  }\n  return (\n    <div>\n      <MonthCalendarHead />\n      <CalendarTable date={date} setDate={handleSetDate}/>\n    </div>\n  );\n};\n\nexport default ChoosedMonth\n","export const getDate = state => state.date;","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexport default useMedia;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["GridWrapper","styled","CurrentDay","props","isCurrentDate","CellWrapper","NavLink","selected","DayWrapper","ShowDayWrapper","Modal","ModalContent","TaskItem","taskColor","getTaskColor","TasksMoreLabel","TaskWrapper","CalendarTable","date","setDate","useState","selectedDate","setSelectedDate","isModalOpen","setIsModalOpen","task","setTask","tasks","setTasks","calendarGrid","setCalendarGrid","useEffect","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","generateCalendar","closeModal","year","getFullYear","month","getMonth","daysInMonth","Date","getDate","firstDayIndex","getDay","emptyCellsBefore","totalWeeks","Math","ceil","i","push","nanoid","dayNum","dateS","isCurrentDay","dayTasks","filter","toDateString","to","onClick","length","slice","map","handleDateClick","remainingCells","onSubmit","event","preventDefault","newTask","htmlFor","type","id","value","onChange","target","CellWrapperWeekend","MonthCalendarHead","isMobile","useMedia","dispatch","useDispatch","useSelector","newDate","toString","state","isBrowser","window","query","defaultState","_a","undefined","matchMedia","matches","getInitialState","setState","mounted","mql","addListener","removeListener","size","crypto","getRandomValues","Uint8Array","reduce","byte","toUpperCase"],"sourceRoot":""}