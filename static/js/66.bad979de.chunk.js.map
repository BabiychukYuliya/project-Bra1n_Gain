{"version":3,"file":"static/js/66.bad979de.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/Account/AccountPage.styled.jsx","pages/Account/AccountPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { theme } from '../../constants/Theme';\n\nexport const Wrapper = styled.div`\n display: flex;\n flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background: rgba(255, 255, 255, 1); \n  border-radius: 16px;\n   padding: 40px 18px;\n\n    @media screen and (min-width: 1440px) {\n      padding-top: 60px;\n    }\n`;\n\nexport const FormUserProfile = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\n\n    @media screen and (min-width: 375px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 354px;\n    }\n     @media screen and (min-width: 1440px) {\n        width: 758px;\n    }\n`;\n\nexport const BtnUploadAvatar = styled(Field)`\nopacity: 1;\nposition: absolute;\nbottom: -6%;\nright: 20%;\noverflow: hidden;\nwidth: 14px;\nheight: 14px;\nborder-radius: 50%;\nfont-size: 15px;\n\n  ::before {\n    content: \" +\";\n    color: rgba(255, 255, 255, 1);\n    cursor: pointer;\n    padding: 5px;\n    background: rgba(62, 133, 243, 1);\n    position: absolute;\n          // transition: background анимация;\n    top: -8px;\n    left: -6px;\n    width: 40px;\n    height: 40px;\n    }\n\n @media screen and (min-width: 768px) {\n      font-size: 24px;\n       width: 24px;\n       height: 24px;\n       bottom: 31%;\n       right: 14%;\n\n       ::before {\n         top: -8px;\n          left: -6px;\n          width: 40px;\n          height: 40px;\n       }\n    }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: inherit;\n  width: inherit;\n  height: inherit;\n`;\n\nexport const LabelAvatar = styled.label`\nposition: relative;\nmargin: 0 auto;\ntext-align: center;\n`;\n\n\nexport const AvatarWrapper = styled.div`\nposition: absolute;\ntop: -71px;\nright: -36px;\nwidth: 72px;\nheight: 72px;\nborder: 2px solid ${theme.colors.primaryColor};\nborder-radius: 50%;\n\n @media screen and (min-width: 768px) {\n       top: 0;\n       left: -60px;\n       width: 124px;\n       height: 124px;\n      \n    }\n`;\n\nexport const UserName = styled.p`\nmargin: 0 auto;\nmargin-top: 18px;\n\nfont-size: 14px;\nfont-weight: 700;\n\n @media screen and (min-width: 768px) {\n    margin-top: 144px;\n      font-size: 18px;\n      margin-bottom: 8px;\n    }\n`;\n\nexport const UserLabel = styled.span`\nmargin-top: 6px;\nmargin-bottom: 40px;\ntext-align: center;\nfont-size: 12px;\nfont-weight: 600;\nline-height: 1.17;\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const Input = styled(Field)`\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 1.17;\ncolor: rgba(17, 17, 17, 1);\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const MainFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n   flex-wrap: wrap;\n   gap: 50px;\n   margin-bottom: 70px;\n    }\n`;\nexport const BlockFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n\n    }\n`;\n\n\nexport const SubmitBtn = styled.button`\n  margin: 0 auto;\n  margin-top: 22px;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: rgba(62, 133, 243, 1);\n  color: rgba(255, 255, 255, 1);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n      width: 262px;\n    }\n\n//   transition: background-color анимация;\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    background-color: rgba(43, 120, 239, 1);\n  }\n\n  :disabled {\n    opacity: 0.4;\n  }\n\n`;\n\nexport const DatePickerStyles = styled(DatePicker)`\n\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-family: Inter-600, sans-serif;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.3;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: rgba(62, 133, 243, 1);\n    border-radius: 16px;\n    overflow: hidden;\n    border: none;\n    color: rgba(255, 255, 255, 1);\n    width: 327px;\n    height: 354px;\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n}\n.react-datepicker__header {\n        position: relative;\n\n    background-color: rgba(62, 133, 243, 1);\n    border-bottom: 1px solid rgba(62, 133, 243, 1);\n  }\n\n  .react-datepicker__navigation-icon {\n    ::before {\n      border-color: rgba(255, 255, 255, 1);\n    }\n\n.react-datepicker__navigation--next {\n    right: 9px;\n    top: 35px;\n}\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    padding: 5px;\n    width: 90px;\n    color: rgba(255, 255, 255, 1);\n\n    text-align: center;\n    font-size: 10px;\n    overflow-y: auto;\n    cursor: pointer;\n\n    @media screen and (min-width: 375px) {\n      width: 110px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 120px;\n      font-size: 16px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    ::-webkit-scrollbar {\n      box-sizing: border-box;\n      width: 5px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: rgba(255, 255, 255, 1);\n      border-radius: 10px;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      border-radius: 10px;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n    }\n  }\n\n  .react-datepicker__current-month {\n    margin-top: 15px;\n    margin-bottom: 11px;\n    font-size: 20px;\n    font-weight: 600;\n    line-height : 1.2;\n\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day-name {\n     width: 46px;\n    height: 42px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day {\n    width: 46px;\n    height: 46px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n    :hover,\n    :focus {\n      background-color: var(--auth-bg-color);\n      color: var(--hover-btn-background-color);\n      border-radius: 24px;\n      opacity: 0.7;\n    }\n  }\n\n\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 1));\n    opacity: 40%;\n  }\n\n\n    .react-datepicker__day--today,\n  .react-datepicker__day--selected {\n    background-color: rgba(255, 255, 255, 1);\n    color: rgba(62, 133, 243, 1);\n    border-radius: 50%;\n    opacity: 1;\n  }\n\n    .react-datepicker__day--keyboard-selected{\n            border-radius: 50%;\n    }\n\n    .react-datepicker__month {\n    margin: 0;\n}\n\n\n.react-datepicker__navigation--previous {\n    left: 7px;\n    top: 30px;\n}\n\n.react-datepicker__navigation--next {\n    right: 7px;\n    top: 30px;\n}\n\n.react-datepicker__day-names {\nborder-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n    `;\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\n// import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik } from 'formik';\nimport { updateUser } from 'redux/auth/operations';\n\nimport { selectUser } from 'redux/auth/selectors.js';\n\nimport {\n  Wrapper,\n  Avatar,\n  AvatarWrapper,\n  FormUserProfile,\n  BtnUploadAvatar,\n  LabelAvatar,\n  Input,\n  Label,\n  SubmitBtn,\n  UserLabel,\n  UserName,\n  DatePickerStyles,\n  DatePickerWrapper,\n  MainFieldWrapper,\n  BlockFieldWrapper,\n} from './UserForm.styled';\n\nexport const UserForm = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const [avatarUrl, setAvatarUrl] = useState('');\n  const [newBirthday, setNewBirthday] = useState('');\n  const [newAvatar, setNewAvatar] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n\n  // Вытягивает дату из бека в формате дд/ммм/гггг и преобразовывает сразу в формат для календаря\n\n\n  useEffect(() => {\n    const newDate = user?.birthday.split(\"/\").reverse().join(\"-\");\n    if (user?.birthday !== \"\") {\n      setStartDate(new Date(Date.parse(newDate)));\n    }\n  }, [user?.birthday]);\n\n  // Функция для отображения превью аватарки перед отправкой формы\n\n  function previewFiles(avatar) {\n    const reader = new FileReader();\n    reader.readAsDataURL(avatar);\n    reader.onloadend = () => {\n      setNewAvatar(reader.result);\n    }\n  }\n\n\n  // Создает FormData, наполняет ее полями формы, которые редактировались и отправляет на бэк\n\n  const handleFormSubmit = async (values, { resetForm }) => {\n    const formData = new FormData();\n    console.log(avatarUrl);\n    try {\n      if (avatarUrl) {\n        formData.append('avatarUrl', avatarUrl);\n      }\n      if (initialValues.name !== values.name && values.name) {\n        formData.append('name', values.name);\n      }\n      if (initialValues.email !== values.email && values.email) {\n        formData.append('email', values.email);\n      }\n      if (initialValues.phone !== values.phone) {\n        formData.append('phone', values.phone);\n      }\n      if (initialValues.skype !== values.skype) {\n        formData.append('skype', values.skype);\n      }\n      formData.append(\n        'birthday',\n        new Date(startDate).toLocaleDateString('en-GB')\n      );\n\n      // Значения formData\n      // for (const value of formData.values()) {\n      //   console.log(value);\n      // }\n\n      await dispatch(updateUser(formData));\n      resetForm();\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //поля формы при загрузке страницы\n  const initialValues = {\n    avatarURL: user?.avatarURL,\n    name: user?.name || '',\n    email: user?.email || '',\n    phone: user?.phone || '',\n    skype: user?.skype || '',\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        dirty\n        initialValues={initialValues}\n        enableReinitialize={true}\n        onSubmit={handleFormSubmit}\n      >\n        {({ values, handleSubmit, handleChange, handleBlur, dirty }) => (\n          <div>\n            <FormUserProfile autoComplete=\"off\" onSubmit={handleSubmit}>\n              <LabelAvatar htmlFor=\"avatarURL\">\n                <AvatarWrapper>\n\n                  {newAvatar ?\n                    (<Avatar src={newAvatar} alt=\"avatar\" />)\n                    :\n                    (<Avatar src={user.avatarUrl} alt=\"avatar\" />)\n                  }\n                  <BtnUploadAvatar\n                    type=\"file\"\n                    name=\"avatarURL\"\n                    accept=\".jpg, .jpeg, .png\"\n                    onChange={e => {\n                      // blop для отправки на бєк\n                      setAvatarUrl(URL.createObjectURL(e.target.files[0]));\n                      previewFiles(e.target.files[0]);\n                    }}\n                  />\n                </AvatarWrapper>\n              </LabelAvatar>\n              <UserName>\n                {values.name ? values.name : initialValues.name}\n              </UserName>\n              <UserLabel>User</UserLabel>\n\n              <MainFieldWrapper>\n                <BlockFieldWrapper>\n                  <Label htmlFor=\"name\">\n                    User Name\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      value={values.name}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      placeholder=\"Your Name\"\n                    />\n                  </Label>\n                  <DatePickerWrapper>\n                    <Label htmlFor=\"birthday\">\n                      Birthday\n                      <DatePickerStyles\n                        showYearDropdown\n                        dirty\n                        type={'date'}\n                        input={true}\n                        selected={startDate}\n                        onChange={date => {\n                          setStartDate(date);\n                          setNewBirthday(date.toLocaleDateString('en-GB'));\n                          console.log(newBirthday);\n                        }}\n                        minDate={new Date('1923-01-01T00:00:00')}\n                        maxDate={new Date()}\n                        formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n                        calendarStartDay={1}\n                        placeholderText=\"Click to select a date\"\n                        dateFormat=\"dd/MM/yyyy\"\n                      />\n                    </Label>\n                  </DatePickerWrapper>\n                  <Label htmlFor=\"email\">\n                    Email\n                    <Input type=\"email\" name=\"email\" />\n                  </Label>\n                </BlockFieldWrapper>\n                <BlockFieldWrapper>\n                  <Label htmlFor=\"phone\">\n                    Phone\n                    <Input type=\"text\" name=\"phone\" />\n                  </Label>\n\n                  <Label htmlFor=\"skype\">\n                    Skype\n                    <Input\n                      type=\"text\"\n                      name=\"skype\"\n                      value={values.skype ? values.skype : ''}\n                      placeholder=\"Add a skype number\"\n                    />\n                  </Label>\n                </BlockFieldWrapper>\n              </MainFieldWrapper>\n\n              <SubmitBtn type=\"submit\" disabled={!dirty}>\n                Save changes\n              </SubmitBtn>\n            </FormUserProfile>\n          </div>\n        )}\n      </Formik>\n\n    </Wrapper >\n  );\n};\n","import styled from 'styled-components';\n\nexport const AccountPageContainer = styled.div`\nposition: relative;\nmargin-top: 64px;\nbackground: rgba(247, 246, 249, 1);\npadding-top: 31px;\n// font-family: Inter;\n`;","import { UserForm } from 'components/UserForm/UserForm';\nimport { AccountPageContainer } from './AccountPage.styled';\n\nexport default function AccountPage() {\n    return (\n        <div>\n            <AccountPageContainer>\n                <UserForm />\n            </AccountPageContainer>\n\n        </div>\n    );\n}\n\n"],"names":["Wrapper","styled","FormUserProfile","Form","BtnUploadAvatar","Field","Avatar","LabelAvatar","AvatarWrapper","theme","UserName","UserLabel","Input","Label","MainFieldWrapper","BlockFieldWrapper","SubmitBtn","DatePickerStyles","DatePicker","DatePickerWrapper","UserForm","user","useSelector","selectUser","dispatch","useDispatch","useState","avatarUrl","setAvatarUrl","newBirthday","setNewBirthday","newAvatar","setNewAvatar","Date","startDate","setStartDate","useEffect","newDate","birthday","split","reverse","join","parse","handleFormSubmit","values","resetForm","formData","FormData","console","log","append","initialValues","name","email","phone","skype","toLocaleDateString","updateUser","error","avatarURL","dirty","enableReinitialize","onSubmit","handleSubmit","handleChange","handleBlur","autoComplete","htmlFor","src","alt","type","accept","onChange","e","URL","createObjectURL","target","files","avatar","reader","FileReader","readAsDataURL","onloadend","result","previewFiles","value","onBlur","placeholder","showYearDropdown","input","selected","date","minDate","maxDate","formatWeekDay","nameOfDay","slice","calendarStartDay","placeholderText","dateFormat","disabled","AccountPageContainer","AccountPage"],"sourceRoot":""}