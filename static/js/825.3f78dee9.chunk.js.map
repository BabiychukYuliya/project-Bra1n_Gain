{"version":3,"file":"static/js/825.3f78dee9.chunk.js","mappings":"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","sources":["../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useMedia.js","../node_modules/date-fns/esm/isWeekend/index.js","components/CalendarHead/CalendarHead.styled.jsx","components/CalendarHead/CalendarHead.js","components/ChoosedMonth/CalendarTable/CalendarTable.styled.jsx","../node_modules/nanoid/index.browser.js","components/ChoosedMonth/CalendarTable/CalendarTable.js","components/ChoosedMonth/ChoosedMonth.jsx","redux/currentDate/selector.js"],"sourcesContent":["export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexport default useMedia;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * const result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","import styled from 'styled-components';\n// import styled, { css } from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  margin-top: 24px;\n  margin-bottom: 14px;\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.mainBackgroundColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.CalendarHead};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props => props.weekend && '#3e85f3'};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './CalendarHead.styled';\n\nexport const CalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst getTaskColor = props => {\n  switch (props.taskColor) {\n    case 'low':\n      return 'color: #3E85F3; background-color: #CEEEFD;';\n    case 'medium':\n      return 'color: #F3B249; background-color: #FCF0D4;';\n    case 'high':\n      return 'color: #EA3D65; background-color: #FFD2DD;';\n    default:\n      return 'color: #3E85F3; background-color: #FFFFFF';\n  }\n};\n\nexport const GridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  border-radius: 8px;\n`;\n\nexport const CurrentDay = styled.div`\n  color: ${props => (props.isCurrentDate ? '#FFFFFF' : 'inherit')};\n  background-color: ${props => (props.isCurrentDate ? '#3e85f3' : 'inherit')};\n  border-radius: 6px;\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  width: 22px;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    margin: -4px -8px;\n    border-radius: 8px;\n  }\n`;\n\nexport const SelectedCell = styled.ul`\n  background-color: red;\n  color: red;\n`;\n\nexport const CellWrapper = styled(NavLink)`\n  min-width: 28px;\n  min-height: 94px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  background: #fff;\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.17;\n  color: ${props => (props.selected ? 'red' : '#343434')};\n\n  &:first-child {\n    border-top-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-bottom-right-radius: 8px;\n  }\n\n  &:nth-child(7) {\n    border-top-right-radius: 8px;\n  }\n\n  &:nth-last-child(7) {\n    border-bottom-left-radius: 8px;\n  }\n\n  @media (min-width: 376px) {\n    min-width: 48px;\n  }\n\n  @media (min-width: 768px) {\n    min-width: 100px;\n    height: 144px;\n    line-height: 1.12;\n  }\n\n  @media (min-width: 1280px) {\n    height: 135px;\n  }\n`;\n\nexport const DayWrapper = styled.div`\n  padding: 10px 12px;\n  font-weight: 700;\n  font-family: 'InterBolt';\n\n  @media (min-width: 768px) {\n    padding: 18px 22px;\n  }\n`;\n\nexport const ShowDayWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #fff;\n  padding: 40px;\n`;\n\nexport const TaskItem = styled.li`\n  height: 22px;\n  padding: 4px 4px 4px 8px;\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.4;\n  border-radius: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n  ${props => getTaskColor(props)};\n\n  @media (min-width: 768px) {\n    min-width: 92px;\n    height: 26px;\n    padding: 4px 8px 4px 12px;\n    font-size: 10px;\n    line-height: 1.29;\n  }\n\n  @media (min-width: 1280px) {\n    min-width: 114px;\n  }\n`;\n\nexport const TasksMoreLabel = styled.div`\n  margin-top: auto;\n  margin: auto;\n  color: #3e85f3;\n  text-align: center;\n  overflow: hidden;\n  font-size: 14px;\n`;\nexport const TaskWrapper = styled.ul`\n  list-style-type: none;\n  padding: 0 8px 0px 8px;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React, { useState, useEffect } from 'react';\nimport {\n  CellWrapper,\n  CurrentDay,\n  DayWrapper,\n  GridWrapper,\n  // Modal,\n  // ModalContent,\n  ShowDayWrapper,\n  TaskItem,\n  TasksMoreLabel,\n  TaskWrapper,\n} from './CalendarTable.styled';\nimport { nanoid } from 'nanoid';\nimport { useSelector } from 'react-redux';\n\nexport const CalendarTable = ({ date, setDate }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  const [calendarGrid, setCalendarGrid] = useState([]);\n\n  const tasks = useSelector(state => state.tasks.tasks);\n\n  // const [task, setTask] = useState('');\n  // const [tasks, setTasks] = useState([]);\n\n  // useEffect(() => {\n  //   const storedTasks = localStorage.getItem('tasks');\n  //   if (storedTasks) {\n  //     setTasks(JSON.parse(storedTasks));\n  //   }\n  // }, []);\n  // useEffect(() => {\n  //   localStorage.setItem('tasks', JSON.stringify(tasks));\n  // }, [tasks]);\n\n  useEffect(() => {\n    generateCalendar();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date]);\n\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    // setIsModalOpen(true);\n  };\n\n  // const closeModal = () => {\n  //   setIsModalOpen(false);\n  // };\n\n  // const handleTaskChange = event => {\n  //   setTask(event.target.value);\n  // };\n  // const handleTaskSubmit = event => {\n  //   event.preventDefault();\n  //   const newTask = {\n  //     date: selectedDate,\n  //     task: task,\n  //   };\n  //   setTasks([...tasks, newTask]);\n  //   setTask('');\n  //   closeModal();\n  // };\n\n  const generateCalendar = () => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDayIndex = new Date(year, month, 1).getDay();\n\n    const calendarGrid = [];\n    const emptyCellsBefore = firstDayIndex === 0 ? 6 : firstDayIndex - 1;\n    const totalWeeks = Math.ceil((emptyCellsBefore + daysInMonth) / 7);\n\n    for (let i = 0; i < emptyCellsBefore; i++) {\n      calendarGrid.push(<CellWrapper key={nanoid()} />);\n    }\n\n    for (let dayNum = 1; dayNum <= daysInMonth; dayNum++) {\n      const dateS = new Date(year, month, dayNum);\n      const isCurrentDay =\n        dayNum === date.getDate() &&\n        month === new Date().getMonth() &&\n        year === new Date().getFullYear();\n\n      const dayTasks = tasks.filter(\n        task => task.dateS.toDateString() === dateS.toDateString()\n      );\n\n      calendarGrid.push(\n        <CellWrapper\n          key={nanoid()}\n          selected={selectedDate === date}\n          to={`/calendar/day/${dayNum}`}\n        >\n          <ShowDayWrapper onClick={() => setDate(dateS)}>\n            <DayWrapper>\n              <CurrentDay isCurrentDate={isCurrentDay}>{dayNum}</CurrentDay>\n            </DayWrapper>\n          </ShowDayWrapper>\n          {dayTasks.length > 0 && (\n            <TaskWrapper>\n              {dayTasks.slice(0, 2).map(task => (\n                <TaskItem key={nanoid()} onClick={() => handleDateClick(date)}>\n                  {task.task}\n                </TaskItem>\n              ))}\n            </TaskWrapper>\n          )}\n          {dayTasks?.length > 2 && <TasksMoreLabel>...</TasksMoreLabel>}\n        </CellWrapper>\n      );\n    }\n\n    const remainingCells = totalWeeks * 7 - emptyCellsBefore - daysInMonth;\n    for (let i = 0; i < remainingCells; i++) {\n      calendarGrid.push(<CellWrapper key={nanoid()} />);\n    }\n\n    setCalendarGrid(calendarGrid);\n  };\n\n  return (\n    <>\n      <GridWrapper>\n        {calendarGrid}\n        {/* {isModalOpen && (\n          <Modal>\n            <ModalContent>\n              <h3>Selected Date:</h3>\n              <p>{selectedDate?.toDateString()}</p>\n              <form onSubmit={handleTaskSubmit}>\n                <label htmlFor=\"task\">Task:</label>\n                <input\n                  type=\"text\"\n                  id=\"task\"\n                  value={task}\n                  onChange={handleTaskChange}\n                />\n                <button type=\"submit\">Add Task</button>\n              </form>\n              <button onClick={closeModal}>Close</button>\n            </ModalContent>\n          </Modal>\n        )} */}\n      </GridWrapper>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { CalendarTable } from './CalendarTable/CalendarTable';\n\nimport {getDate} from 'redux/currentDate/selector'\nimport {setDate} from 'redux/currentDate/curentDateSlice'\nimport { CalendarHead } from 'components/CalendarHead/CalendarHead';\n\nconst ChoosedMonth = () => {\n\n  const dispatch = useDispatch()\n  const date = new Date(useSelector(getDate))\n\n  const handleSetDate = (newDate) => {\n    dispatch(setDate(newDate.toString()))\n  }\n  return (\n    <div>\n    <CalendarHead date={date} setDate={handleSetDate}/>\n      <CalendarTable date={date} setDate={handleSetDate}/>\n    </div>\n  );\n};\n\nexport default ChoosedMonth\n","export const getDate = state => state.date;"],"names":["isBrowser","window","query","defaultState","_a","useState","undefined","matchMedia","matches","getInitialState","state","setState","useEffect","mounted","mql","onChange","addListener","removeListener","isWeekend","dirtyDate","requiredArgs","arguments","date","toDate","day","getDay","GridWrapper","styled","props","page","CellWrapperOfDate","theme","mainBackgroundColor","CalendarHead","Day","weekend","Date","isCurrentDay","setDate","path","useLocation","pathname","includes","formatDay","useMedia","start","startOfWeek","weekStartsOn","end","endOfWeek","week","currentDay","formattedDate","format","dayOfWeek","push","fullDate","addDays","map","dateItem","isSameDay","onClick","CurrentDay","isCurrentDate","CellWrapper","NavLink","selected","DayWrapper","ShowDayWrapper","TaskItem","taskColor","getTaskColor","TasksMoreLabel","TaskWrapper","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","CalendarTable","selectedDate","setSelectedDate","calendarGrid","setCalendarGrid","tasks","useSelector","generateCalendar","year","getFullYear","month","getMonth","daysInMonth","getDate","firstDayIndex","emptyCellsBefore","totalWeeks","Math","ceil","i","dayNum","dateS","dayTasks","filter","task","toDateString","to","length","slice","handleDateClick","remainingCells","dispatch","useDispatch","handleSetDate","newDate"],"sourceRoot":""}