{"version":3,"file":"static/js/158.5dc56838.chunk.js","mappings":"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","sources":["components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.js","components/ChoosedDay/TasksColumn/TasksColumn.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/ToolBarTaskModal/ToolBarTaskModal.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/ToolBarTaskModal/ToolBarTaskModal.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.js","components/TaskForm/TaskForm.styled.js","components/TaskForm/TaskForm.js","components/TaskModal/TaskModal.js","components/ChoosedDay/TasksColumn/TasksColumn.js","components/ChoosedDay/TasksColumnsList.styled.jsx","components/ChoosedDay/TasksColumnsList.js","components/ChoosedDay/ChoosedDay.js","components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","redux/currentDate/selector.js","redux/modal/selector.js","redux/task/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  /* padding: 30px 0; */\n  /* background-color: transparent; */\n`;\n\nexport const AddTask = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 20px;\n  width: 100%;\n\n  cursor: pointer;\n  border-radius: 8px;\n  backface-visibility: hidden;\n  transition: transform 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    background-color: #2b78ef;\n  }\n\n  //! для светлой темы\n  border: 1px dashed #3e85f3;\n  background-color: ${props => props.theme.colors.accentColor};\n  //? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  color: ${props => props.theme.colors.textColor};\n  //? color: ${props => props.theme.ltTextColor}; //переключение по теме\n\n  //! для темной темы\n  // border: none;\n  // background-color: #3e85f3;\n  //// ? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  // color: #ffffff;\n  //// ? color: ${props => props.theme.ltTextColor}; //переключение по теме\n`;\n\nexport const Text = styled.span`\n  font-size: 14px;\n  font-family: Inter, sans-serif;\n  font-weight: 600;\n  line-height: 18px;\n`;\n","import { FiPlus } from 'react-icons/fi';\nimport { AddTask, Div, Text } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({  handleAddTask}) => {\n  return (\n    <Div>\n      <AddTask  type=\"button\" onClick={handleAddTask}>\n        <FiPlus size={24} />\n        <Text>Add task</Text>\n      </AddTask>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnsItem = styled.li`\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.borderColor};\n  width: 100%;\n  height: 100%;\n  background-color: ${props => props.theme.colors.componentsBgColor};\n\n  /* min-height: 155px; */\n  /* max-height: 432px; */\n\n  height: fit-content;\n  min-width: 280px;\n  line-height: 1.12;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 18px 18px 10px 18px;\n  gap: 16px;\n  font-family: 'InterSemiBolt';\n  max-width: 335px;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px 22px 28px;\n    font-size: 20px;\n    max-width: calc((100% - 48px) / 2);\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n    max-width: calc((100% - 54px) / 3);\n  }\n`;\n","import styled from 'styled-components';\n\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 7px 0;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 28px;\n  }\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-family: 'InterSemiBolt';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.11;\n  color: ${props => props.theme.colors.textColor};\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Icon = styled(AiOutlinePlusCircle)`\n  width: 22px;\n  height: 22px;\n  fill: ${props => props.theme.colors.textColor};\n  border-radius: 50%;\n  &:hover,\n  &:focus {\n    fill: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const BtnAddTop = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 22px;\n  height: 22px;\n`;\n","import { Wrap, ColumnTitle, BtnAddTop, Icon } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ title, handleAddTask }) => {\n\n  return (\n    <>\n      <Wrap>\n        <ColumnTitle>\n          {title === 'to-do'\n            ? 'To do'\n            : title === 'in-progress'\n            ? 'In progress'\n            : title === 'done'\n            ? 'Done'\n            : null}\n        </ColumnTitle>\n        <BtnAddTop onClick={handleAddTask}>\n          <Icon />\n        </BtnAddTop>\n      </Wrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  list-style: none;\n  width: 100%;\n  height: 100%;\n  padding-right: 6px;\n\n  overflow: hidden;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 6px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 30px #f2f2f2;\n    border-radius: 12px;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #e7e5e5;\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    gap: 18px;\n    margin-bottom: 32px;\n\n    /* width */\n    ::-webkit-scrollbar {\n      width: 8px;\n    }\n  }\n`;\n\nexport const ListItem = styled.li`\n  height: 108px;\n\n  @media screen and (min-width: 768px) {\n    height: 112px;\n  }\n`;\n","import styled from \"styled-components\"\n\nexport const Card = styled.div`\nposition: relative;\npadding: 14px 14px 18px 14px;\nwidth: 100%;\nheight: 100%;\nbackground-color: #F7F6F9;\nborder: 1px solid #DCE3E5CC;\nborder-radius: 8px;\n`;\n\nexport const TextTask = styled.p`\nmargin-bottom: 24px;\n\ncolor: #111;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\noverflow: hidden;\nfont-size: 14px;\nfont-family: Inter;\nfont-weight: 500;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 28px;\n  }\n`\n\nexport const WrapperToolbar = styled.div`\nposition: relative;\ndisplay: flex;\nalign-items: self-end;\njustify-content: space-between;\n`;\n\nexport const ContainerDataUser = styled.div`\ndisplay: flex;\nalign-items: self-end;\ngap: 8px;\n`;\n\nexport const Avatar = styled.img`\nwidth: 32px;\nheight: 32px;\nborder-radius: 50%;\n`;\n\nexport const Priority = styled.span`\nfont-size: 10px;\nfont-family: Inter;\nfont-weight: 600;\nline-height: 1.2;\n\ncolor: #F7F6F9;\npadding: 4px 12px;\nborder-radius: 4px;\nbackground-color: ${props => props.children === \"low\" ? \"#72C2F8\" : props.children === \"medium\" ? \"#F3B249\" : \"#EA3D65\"};\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const SectionToolbar = styled.div`\n  display: flex;\n  gap:10px;\n\n`;\n\nexport const TaskAction = styled.button`\n  width: 14px;\n  height: 14px;\n\n  border-radius: 50%;\n  cursor: pointer;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    transition-duration: 200ms;\n  }\n\n`;\n\nexport const Icon = styled.img`\n  width: 14px;\n  height: 14px;\n`;\n","import { SectionToolbar, TaskAction, Icon } from './Toolbar.styled';\nimport { useDispatch } from 'react-redux';\nimport { setModalAction, toggleModal, setDataTask, setModalTypeTask } from 'redux/modal/modalSlice';\nimport { deleteTask } from 'redux/task/operations';\n\nexport const Toolbar = ({ setTargetElement, setTaskModalOpen, task }) => {\n  const dispatch = useDispatch();\n\n  \nconst {_id } = task;\n\n  const handleClick = e => {\n    setTaskModalOpen(true);\n    setTargetElement(e.target);\n  };\n\n  const handleOpenModalEdit = e => {\n    dispatch(toggleModal());\n    dispatch(setModalAction(\"edit\"));\n    dispatch(setModalTypeTask());\n    dispatch(setDataTask(task));\n  };\n\n  const handleDeleteTask = e => {\n    dispatch(deleteTask(_id))\n  };\n\n  return (\n    <SectionToolbar>\n      <TaskAction onClick={handleClick}>\n        <Icon\n          src={\n            process.env.PUBLIC_URL +\n            '/images/icons/icon-arrow-circle-broken-right-16x16.svg'\n          }\n          alt=\"button-move\"\n        />\n      </TaskAction>\n      <TaskAction onClick={handleOpenModalEdit}>\n        <Icon\n          src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16.svg'}\n          alt=\"button-edit\"\n        />\n      </TaskAction>\n      <TaskAction onClick={handleDeleteTask}>\n        <Icon\n          src={process.env.PUBLIC_URL + '/images/icons/icon-trash-16x16.svg'}\n          alt=\"button-delete\"\n        />\n      </TaskAction>\n    </SectionToolbar>\n  );\n};\n","import styled from \"styled-components\"\nimport { TaskAction } from \"../Toolbar/Toolbar.styled\";\n\nexport const ModalCardTask = styled.ul`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 14px;\npadding: 14px;\nwidth: 147px;\nheight: 90px;\nbackground-color: #FFFFFF;\nborder-radius: 8px;\nbox-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10);\n@media screen and (min-width: 768px) {\npadding: 20px 24px;\n    \n  }\n`;\n\n\nexport const BtnMoove = styled(TaskAction)`\ndisplay: flex;\nwidth: 87px;\nalign-items: center;\njustify-content: space-between;\n\ncolor: #343434;\n\n@media screen and (min-width: 768px) {\nwidth: 99px;\n    \n    }\n`\nexport const Lable = styled.p`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 500;\nline-height: 1.2;\n\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nline-height: 1.3;\n    \n  }\n`\n\n\n","import { Icon } from '../Toolbar/Toolbar.styled';\nimport { BtnMoove, Lable, ModalCardTask } from './ToolBarTaskModal.styled';\nimport { createPortal } from 'react-dom';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { changeTaskCategory } from 'redux/task/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ToolBarTaskModal = ({\n  listId,\n  targetElement,\n  setTaskModalOpen,\n  taskId\n}) => {\n\n  const dispatch = useDispatch();\n\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n  const modalRef = useRef();\n\n  const moove = {\n    \"to-do\": 'To do',\n    \"in-progress\": 'In progress',\n    \"done\": 'Done',\n  };\n\n  const arrMoove = Object.keys(moove);\n  const mooveTask = arrMoove.filter(e => e !== listId);\n\n  const handleOutsideClick = useCallback(\n    event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setTaskModalOpen(false);\n      }\n    },\n    [setTaskModalOpen]\n  );\n\n  useEffect(() => {\n    const updateModalPosition = () => {\n      if (targetElement) {\n        const targetRect = targetElement.getBoundingClientRect();\n        const isMobile = window.innerWidth < 768;\n        const topOffsetX = isMobile ? targetRect.height + 12 : targetRect.height + 8;\n        const topOffsetY = isMobile ? targetRect.left - 70 : targetRect.left;\n        setModalPosition({\n          top: targetRect.top + topOffsetX,\n          left: topOffsetY,\n        });\n      }\n    };\n\n    updateModalPosition();\n\n    window.addEventListener('resize', updateModalPosition);\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      window.removeEventListener('resize', updateModalPosition);\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetElement]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setTaskModalOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst handleMooveTask = (e) => {\n  const category = e.currentTarget.getAttribute('data-moove');\n\n  dispatch(changeTaskCategory({id: taskId, category} ))\n  \n}\n\n  return createPortal(\n    <ModalCardTask\n      style={{ top: modalPosition.top, left: modalPosition.left }}\n      ref={modalRef}\n    >\n      {mooveTask.map(e => (\n        <li  key={e}>\n          <BtnMoove onClick={handleMooveTask} data-moove={e}>\n            <Lable>{moove[e]}</Lable>\n            <Icon\n              src={\n                process.env.PUBLIC_URL +\n                '/images/icons/icon-arrow-circle-broken-right-16x16.svg'\n              }\n              alt=\"button-move\"\n            />\n          </BtnMoove>\n        </li>\n      ))}\n    </ModalCardTask>,\n    modalRoot\n  );\n};\n","import { useAuth } from 'hooks/useAuth';\nimport {\n  Avatar,\n  Card,\n  ContainerDataUser,\n  TextTask,\n  WrapperToolbar,\n  Priority,\n} from './TaskColumnCard.styled';\nimport { Toolbar } from './Toolbar/Toolbar';\n\nimport { useState } from 'react';\nimport { ToolBarTaskModal } from \"./ToolBarTaskModal/ToolBarTaskModal\";\n\nexport const TaskColumnCard = ({\n  task,\n  listId,\n}) => {\n\n  const [taskModalOpen, setTaskModalOpen] = useState(false)\n  const [ targetElement, setTargetElement] = useState(null)\n\n  const {\n    user: { avatarUrl },\n  } = useAuth();\n  const { priority, title, _id } = task;\n\n  return (\n    <Card id=\"targetElement\">\n\n      <TextTask>{title}</TextTask>\n\n      <WrapperToolbar>\n        <ContainerDataUser>\n          <Avatar src={avatarUrl} alt=\"avatar\" />\n          <Priority>{priority}</Priority>\n        </ContainerDataUser>\n        <Toolbar\n          task={task}\n          setTaskModalOpen={setTaskModalOpen}\n          setTargetElement={setTargetElement}\n        />\n      {taskModalOpen && <ToolBarTaskModal taskId={_id } listId={listId} targetElement={targetElement} setTaskModalOpen={setTaskModalOpen}/>}\n\n      </WrapperToolbar>\n    </Card>\n  );\n};\n","// import { nanoid } from 'nanoid';\nimport { List, ListItem } from './ColumnTasksList.styled';\nimport { TaskColumnCard } from './TaskColumnCard/TaskColumnCard';\n\nexport const ColumnTasksList = ({\n  listId,\n  tasks\n}) => {\n\n  return (\n    <List>\n      {tasks.map(e => (\n        <ListItem key={e._id}>\n          <TaskColumnCard\n            listId={listId}\n            task={e}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { FiPlus } from 'react-icons/fi';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 8px;\n  margin-bottom: 16px;\n\n  color: #343434cc;\n  font-size: 12px;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.2;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.3;\n    margin-bottom: 18px;\n  }\n`;\nexport const LabelRadio = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 6px;\n  cursor: pointer;\n  position: relative;\n\n  color: #343434;\n  font-size: 12px;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.2;\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.3;\n  }\n`;\n\nexport const Input = styled(Field)`\n  padding: 12px 14px;\n  width: 100%;\n\n  color: #343434;\n  font-size: 14px;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.3;\n  border: none;\n  background-color: #f6f6f6;\n  border-radius: 8px;\n  outline: none;\n\n  :focus {\n    box-shadow: 0px 2px 4px 0px #1111111a;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 14px 18px;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.3;\n  }\n`;\n\nexport const Radio = styled(Field)`\n  position: absolute;\n  opacity: 0;\n`;\n\nexport const RadioCustom = styled.span`\n  position: relative;\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: ${props =>\n    props.value === 'low'\n      ? '#72C2F8'\n      : props.value === 'medium'\n      ? '#F3B249'\n      : '#EA3D65'};\n  transition: all 0.3s ease;\n  text-align: center;\n\n  ${Radio}:checked ~ & {\n    width: 8px;\n    height: 8px;\n\n    /* @media screen and (min-width: 768px) {\n    width: 10px;\n  height: 10px;\n} */\n  }\n\n  ${Radio}:checked, ${Radio}:checked ~ &::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 12px;\n    height: 12px;\n\n    border-radius: 14px;\n    border: 1.3px solid\n      ${props =>\n        props.value === 'low'\n          ? '#72C2F880'\n          : props.value === 'medium'\n          ? '#F3B24980'\n          : '#EA3D6580'};\n    @media screen and (min-width: 768px) {\n      width: 14px;\n      height: 14px;\n    }\n  }\n`;\n\nexport const WrapperRadio = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 28px;\n  }\n`;\n\nexport const WrapperTime = styled.div`\n  display: flex;\n  gap: 15px;\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nexport const ContainerForm = styled.div`\n  width: 303px;\n  padding: 48px 18px 40px;\n\n  @media screen and (min-width: 768px) {\n    padding: 40px 28px;\n    width: 396px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 135px;\n  height: 42px;\n\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 8px;\n  background: #3e85f3;\n\n  border: none;\n  outline: none;\n  padding: 0;\n\n  color: #fff;\n  text-align: center;\n  font-size: 14px;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.3;\n  transition: transform 0.2s ease-in-out;\n\n  :focus,\n  :hover {\n    transform: scale(1.03);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.3;\n    width: 182px;\n    height: 48px;\n  }\n`;\n\nexport const CancelButton = styled(StyledButton)`\n  background: #e5edfa;\n  width: 118px;\n  padding: 0;\n  color: black;\n  @media screen and (min-width: 768px) {\n    width: 144px;\n  }\n`;\n\nexport const EditButton = styled(StyledButton)`\n  width: 100%;\n`;\n\nexport const Icon = styled.img`\n  color: #fff;\n`;\n\nexport const IconFiPlus = styled(FiPlus)`\n  width: 18px;\n  height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`;\n\nexport const ErrorText = styled.span`\n  font-size: 12px;\n  position: absolute;\n  bottom: 10px;\n  color: tomato;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n  }\n`;\n\n\n","import { Formik, Form, ErrorMessage } from 'formik';\nimport {\n  CancelButton,\n  StyledButton,\n  ButtonContainer,\n  EditButton,\n  LabelRadio,\n  Label,\n  WrapperTime,\n  Input,\n  Radio,\n  WrapperRadio,\n  ContainerForm,\n  RadioCustom,\n  Icon,\n  IconFiPlus,\n  ErrorText,\n} from './TaskForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { getDate } from 'redux/currentDate/selector';\n\nimport { toggleModal } from 'redux/modal/modalSlice';\nimport { getModalTask, modalAction, getCategory } from 'redux/modal/selector';\nimport { updateTask, addTask } from 'redux/task/operations';\n\nconst timeRegex = /^(?:[01]\\d|2[0-3]):(?:[0-5]\\d)$/;\n\n\nexport const TaskForm = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const task = useSelector(getModalTask);\n  const category = useSelector(getCategory);\n  const type = useSelector(modalAction);\n\n  const howRender = task && type === 'edit';\n\n  const { title, start, end, priority } = task;\n\n  const initialValues = {\n    title: `${howRender ? title : ''}`,\n    start: `${howRender ? start : '09:00'}`,\n    end: `${howRender ? end : '14:00'}`,\n    priority: `${howRender ? priority : 'low'}`,\n  };\n\n  const handleClick = () => {\n    dispatch(toggleModal());\n  };\n\n  const handleSubmit = data => {\n    if (type === 'edit') {\n      const newTask = { ...task, ...data };\n      dispatch(updateTask(newTask));\n      dispatch(toggleModal());\n    }\n\n    if (type === 'add') {\n      const newTask = { date: format(date, 'yyyy-MM-dd'), ...data, category };\n\n      dispatch(addTask(newTask));\n      dispatch(toggleModal());\n    }\n  };\n\n  const validateForm = values => {\n    const errors = {};\n\n    if (!values.title.trim()) {\n      errors.start = 'Title is Required';\n      return errors;\n    }\n\n    if (!values.start) {\n      errors.start = 'Required';\n      return errors;\n    }else if (!timeRegex.test(values.start)) {\n      errors.start = 'Invalid time \"Start\", write format time \"hh:mm\"';\n      return errors;\n    }\n\n    if (!values.end) {\n      errors.end = 'Required';\n      return errors;\n    }else if (!timeRegex.test(values.end)) {\n      errors.end = 'Invalid time \"End\", write format time \"hh:mm\"';\n      return errors;\n    }\n  };\n\n  return (\n    <ContainerForm>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit} validate={validateForm}>\n          <Form>\n          <Label htmlFor=\"title\">\n            Title\n            <Input id=\"title\" name=\"title\" type=\"text\" placeholder=\"Enter text\"  />\n          </Label>\n\n          <WrapperTime>\n\n\n            <Label htmlFor=\"start\">\n              Start\n              <Input id=\"start\" name=\"start\" type=\"text\" placeholder=\"09:00\" />\n              \n            </Label>\n            <Label htmlFor=\"end\">\n              End\n              <Input id=\"end\" name=\"end\" type=\"text\" placeholder=\"11:59\" />\n            </Label>\n\n          </WrapperTime>\n\n\n          <WrapperRadio role=\"group\" aria-labelledby=\"priority-radio-group\">\n            <LabelRadio>\n              <Radio type=\"radio\" name=\"priority\" value=\"low\" />\n              <RadioCustom value=\"low\"/>\n              Low\n            </LabelRadio>\n            <LabelRadio>\n              <Radio type=\"radio\" name=\"priority\" value=\"medium\" />\n              <RadioCustom value=\"medium\"/>\n              Medium\n            </LabelRadio>\n            <LabelRadio>\n              <Radio type=\"radio\" name=\"priority\" value=\"high\" />\n              <RadioCustom value=\"high\"/>\n              High\n            </LabelRadio>\n          </WrapperRadio>\n          <ErrorMessage name=\"title\" component={ErrorText}/>\n          <ErrorMessage name=\"start\" component={ErrorText}/>\n          <ErrorMessage name=\"end\" component={ErrorText}/>\n          <ButtonContainer>\n            {type === 'add' ? (\n              <>\n                <StyledButton type=\"submit\"> \n                <IconFiPlus /> \n                Add\n                </StyledButton>\n                <CancelButton type=\"button\" onClick={handleClick}>\n                  Cancel\n                </CancelButton>\n              </>\n            ) : (\n              <EditButton type=\"submit\">\n              <Icon\n          src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16-white.svg'}\n          alt=\"button-edit\"\n        />\n              Edit</EditButton>\n            )}\n          </ButtonContainer>\n        </Form>\n      </Formik>\n    </ContainerForm>\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport { TaskForm } from 'components/TaskForm/TaskForm';\n\n// import { useDispatch } from 'react-redux';\n// import { setModalTypeTask, toggleModal } from 'redux/modal/modalSlice';\n\nexport const TaskModal = () => {\n  // const dispatch = useDispatch();\n\n  // const handleClick = () => {\n  //   dispatch(toggleModal());\n  //   dispatch(setModalTypeTask())\n  // };\n\n  return (\n    <Modal>\n      <TaskForm></TaskForm>\n    </Modal>\n  );\n};\n","import { AddTaskBtn } from 'components/AddTaskBtn/AddTaskBtn';\nimport { ColumnsItem } from './TasksColumn.styled';\nimport { ColumnHeadBar } from './TasksComponents/ColumnHeadBar';\nimport { ColumnTasksList } from './TasksComponents/ColumnTasksList';\n\nimport { useDispatch } from 'react-redux';\nimport { modalType, selectShowModal } from 'redux/modal/selector';\nimport { useSelector } from 'react-redux';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\nimport { setModalTypeTask, toggleModal, setModalAction, setCategory } from 'redux/modal/modalSlice';\n\nexport const TasksColumn = ({ listId, tasks }) => {\n  const dispatch = useDispatch();\n  const modalTypeSelected = useSelector(modalType);\n\n  const isModalOpen = useSelector(selectShowModal);\n\n  const handleAddTaskButtonClick = () => {\n    dispatch(setModalTypeTask());\n    dispatch(setModalAction(\"add\"));\n    dispatch(setCategory(listId));\n    dispatch(toggleModal());\n  };\n\n  return (\n    <ColumnsItem>\n      <ColumnHeadBar title={listId} handleAddTask={handleAddTaskButtonClick}/>\n      <ColumnTasksList listId={listId} tasks={tasks} />\n\n      {/* //! Это Руслана код */}\n      {/* <AddTaskBtn listId={listId}  date={date}/> */}\n\n      {/* //! Это я вставил - Никита */}\n      <AddTaskBtn listId={listId} handleAddTask={handleAddTaskButtonClick} />\n      {modalTypeSelected === 'task' && isModalOpen && <TaskModal></TaskModal>}\n    </ColumnsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TasksList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n  padding-bottom: 34px;\n\n  scrollbar-width: thin; /* Товщина полоси прокрутки */\n  scrollbar-color: red lightgray; /* Колір полоси прокрутки і фону */\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 12px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 30px #f2f2f2;\n    border-radius: 12px;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #e7e5e5;\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n    height: 568px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 14px;\n  }\n`;\n","import { TasksColumn } from './TasksColumn/TasksColumn';\nimport { TasksList } from './TasksColumnsList.styled';\n\nimport { isSameDay, parseISO } from 'date-fns';\n\nexport const TasksColumnsList = ({ date, tasks }) => {\n\n  const todoTasks = tasks.filter(task => task.category === 'to-do');\n  const inProgressTasks = tasks.filter(task => task.category === 'in-progress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n\n  const toDo = todoTasks.filter(todo => isSameDay(date, parseISO(todo.date)));\n  const inProgress = inProgressTasks.filter(inProgress =>\n    isSameDay(date, parseISO(inProgress.date))\n  );\n  const done = doneTasks.filter(done => isSameDay(date, parseISO(done.date)));\n\n  return (\n    <TasksList>\n      <TasksColumn listId=\"to-do\" date={date} tasks={toDo} />\n      <TasksColumn listId=\"in-progress\" date={date} tasks={inProgress} />\n      <TasksColumn listId=\"done\" date={date} tasks={done} />\n    </TasksList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { DayCalendarHead } from '../DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from './TasksColumnsList';\n\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\nimport {selectAllTasks} from 'redux/task/selectors'\n\nconst ChoosedDay = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const tasks = useSelector(selectAllTasks)\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n\n  return (\n    <>\n      <DayCalendarHead date={date} setDate={handleSetDate} />\n      <TasksColumnsList date={date} tasks={tasks}/>\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.calendarMonthBorder};\n  margin-top: 24px;\n  margin-bottom: 14px;\n  background-color: ${props => props.theme.colors.componentsBgColor};\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1280px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.colors.componentsBgColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.colors.headerFontcolor};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props =>\n    props.weekend ? '#3e85f3' : `${props.theme.colors.dayCalendarHeadBgColor}`};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  width: auto;\n  height: auto;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  box-shadow: 0px 4px 16px 0px #1111111a;\n\n  @media screen and (min-width: 768px) {\n    /* width: 396px; */\n}\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  width: 24px;\n  height: 24px;\n  color: #000;\n  cursor: pointer;\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/modal/modalSlice';\nimport { Backdrop, ModalContainer, CloseIcon } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({children}) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal());\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <Backdrop>\n      <ModalContainer>\n        <CloseIcon onClick={handleToggleModal}></CloseIcon>\n        {children}\n      </ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","export const getDate = state => state.date;","export const selectShowModal = state => state.modal.isOpen;\nexport const modalType = state => state.modal.modalType;\nexport const modalAction = state => state.modal.modalAction;\nexport const getModalTask = state => state.modal.dataTask;\nexport const getCategory = state => state.modal.category;\n","export const selectAllTasks = state => state.tasks.tasks;\n\nexport const selectTasksError = state => state.tasks.error;\n\nexport const selectTasksLoading = state => state.tasks.isLoading;\n\nexport const selectSuccessful = state => state.tasks.successful;\n"],"names":["Div","styled","AddTask","props","theme","colors","accentColor","ltMainAccentColor","textColor","ltTextColor","Text","AddTaskBtn","handleAddTask","type","onClick","size","ColumnsItem","borderColor","componentsBgColor","Wrap","ColumnTitle","Icon","AiOutlinePlusCircle","page","BtnAddTop","ColumnHeadBar","title","List","ListItem","Card","TextTask","WrapperToolbar","ContainerDataUser","Avatar","Priority","children","SectionToolbar","TaskAction","Toolbar","setTargetElement","setTaskModalOpen","task","dispatch","useDispatch","_id","e","target","src","process","alt","toggleModal","setModalAction","setModalTypeTask","setDataTask","deleteTask","ModalCardTask","BtnMoove","Lable","modalRoot","document","querySelector","ToolBarTaskModal","listId","targetElement","taskId","useState","top","left","modalPosition","setModalPosition","modalRef","useRef","moove","mooveTask","Object","keys","filter","handleOutsideClick","useCallback","event","current","contains","useEffect","updateModalPosition","targetRect","getBoundingClientRect","isMobile","window","innerWidth","topOffsetX","height","topOffsetY","addEventListener","removeEventListener","handleKeyDown","code","handleMooveTask","category","currentTarget","getAttribute","changeTaskCategory","id","createPortal","style","ref","map","TaskColumnCard","taskModalOpen","avatarUrl","useAuth","user","priority","ColumnTasksList","tasks","Label","LabelRadio","Input","Field","Radio","RadioCustom","value","WrapperRadio","WrapperTime","ContainerForm","ButtonContainer","StyledButton","CancelButton","EditButton","IconFiPlus","FiPlus","ErrorText","timeRegex","TaskForm","date","Date","useSelector","getDate","getModalTask","getCategory","modalAction","howRender","start","end","initialValues","onSubmit","data","newTask","updateTask","format","addTask","validate","values","errors","trim","test","htmlFor","name","placeholder","role","component","TaskModal","Modal","TasksColumn","modalTypeSelected","modalType","isModalOpen","selectShowModal","handleAddTaskButtonClick","setCategory","TasksList","TasksColumnsList","todoTasks","inProgressTasks","doneTasks","toDo","todo","isSameDay","parseISO","inProgress","done","selectAllTasks","DayCalendarHead","setDate","newDate","toString","GridWrapper","calendarMonthBorder","CellWrapperOfDate","headerFontcolor","Day","weekend","dayCalendarHeadBgColor","isCurrentDay","mainBackgroundColor","path","useLocation","pathname","includes","formatDay","useMedia","startOfWeek","weekStartsOn","endOfWeek","week","currentDay","formattedDate","dayOfWeek","push","day","fullDate","addDays","dateItem","isWeekend","Backdrop","ModalContainer","CloseIcon","IoMdClose","handleToggleModal","state","modal","isOpen","dataTask"],"sourceRoot":""}