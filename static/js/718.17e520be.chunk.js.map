{"version":3,"file":"static/js/718.17e520be.chunk.js","mappings":"kQAEaA,EAAYC,EAAAA,GAAAA,IAAH,yHAOTC,EAAOD,EAAAA,GAAAA,EAAH,+H,SC2GjB,EAvGuB,SAAC,GAA+B,EAA7BE,KAA6B,EAAvBC,QAAuB,EAAdC,QAAe,IAmBhDC,EAAc,SAAAC,GAClB,IAAQC,EAAuBD,EAAvBC,EAAGC,EAAoBF,EAApBE,EAAGC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAErB,OACE,iBAAMH,EAAGA,EAAIE,EAAQ,EAAGD,EAAGA,EAAGG,KAAK,SAASC,WAAW,SAASC,IAAK,EAArE,SACGH,GAGN,EAED,OACE,gBAAKI,MAAO,CAAEC,QAAS,SAAvB,UAQE,UAAChB,EAAD,CAAWe,MAAO,CAAEL,MAAO,IAAKO,OAAQ,IAAKC,OAAQ,QAArD,WACE,SAAChB,EAAD,UAAM,WACN,SAACiB,EAAA,EAAD,CAAqBT,MAAM,OAAOO,OAAO,OAAzC,UACE,UAACG,EAAA,EAAD,CACEV,MAAO,IACPO,OAAQ,GACRI,KA3CG,CACX,CACEC,KAAM,QACNC,GAAI,GACJC,GAAI,IAEN,CACEF,KAAM,cACNC,GAAI,GACJC,GAAI,IAEN,CACEF,KAAM,OACNC,GAAI,GACJC,GAAI,KA8BEC,QAAS,GACTC,WAAY,GACZR,OAAQ,CACNS,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAVZ,WAaE,SAACC,EAAA,EAAD,CAAeC,gBAAgB,IAAIC,UAAU,KAC7C,SAACC,EAAA,EAAD,CAAOC,QAAQ,UACf,SAACC,EAAA,EAAD,CACEC,UAAU,EACVC,UAAU,EACVC,OAAQ,CAAC,EAAG,eACZC,UAAW,KAEb,SAACC,EAAA,EAAD,CAASC,OAAQ,CAAE9B,KAAM,kBACzB,SAAC+B,EAAA,EAAD,CACER,QAAQ,KACRS,KAAK,IACLhC,KAAK,iBACLiC,MAAO,CAAEC,QAASxC,GAClByC,OAAQ,CAAC,EAAG,EAAG,GAAI,OAErB,2BACE,4BAAgBC,GAAG,WAAWC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAtD,WACE,iBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,MAEnD,iBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,UAGxD,SAACZ,EAAA,EAAD,CACER,QAAQ,KACRS,KAAK,IACLhC,KAAK,kBACLiC,MAAO,CAAEC,QAASxC,GAClByC,OAAQ,CAAC,EAAG,EAAG,GAAI,OAErB,2BACE,4BAAgBC,GAAG,YAAYC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAvD,WACE,iBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,MAEnD,iBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,kBAanE,C","sources":["pages/StatisticsPage/StatisticsPage.styled.js","pages/StatisticsPage/StatisticsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  padding: 40px;\n  border: 0.8px solid #e3f3ff;\n  border-radius: 29px;\n`;\n\nexport const Text = styled.p`\n  color: #343434;\n  font-size: 16px;\n  font-weight: 600;\n  line-height: 150%;\n  text-align: left;\n`;\n","import React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\nimport { Container, Text } from './StatisticsPage.styled';\n// import { PeriodPaginator } from 'components/CalendarToolbar/PeriodPaginator/PeriodPaginator';\n\nconst StatisticsPage = ({ date, setDate, typeNav }) => {\n  const data = [\n    {\n      name: 'To Do',\n      uv: 80,\n      pv: 60,\n    },\n    {\n      name: 'In Progress',\n      uv: 70,\n      pv: 50,\n    },\n    {\n      name: 'Done',\n      uv: 98,\n      pv: 45,\n    },\n  ];\n\n  const renderLabel = props => {\n    const { x, y, width, value } = props;\n\n    return (\n      <text x={x + width / 2} y={y} fill=\"#black\" textAnchor=\"middle\" dy={-6}>\n        {value}\n      </text>\n    );\n  };\n\n  return (\n    <div style={{ padding: '100px' }}>\n      {/* <PeriodPaginator\n        minDate={'Jun 23 2023'}\n        date={date}\n        setDate={setDate}\n        typenav={typeNav}\n      /> */}\n\n      <Container style={{ width: 860, height: 440, margin: 'auto' }}>\n        <Text>Tasks</Text>\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <BarChart\n            width={150}\n            height={40}\n            data={data}\n            barGap={-95}\n            maxBarSize={27}\n            margin={{\n              top: 20,\n              right: 20,\n              left: 20,\n              bottom: 20,\n            }}\n          >\n            <CartesianGrid strokeDasharray=\"0\" vertical={false} />\n            <XAxis dataKey=\"name\" />\n            <YAxis\n              axisLine={false}\n              tickLine={false}\n              domain={[0, 'dataMax + 2']}\n              tickCount={6}\n            />\n            <Tooltip cursor={{ fill: 'transparent' }} />\n            <Bar\n              dataKey=\"pv\"\n              unit=\"%\"\n              fill=\"url(#gradient)\"\n              label={{ content: renderLabel }}\n              radius={[0, 0, 10, 10]}\n            />\n            <defs>\n              <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#FFD2DD\" stopOpacity={0.1} />\n\n                <stop offset=\"95%\" stopColor=\"#FFD2DD\" stopOpacity={1} />\n              </linearGradient>\n            </defs>\n            <Bar\n              dataKey=\"uv\"\n              unit=\"%\"\n              fill=\"url(#gradient2)\"\n              label={{ content: renderLabel }}\n              radius={[0, 0, 10, 10]}\n            />\n            <defs>\n              <linearGradient id=\"gradient2\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor=\"#3E85F3\" stopOpacity={0.1} />\n\n                <stop offset=\"95%\" stopColor=\"#3E85F3\" stopOpacity={1} />\n              </linearGradient>\n            </defs>\n            {/* <LabelList\n              dataKey=\"uv\"\n              position=\"top\"\n              style={{ fill: '#343434' }}\n            /> */}\n          </BarChart>\n        </ResponsiveContainer>\n      </Container>\n    </div>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["Container","styled","Text","date","setDate","typeNav","renderLabel","props","x","y","width","value","fill","textAnchor","dy","style","padding","height","margin","ResponsiveContainer","BarChart","data","name","uv","pv","barGap","maxBarSize","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","XAxis","dataKey","YAxis","axisLine","tickLine","domain","tickCount","Tooltip","cursor","Bar","unit","label","content","radius","id","x1","y1","x2","y2","offset","stopColor","stopOpacity"],"sourceRoot":""}