{"version":3,"file":"static/js/66.7c9b494d.chunk.js","mappings":"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","sources":["components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","pages/Account/AccountPage.styled.jsx","pages/Account/AccountPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field } from 'formik';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { theme } from '../../constants/Theme';\n\nexport const Wrapper = styled.div`\n display: flex;\n flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background: rgba(255, 255, 255, 1); \n  border-radius: 16px;\n   padding: 40px 18px;\n\n    @media screen and (min-width: 1440px) {\n      padding-top: 60px;\n    }\n`;\n\nexport const FormUserProfile = styled(Form)`\ndisplay: flex;\nflex-direction: column;\nwidth: 100%;\n\n    @media screen and (min-width: 375px) {\n      width: 299px;\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 354px;\n    }\n     @media screen and (min-width: 1440px) {\n        width: 758px;\n    }\n`;\n\nexport const BtnUploadAvatar = styled(Field)`\nopacity: 1;\nposition: absolute;\nbottom: -6%;\nright: 20%;\noverflow: hidden;\nwidth: 14px;\nheight: 14px;\nborder-radius: 50%;\nfont-size: 15px;\n\n  ::before {\n    content: \" +\";\n    color: rgba(255, 255, 255, 1);\n    cursor: pointer;\n    padding: 5px;\n    background: rgba(62, 133, 243, 1);\n    position: absolute;\n          // transition: background анимация;\n    top: -8px;\n    left: -6px;\n    width: 40px;\n    height: 40px;\n    }\n\n @media screen and (min-width: 768px) {\n      font-size: 24px;\n       width: 24px;\n       height: 24px;\n      bottom: -5%;\n      right: 20%;\n\n       ::before {\n         top: -8px;\n          left: -6px;\n          width: 40px;\n          height: 40px;\n       }\n    }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: inherit;\n \n    width: 68px;\n    height: 68px;\n\n    @media screen and (min-width: 768px) {\n       top: 0;\n       left: -60px;\n       width: 120px;\n       height: 120px;\n    }\n`;\n\nexport const LabelAvatar = styled.label`\nposition: relative;\nmargin: 0 auto;\ntext-align: center;\n`;\n\n\nexport const AvatarWrapper = styled.div`\nposition: absolute;\ntop: -71px;\nright: -36px;\nwidth: 72px;\nheight: 72px;\nborder: 2px solid ${theme.colors.primaryColor};\nborder-radius: 50%;\n\n @media screen and (min-width: 768px) {\n       top: 0;\n       left: -60px;\n       width: 124px;\n       height: 124px;\n      \n    }\n`;\n\nexport const FieldWrapper = styled.div`\nposition: relative;\n`;\n\nexport const ErrorMassege = styled.div`\nposition: absolute;\nbottom: 3px;\nfont-size: 12px;\nline-height: 1.16;\nleft: 15px;\n`;\n\n\nexport const UserName = styled.p`\nmargin: 0 auto;\nmargin-top: 18px;\n\nfont-size: 14px;\nfont-weight: 700;\n\n @media screen and (min-width: 768px) {\n    margin-top: 144px;\n      font-size: 18px;\n      margin-bottom: 8px;\n    }\n`;\n\nexport const UserLabel = styled.span`\nmargin-top: 6px;\nmargin-bottom: 40px;\ntext-align: center;\nfont-size: 12px;\nfont-weight: 600;\nline-height: 1.17;\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\n\n\n\nexport const Input = styled(Field)`\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n  :hover,\n  :focus {\n    border-color: rgba(17, 17, 17, 1);\n  }\n  \n&.error {\n    border-color: rgba(231, 74, 59, 1);\n  }\n\n  &.success {\n    border-color: rgba(60, 188, 129, 1);\n  }\n\n\n \n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: 400;\nfont-size: 12px;\nline-height: 1.17;\ncolor: rgba(17, 17, 17, 1);\n\n&.error {\n    color: rgba(231, 74, 59, 1);\n  }\n\n  &.success {\n    color: rgba(60, 188, 129, 1);\n  }\n\n @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n    }\n`;\n\nexport const MainFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n   flex-wrap: wrap;\n   gap: 50px;\n   margin-bottom: 70px;\n    }\n`;\nexport const BlockFieldWrapper = styled.div`\n @media screen and (min-width: 1440px) {\n    display: flex;\n    flex-direction: column;\n\n    }\n`;\n\n\nexport const SubmitBtn = styled.button`\n  margin: 0 auto;\n  margin-top: 22px;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: rgba(62, 133, 243, 1);\n  color: rgba(255, 255, 255, 1);\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n      width: 262px;\n    }\n\n//   transition: background-color анимация;\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    background-color: rgba(43, 120, 239, 1);\n  }\n\n  :disabled {\n    opacity: 0.4;\n  }\n\n`;\n\nexport const DatePickerStyles = styled(DatePicker)`\n\nwidth: 100%;\nheight: 40px;\nborder-radius: 8px;\nborder: 1px solid rgba(17, 17, 17, 0.1);\noutline: none;\nmargin-top: 8px;\nmargin-bottom: 18px;\npadding: 12px 14px;\nfont-family: Inter-600, sans-serif;\nfont-weight: 600;\nfont-size: 14px;\nline-height: 1.3;\n\n :hover,\n  :focus {\n    border-color: rgba(17, 17, 17, 1);\n  }\n\n\n @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.3;\n    }\n\n@media screen and (min-width: 1440px) {\n   width: 354px;\n    }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  .react-datepicker {\n    background-color: rgba(62, 133, 243, 1);\n    border-radius: 16px;\n    overflow: hidden;\n    border: none;\n    color: rgba(255, 255, 255, 1);\n    width: 327px;\n    height: 354px;\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n}\n.react-datepicker__header {\n        position: relative;\n\n    background-color: rgba(62, 133, 243, 1);\n    border-bottom: 1px solid rgba(62, 133, 243, 1);\n  }\n\n  .react-datepicker__navigation-icon {\n    ::before {\n      border-color: rgba(255, 255, 255, 1);\n    }\n\n.react-datepicker__navigation--next {\n    right: 9px;\n    top: 35px;\n}\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    padding: 5px;\n    width: 90px;\n    color: rgba(255, 255, 255, 1);\n\n    text-align: center;\n    font-size: 10px;\n    overflow-y: auto;\n    cursor: pointer;\n\n    @media screen and (min-width: 375px) {\n      width: 110px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 120px;\n      font-size: 16px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    ::-webkit-scrollbar {\n      box-sizing: border-box;\n      width: 5px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: rgba(255, 255, 255, 1);\n      border-radius: 10px;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      border-radius: 10px;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n    }\n  }\n\n  .react-datepicker__current-month {\n    margin-top: 15px;\n    margin-bottom: 11px;\n    font-size: 20px;\n    font-weight: 600;\n    line-height : 1.2;\n\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day-name {\n     width: 46px;\n    height: 42px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day {\n    width: 46px;\n    height: 46px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n    :hover,\n    :focus {\n      background-color: var(--auth-bg-color);\n      color: var(--hover-btn-background-color);\n      border-radius: 24px;\n      opacity: 0.7;\n    }\n  }\n\n\n\n  .react-datepicker__day--weekend {\n    color: rgba(255, 255, 255, 1));\n    opacity: 40%;\n  }\n\n\n    .react-datepicker__day--today,\n  .react-datepicker__day--selected {\n    background-color: rgba(255, 255, 255, 1);\n    color: rgba(62, 133, 243, 1);\n    border-radius: 50%;\n    opacity: 1;\n  }\n\n    .react-datepicker__day--keyboard-selected{\n            border-radius: 50%;\n    }\n\n    .react-datepicker__month {\n    margin: 0;\n}\n\n\n.react-datepicker__navigation--previous {\n    left: 7px;\n    top: 30px;\n}\n\n.react-datepicker__navigation--next {\n    right: 7px;\n    top: 30px;\n}\n\n.react-datepicker__day-names {\nborder-bottom: 1px solid rgba(255, 255, 255, 0.2);\n}\n    `;\n\n\n\n\n\n","import React, { useState, useEffect } from 'react';\n// import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Formik } from 'formik';\nimport { updateUser } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors.js';\nimport * as yup from 'yup';\n// import gоoseInRocket from '../../shared/images/rocket_auth-desctop/rocket_auth-desctop@2x.png';\n\n\nimport {\n  Wrapper,\n  Avatar,\n  AvatarWrapper,\n  FormUserProfile,\n  BtnUploadAvatar,\n  LabelAvatar,\n  Input,\n  Label,\n  SubmitBtn,\n  UserLabel,\n  UserName,\n  DatePickerStyles,\n  DatePickerWrapper,\n  MainFieldWrapper,\n  BlockFieldWrapper,\n  FieldWrapper,\n  ErrorMassege,\n} from './UserForm.styled';\n\nexport const UserForm = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  const [avatarUrl, setAvatarUrl] = useState('');\n  const [newBirthday, setNewBirthday] = useState('');\n  const [newAvatar, setNewAvatar] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n  const [isUpdateForm, setIsUpdateForm] = useState(false);\n\n\n  // Вытягивает дату из бека в формате дд/ммм/гггг и преобразовывает сразу в формат для календаря\n\n\n  useEffect(() => {\n\n    if (!user?.birthday) {\n      return\n    }\n    const newDate = user?.birthday.split(\"/\").reverse().join(\"-\");\n\n    if (user?.birthday !== \"\") {\n      setStartDate(new Date(Date.parse(newDate)));\n    }\n  }, [user?.birthday]);\n\n  // Функция для отображения превью аватарки перед отправкой формы\n\n  function previewFiles(avatar) {\n    const reader = new FileReader();\n    reader.readAsDataURL(avatar);\n    reader.onloadend = () => {\n      setNewAvatar(reader.result);\n    }\n  }\n\n  // Делает активной кнопку submit при изменении аватарки или даты рождения\n  useEffect(() => {\n    if (newAvatar) {\n      setIsUpdateForm(true);\n    };\n    if (newBirthday && user?.birthday !== newBirthday) {\n      setIsUpdateForm(true);\n    }\n    if (user?.birthday === newBirthday && !newAvatar) {\n      setIsUpdateForm(false);\n    }\n  }, [newAvatar, newBirthday, user?.birthday]);\n\n\n  // Создает FormData, наполняет ее полями формы, которые редактировались и отправляет на бэк\n\n  const handleFormSubmit = async (values, { resetForm }) => {\n    const formData = new FormData();\n    console.log(avatarUrl);\n    try {\n      if (avatarUrl) {\n        formData.append('avatarUrl', avatarUrl);\n      }\n      if (initialValues.name !== values.name && values.name) {\n        formData.append('name', values.name);\n      }\n      if (initialValues.email !== values.email && values.email) {\n        formData.append('email', values.email);\n      }\n      if (initialValues.phone !== values.phone) {\n        formData.append('phone', values.phone);\n      }\n      if (initialValues.skype !== values.skype) {\n        formData.append('skype', values.skype);\n      }\n      formData.append(\n        'birthday',\n        new Date(startDate).toLocaleDateString('en-GB')\n      );\n\n      // Значения formData\n      for (const value of formData.values()) {\n        console.log(value);\n      }\n\n      await dispatch(updateUser(formData));\n      setIsUpdateForm(false);\n      resetForm();\n\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //схема вадилации\n\n  const schema = yup.object().shape({\n    name: yup.string().max(16, 'Name must be 16 characters max').trim().required('Please enter your name'),\n    email: yup.string().email(\"Incorrect email!\").required('Email is required'),\n    phone: yup.string().matches(/^\\+?3?8?(0\\d{9})$/, 'Phone format: \"+380000000000\"').max(13, 'Phone format: \"+380000000000\"').min(13, 'Phone format: \"+380000000000\"'),\n    skype: yup.string().max(16, 'Skype must be 16 characters max!').min(3).matches(/^\\S*$/, 'Skype must be without a space'),\n  });\n\n  //поля формы при загрузке страницы\n  const initialValues = {\n    avatarURL: user?.avatarURL,\n    name: user?.name || '',\n    email: user?.email || '',\n    phone: user?.phone || '',\n    skype: user?.skype || '',\n  };\n\n  return (\n    <Wrapper>\n      <Formik\n        dirty\n        initialValues={initialValues}\n        validationSchema={schema}\n        enableReinitialize={true}\n        onSubmit={handleFormSubmit}\n      >\n        {({ values, handleSubmit, handleChange, handleBlur, dirty, errors, touched }) => (\n          <div>\n            <FormUserProfile autoComplete=\"off\" onSubmit={handleSubmit}\n            >\n              <LabelAvatar htmlFor=\"avatarURL\">\n                <AvatarWrapper>\n\n                  {newAvatar ?\n                    (<Avatar src={newAvatar} alt=\"avatar\" />)\n                    :\n                    (<Avatar src={user.avatarUrl} alt=\"avatar\" />)\n                  }\n                  <BtnUploadAvatar\n                    type=\"file\"\n                    name=\"avatarURL\"\n                    accept=\".jpg, .jpeg, .png\"\n                    onChange={e => {\n                      setAvatarUrl(e.target.files[0]);\n                      previewFiles(e.target.files[0]);\n                    }}\n                  />\n                </AvatarWrapper>\n              </LabelAvatar>\n\n              <UserName>\n                {values.name ? values.name : initialValues.name}\n              </UserName>\n\n              <UserLabel>User</UserLabel>\n\n              <MainFieldWrapper>\n                <BlockFieldWrapper>\n                  <FieldWrapper>\n                    <Label htmlFor=\"name\"\n                      className={`${touched.name ? (errors.name ? 'error' : 'success') : ''\n                        }`}\n                    >\n                      User Name\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        placeholder=\"Your Name\"\n                        className={`${touched.name ? (errors.name ? 'error' : 'success') : ''\n                          }`}\n                      />\n                      {errors.name && touched.name ? (\n                        <ErrorMassege>{errors.name}</ErrorMassege>)\n                        :\n                        (!errors.name && touched.name ?\n                          <ErrorMassege>Great!</ErrorMassege> : \"\")}\n                    </Label>\n                  </FieldWrapper>\n\n                  <DatePickerWrapper>\n                    <Label htmlFor=\"birthday\">\n                      Birthday\n                      <DatePickerStyles\n\n                        type={'date'}\n                        input={true}\n                        selected={startDate}\n                        onChange={date => {\n                          setStartDate(date);\n                          setNewBirthday(date.toLocaleDateString('en-GB'));\n\n                        }}\n\n                        minDate={new Date('1923-01-01T00:00:00')}\n                        maxDate={new Date()}\n                        formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n                        calendarStartDay={1}\n                        placeholderText=\"Click to select a date\"\n                        dateFormat=\"dd/MM/yyyy\"\n                        peekNextMonth\n                        showMonthDropdown\n                        showYearDropdown\n                        dropdownMode=\"select\"\n\n                      />\n                    </Label>\n                  </DatePickerWrapper>\n                  <FieldWrapper>\n                    <Label htmlFor=\"email\"\n                      className={`${touched.email ? (errors.email ? 'error' : 'success') : ''\n                        }`}>\n                      Email\n                      <Input\n                        type=\"email\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        className={`${touched.email ? (errors.email ? 'error' : 'success') : ''\n                          }`}\n                      />\n                      {errors.email && touched.email ? (\n                        <ErrorMassege>{errors.email}</ErrorMassege>)\n                        :\n                        (!errors.email && touched.email ? <ErrorMassege>Great!</ErrorMassege> : \"\")}\n\n                    </Label>\n                  </FieldWrapper>\n\n                </BlockFieldWrapper>\n                <BlockFieldWrapper>\n                  <FieldWrapper>\n                    <Label htmlFor=\"phone\"\n                      className={`${touched.phone && values.phone ? (errors.phone ? 'error' : 'success') : ''\n                        }`}\n                    >\n                      Phone\n                      <Input\n                        type=\"text\"\n                        name=\"phone\"\n                        placeholder=\"+380000000000\"\n                        className={`${touched.phone && values.phone ? (errors.phone ? 'error' : 'success') : ''\n                          }`}\n                      />\n                      {errors.phone && touched.phone ? (\n                        <ErrorMassege>{errors.phone}</ErrorMassege>)\n                        :\n                        (!errors.phone && touched.phone && values.phone !== \"\" ? <ErrorMassege>Great!</ErrorMassege> : \"\")\n                      }\n                    </Label>\n                  </FieldWrapper>\n\n                  <FieldWrapper>\n                    <Label htmlFor=\"skype\"\n                      className={`${touched.skype && (values.skype !== user?.skype) ? (errors.skype ? 'error' : 'success') : ''\n                        }`}\n                    >\n                      Skype\n                      <Input\n                        type=\"text\"\n                        name=\"skype\"\n                        value={values.skype ? values.skype : ''}\n                        placeholder=\"Add a skype number\"\n                        className={`${touched.skype && (values.skype !== user?.skype) ? (errors.skype ? 'error' : 'success') : ''\n                          }`}\n                      />\n                      {errors.skype && touched.skype ? (\n                        <ErrorMassege>{errors.skype}</ErrorMassege>)\n                        :\n                        (!errors.skype && touched.skype && (values.skype !== user?.skype) ? <ErrorMassege>Great!</ErrorMassege> : \"\")}\n                    </Label>\n                  </FieldWrapper>\n\n                </BlockFieldWrapper>\n              </MainFieldWrapper>\n\n              {isUpdateForm ?\n                (<SubmitBtn type=\"submit\" >\n                  Save changes\n                </SubmitBtn>)\n                :\n                (<SubmitBtn type=\"submit\" disabled={!dirty}>\n                  Save changes\n                </SubmitBtn>)\n              }\n            </FormUserProfile>\n          </div>\n        )}\n      </Formik>\n\n    </Wrapper >\n  );\n};\n","import styled from 'styled-components';\n\nexport const AccountPageContainer = styled.div`\nposition: relative;\nmargin-top: 64px;\nbackground: rgba(247, 246, 249, 1);\npadding-top: 31px;\n// font-family: Inter;\n`;","import { UserForm } from 'components/UserForm/UserForm';\nimport { AccountPageContainer } from './AccountPage.styled';\n\nexport default function AccountPage() {\n  return (\n    <div>\n      <AccountPageContainer>\n        <UserForm />\n      </AccountPageContainer>\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","FormUserProfile","Form","BtnUploadAvatar","Field","Avatar","LabelAvatar","AvatarWrapper","theme","FieldWrapper","ErrorMassege","UserName","UserLabel","Input","Label","MainFieldWrapper","BlockFieldWrapper","SubmitBtn","DatePickerStyles","DatePicker","DatePickerWrapper","UserForm","user","useSelector","selectUser","dispatch","useDispatch","useState","avatarUrl","setAvatarUrl","newBirthday","setNewBirthday","newAvatar","setNewAvatar","Date","startDate","setStartDate","isUpdateForm","setIsUpdateForm","useEffect","birthday","newDate","split","reverse","join","parse","handleFormSubmit","values","resetForm","formData","FormData","console","log","append","initialValues","name","email","phone","skype","toLocaleDateString","value","updateUser","error","schema","yup","shape","max","trim","required","matches","min","avatarURL","dirty","validationSchema","enableReinitialize","onSubmit","handleSubmit","handleChange","handleBlur","errors","touched","autoComplete","htmlFor","src","alt","type","accept","onChange","e","target","files","avatar","reader","FileReader","readAsDataURL","onloadend","result","previewFiles","className","onBlur","placeholder","input","selected","date","minDate","maxDate","formatWeekDay","nameOfDay","slice","calendarStartDay","placeholderText","dateFormat","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","disabled","AccountPageContainer","AccountPage"],"sourceRoot":""}