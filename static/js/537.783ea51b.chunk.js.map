{"version":3,"file":"static/js/537.783ea51b.chunk.js","mappings":"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","sources":["components/ChoosedDay/DayCalendarHead.styled.jsx","components/ChoosedDay/DayCalendarHead.js","components/ChoosedDay/TasksColumn/TasksColumn.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.js","components/ChoosedDay/TasksColumn/TasksColumn.jsx","components/ChoosedDay/TasksColumnsList.styled.jsx","components/ChoosedDay/TasksColumnsList.js","components/ChoosedDay/ChoosedDay.js","redux/currentDate/selector.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useMedia.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  margin-bottom: 14px;\n`;\n\nexport const CellWrapper = styled.li`\n  height: 34px;\n  background: ${props => props.theme.mainBackgroundColor};\n  font-family: 'InterSemiBolt';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.12;\n  text-align: center;\n  text-transform: uppercase;\n  color: ${props => props.theme.CalendarHead};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:first-child {\n    border-top-left-radius: 8px;\n  }\n\n  &:nth-child(7) {\n    border-top-right-radius: 8px;\n  }\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 14px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  height: 34px;\n  background: #ffffff;\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.12;\n  text-align: center;\n  text-transform: uppercase;\n  color: #343434;\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  padding-top: 2px;\n\n  &:nth-last-child(7) {\n    border-bottom-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-bottom-right-radius: 8px;\n  }\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n  }\n`;\nexport const TodayDay = styled.p`\n  color: #ffffff;\n  background-color: #3e85f3;\n  border-radius: 6px;\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    margin: -4px -8px;\n    border-radius: 8px;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport {\n  CellWrapper,\n  CellWrapperOfDate,\n  GridWrapper,\n  TodayDay,\n} from './DayCalendarHead.styled';\nimport { startOfWeek, endOfWeek, format, addDays, isSameDay } from 'date-fns';\nimport { useMedia } from 'react-use';\n\nexport const DayCalendarHead = ({ date }) => {\n  const isMobile = useMedia('(max-width: 767px)');\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n  let currentDay = start;\n  while (currentDay <= end) {\n    week.push(currentDay);\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper>\n      {isMobile ? (\n        <>\n          <CellWrapper>m</CellWrapper>\n          <CellWrapper>t</CellWrapper>\n          <CellWrapper>w</CellWrapper>\n          <CellWrapper>t</CellWrapper>\n          <CellWrapper>f</CellWrapper>\n          <CellWrapper>s</CellWrapper>\n          <CellWrapper>s</CellWrapper>\n        </>\n      ) : (\n        <>\n          <CellWrapper>mon</CellWrapper>\n          <CellWrapper>tue</CellWrapper>\n          <CellWrapper>wed</CellWrapper>\n          <CellWrapper>thu</CellWrapper>\n          <CellWrapper>fri</CellWrapper>\n          <CellWrapper>sat</CellWrapper>\n          <CellWrapper>sun</CellWrapper>\n        </>\n      )}\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem, date);\n        return (\n          <CellWrapperOfDate key={nanoid()}>\n            {!isCurrentDay && format(dateItem, 'd')}\n            {isCurrentDay && <TodayDay>{format(dateItem, 'd')}</TodayDay>}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding: 18px 18px 10px 18px;\n  min-width: 345px;\n  width: 100%;\n  height: 100%;\n  max-height: 432px;\n  list-style: none;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n  background-color: #fff;\n  @media (min-width: 768px) {\n    min-width: calc((100% - 54px) / 3);\n    max-height: 568px;\n    padding: 18px 23px 28px 20px;\n  }\n\n  @media (min-width: 1280px) {\n    min-width: 290px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  font-size: 18px;\n  font-weight: 700;\n  line-height: 1.1;\n  font-family: 'InterBolt';\n  color: #343434;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 7px 0;\n  max-width: 301px;\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-family: 'InterSemiBolt';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.11;\n  color: #111111;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n","import { Wrap, ColumnTitle } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ title }) => {\n  switch (title) {\n    case 'toDo':\n      return 'To do';\n    case 'inProgress':\n      return 'In progress';\n    case 'done':\n      return 'Done';\n    default:\n      break;\n  }\n\n  return (\n    <Wrap>\n      <ColumnTitle>{title}</ColumnTitle>\n    </Wrap>\n  );\n};\n","export const ColumnTasksList = ({ listId }) => {\n  return <></>;\n};\n","import { Container, ColumnsItem } from './TasksColumn.styled';\nimport { ColumnHeadBar } from './TasksComponents/ColumnHeadBar';\nimport { ColumnTasksList } from './TasksComponents/ColumnTasksList';\n\nexport const TasksColumn = ({ listId, date, tasks }) => {\n  return (\n    <ColumnsItem>\n      <Container>\n        <ColumnHeadBar title={listId} />\n      </Container>\n\n      <ColumnTasksList listId={listId} tasks={tasks} />\n      {/* <AddTaskBtn listId={listId} date={date}/> */}\n    </ColumnsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TasksList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  margin-top: 16px;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n\n  @media screen and (min-width: 1280px) {\n    gap: 27px;\n  }\n`;\n","import { TasksColumn } from './TasksColumn/TasksColumn';\nimport { TasksList } from './TasksColumnsList.styled';\n\nimport { useSelector } from 'react-redux';\nimport { isSameDay, parseISO } from 'date-fns';\n\nexport const TasksColumnsList = ({ date }) => {\n  const tasks = useSelector(state => state.tasks.tasks);\n\n  const todoTasks = tasks.filter(task => task.category === 'toDo');\n  const inProgressTasks = tasks.filter(task => task.category === 'inProgress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n\n  const toDo = todoTasks.filter(todo => isSameDay(date, parseISO(todo.date)));\n  const inProgress = inProgressTasks.filter(inProgress =>\n    isSameDay(date, parseISO(inProgress.date))\n  );\n  const done = doneTasks.filter(done => isSameDay(date, parseISO(done.date)));\n\n  return (\n    <TasksList>\n      <TasksColumn listId=\"toDo\" date={date} tasks={toDo} />\n      <TasksColumn listId=\"inProgress\" date={date} tasks={inProgress} />\n      <TasksColumn listId=\"done\" date={date} tasks={done} />\n    </TasksList>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { DayCalendarHead } from './DayCalendarHead';\nimport { TasksColumnsList } from './TasksColumnsList';\nimport {getDate} from 'redux/currentDate/selector';\n\nconst ChoosedDay = () => {\n  const date = new Date(useSelector(getDate))\n\n  return (\n    <>\n      <DayCalendarHead date={date} />\n      <TasksColumnsList date={date} />\n    </>\n  );\n};\n\nexport default ChoosedDay\n","export const getDate = state => state.date;","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexport default useMedia;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["GridWrapper","styled","CellWrapper","props","theme","mainBackgroundColor","CalendarHead","CellWrapperOfDate","TodayDay","DayCalendarHead","date","isMobile","useMedia","start","startOfWeek","weekStartsOn","end","endOfWeek","week","currentDay","push","addDays","map","dateItem","isCurrentDay","isSameDay","format","nanoid","ColumnsItem","Container","Wrap","ColumnTitle","ColumnHeadBar","title","ColumnTasksList","listId","TasksColumn","tasks","TasksList","TasksColumnsList","useSelector","state","todoTasks","filter","task","category","inProgressTasks","doneTasks","toDo","todo","parseISO","inProgress","done","Date","getDate","isBrowser","window","query","defaultState","_a","useState","undefined","matchMedia","matches","getInitialState","setState","useEffect","mounted","mql","onChange","addListener","removeListener","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}