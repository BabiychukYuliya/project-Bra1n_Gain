{"version":3,"file":"static/js/158.300ed971.chunk.js","mappings":"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","sources":["components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.js","components/ChoosedDay/TasksColumn/TasksColumn.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.js","components/TaskForm/TaskForm.styled.js","components/TaskForm/TaskForm.js","components/TaskModal/TaskModal.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/ToolBarTaskModal/ToolBarTaskModal.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/ToolBarTaskModal/ToolBarTaskModal.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.js","components/ChoosedDay/TasksColumn/TasksColumn.js","components/ChoosedDay/TasksColumnsList.styled.jsx","components/ChoosedDay/TasksColumnsList.js","components/ChoosedDay/ChoosedDay.js","components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","redux/currentDate/selector.js","redux/modal/selector.js","redux/task/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  /* padding: 30px 0; */\n  /* background-color: transparent; */\n`;\n\nexport const AddTask = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 20px;\n  width: 100%;\n\n  cursor: pointer;\n  border-radius: 8px;\n  backface-visibility: hidden;\n  transition: transform 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  //! для светлой темы\n  // border: 2px dashed #3e85f3;\n  background-color: #e3f3ff;\n  //? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  color: #111111;\n  //? color: ${props => props.theme.ltTextColor}; //переключение по теме\n\n  //! для темной темы\n  // border: none;\n  // background-color: #3e85f3;\n  //// ? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  // color: #ffffff;\n  //// ? color: ${props => props.theme.ltTextColor}; //переключение по теме\n`;\n\nexport const Text = styled.span`\n  font-size: 14px;\n  font-family: Inter, sans-serif;\n  font-weight: 600;\n  line-height: 18px;\n`;\n","import { FiPlus } from 'react-icons/fi';\nimport { AddTask, Div, Text } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({ listId, handleAddTask}) => {\n  \n  return (\n    <Div>\n      <AddTask id={listId} type=\"button\" onClick={handleAddTask}>\n        <FiPlus size={24} />\n        <Text>Add task</Text>\n      </AddTask>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnsItem = styled.li`\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  width: 100%;\n  height: 100%;\n\n  /* min-height: 155px; */\n  /* max-height: 432px; */\n\n  height: fit-content;\n  /* min-width: 280px; */\n  line-height: 1.12;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 18px 18px 10px 18px;\n  gap: 16px;\n  font-family: 'InterSemiBolt';\n  max-width: 335px;\n\n\n  @media screen and (min-width: 768px) {\n    padding: 18px 22px 28px;\n    font-size: 20px;\n    max-width: calc((100% - 48px) / 2);\n\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n\n    max-width: calc((100% - 54px)/ 3);\n\n  }\n`;\n","import styled from 'styled-components';\n\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 7px 0;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\nmargin-bottom: 28px;\n  }\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-family: 'InterSemiBolt';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.11;\n  color: #111111;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Icon = styled(AiOutlinePlusCircle)`\n  width: 22px;\n  height: 22px;\n  fill: black;\n  border-radius: 50%;\n  &:hover,\n  &:focus {\n    fill: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const BtnAddTop = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 22px;\n  height: 22px;\n`;\n","import { setModalTypeTask, toggleModal } from 'redux/modal/modalSlice';\nimport { Wrap, ColumnTitle, BtnAddTop, Icon } from './ColumnHeadBar.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const ColumnHeadBar = ({ title }) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(setModalTypeTask())\n    dispatch(toggleModal());\n  };\n\n  return (\n    <>\n      <Wrap>\n        <ColumnTitle>\n          {title === 'to-do'\n            ? 'To do'\n            : title === 'in-progress'\n            ? 'In progress'\n            : title === 'done'\n            ? 'Done'\n            : null}\n        </ColumnTitle>\n        <BtnAddTop onClick={handleClick}>\n          <Icon />\n        </BtnAddTop>\n      </Wrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\ndisplay: flex;\nflex-direction: column;\ngap: 14px;\nlist-style: none;\nwidth: 100%;\nheight: 356px;\npadding-right: 6px;\n\n  overflow: hidden;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n  margin-bottom: -8px;\n\n  /* width */\n::-webkit-scrollbar {\n  width: 6px;\n\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 30px #F2F2F2;\n  border-radius: 12px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #E7E5E5;\n  border-radius: 12px;\n}\n\n  @media screen and (min-width: 768px) {\n\n  height: 372px;\n  gap: 18px;\n  margin-bottom: 32px;\n\n    /* width */\n::-webkit-scrollbar {\n  width: 8px;\n\n}\n\n  }\n`;\n\nexport const ListItem = styled.li`\nheight: 108px;\n\n\n  @media screen and (min-width: 768px) {\n    height: 112px;\n  }\n`;\n","import styled from \"styled-components\"\n\nexport const Card = styled.div`\nposition: relative;\npadding: 14px 14px 18px 14px;\nwidth: 100%;\nheight: 100%;\nbackground-color: #F7F6F9;\nborder: 1px solid #DCE3E5CC;\nborder-radius: 8px;\n`;\n\nexport const TextTask = styled.p`\nmargin-bottom: 24px;\n\ncolor: #111;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\noverflow: hidden;\nfont-size: 14px;\nfont-family: Inter;\nfont-weight: 500;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 28px;\n  }\n`\n\nexport const WrapperToolbar = styled.div`\nposition: relative;\ndisplay: flex;\nalign-items: self-end;\njustify-content: space-between;\n`;\n\nexport const ContainerDataUser = styled.div`\ndisplay: flex;\nalign-items: self-end;\ngap: 8px;\n`;\n\nexport const Avatar = styled.img`\nwidth: 32px;\nheight: 32px;\nborder-radius: 50%;\n`;\n\nexport const Priority = styled.span`\nfont-size: 10px;\nfont-family: Inter;\nfont-weight: 600;\nline-height: 1.2;\n\ncolor: #F7F6F9;\npadding: 4px 12px;\nborder-radius: 4px;\nbackground-color: ${props => props.children === \"low\" ? \"#72C2F8\" : props.children === \"medium\" ? \"#F3B249\" : \"#EA3D65\"};\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const SectionToolbar = styled.div`\n  display: flex;\n  gap:10px;\n\n`;\n\nexport const TaskAction = styled.button`\n  width: 14px;\n  height: 14px;\n\n  border-radius: 50%;\n  cursor: pointer;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    transition-duration: 200ms;\n  }\n\n`;\n\nexport const Icon = styled.img`\n  width: 14px;\n  height: 14px;\n`;\n","import { SectionToolbar, TaskAction, Icon } from './Toolbar.styled';\n\nexport const Toolbar = ({setTargetElement, setTaskModalOpen}) => {\n\nconst handleClick = ( e ) => {\n  setTaskModalOpen(true);\n  setTargetElement(e.target);\n}\n    \n    return (\n      <SectionToolbar >\n        <TaskAction onClick={handleClick}>\n          <Icon\n            src={process.env.PUBLIC_URL + '/images/icons/icon-arrow-circle-broken-right-16x16.svg'}\n            alt=\"button-move\"\n          />\n        </TaskAction>\n        <TaskAction>\n          <Icon\n            src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16.svg'}\n            alt=\"button-edit\"\n          />\n        </TaskAction>\n        <TaskAction>\n          <Icon\n            src={process.env.PUBLIC_URL + '/images/icons/icon-trash-16x16.svg'}\n            alt=\"button-delete\"\n          />\n        </TaskAction>\n      </SectionToolbar>\n    );\n  };","import styled from 'styled-components';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 198px;\n  padding: 15px 85px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 8px;\n  background: #3e85f3;\n\n  border: none;\n  outline: none;\n\n  color: #fff;\n`;\n\nexport const CancelButton = styled(StyledButton)`\n  border-radius: 8px;\n  background: #e5edfa;\n  color: black;\n`;\n","import { Formik, Field, Form } from 'formik';\nimport {\n  CancelButton,\n  StyledButton,\n  ButtonContainer,\n} from './TaskForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/modal/modalSlice';\n\nexport const TaskForm = () => {\n  const dispatch = useDispatch()\n\n    const handleClick = () => {\n    dispatch(toggleModal());\n    // dispatch(setModalTypeTask())\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          title: '',\n          start: '',\n          end: '',\n          priority: '',\n        }}\n        onSubmit={values => {\n          console.log(values);\n        }}\n      >\n        <Form>\n          <label htmlFor=\"title\">Title</label>\n          <Field id=\"title\" name=\"title\" placeholder=\"Enter text\" />\n\n          <label htmlFor=\"start\">Start</label>\n          <Field id=\"start\" name=\"start\" placeholder=\"Enter text\" />\n\n          <label htmlFor=\"end\">End</label>\n          <Field id=\"end\" name=\"end\" placeholder=\"Enter text\" />\n\n          <div id=\"priority-radio-group\">Picked</div>\n          <div role=\"group\" aria-labelledby=\"priority-radio-group\">\n            <label>\n              <Field type=\"radio\" name=\"priority\" value=\"Low\" />\n              Low\n            </label>\n            <label>\n              <Field type=\"radio\" name=\"priority\" value=\"Medium\" />\n              Medium\n            </label>\n            <label>\n              <Field type=\"radio\" name=\"priority\" value=\"High\" />\n              High\n            </label>\n          </div>\n          <ButtonContainer>\n            <StyledButton type=\"submit\">Submit</StyledButton>\n            <CancelButton type=\"button\" onClick={handleClick}>\n              Cancel\n            </CancelButton>\n          </ButtonContainer>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport { TaskForm } from 'components/TaskForm/TaskForm';\n\n// import { useDispatch } from 'react-redux';\n// import { setModalTypeTask, toggleModal } from 'redux/modal/modalSlice';\n\nexport const TaskModal = () => {\n  // const dispatch = useDispatch();\n\n  // const handleClick = () => {\n  //   dispatch(toggleModal());\n  //   dispatch(setModalTypeTask())\n  // };\n\n  return (\n    <Modal>\n      <TaskForm></TaskForm>\n    </Modal>\n  );\n};\n","import styled from \"styled-components\"\nimport { TaskAction } from \"../Toolbar/Toolbar.styled\";\n\nexport const ModalCardTask = styled.ul`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 14px;\npadding: 14px;\nwidth: 147px;\nheight: 90px;\nbackground-color: #FFFFFF;\nborder-radius: 8px;\nbox-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10);\n@media screen and (min-width: 768px) {\npadding: 20px 24px;\n    \n  }\n`;\n\n\nexport const BtnMoove = styled(TaskAction)`\ndisplay: flex;\nwidth: 87px;\nalign-items: center;\njustify-content: space-between;\n\ncolor: #343434;\n\n@media screen and (min-width: 768px) {\nwidth: 99px;\n    \n    }\n`\nexport const Lable = styled.p`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 500;\nline-height: 1.2;\n\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nline-height: 1.3;\n    \n  }\n`\n\n\n","import { Icon } from '../Toolbar/Toolbar.styled';\nimport { BtnMoove, Lable, ModalCardTask } from './ToolBarTaskModal.styled';\nimport { createPortal } from 'react-dom';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { changeTaskCategory } from 'redux/task/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ToolBarTaskModal = ({\n  listId,\n  targetElement,\n  setTaskModalOpen,\n  taskId\n}) => {\n\n  const dispatch = useDispatch();\n\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n  const modalRef = useRef();\n\n  const moove = {\n    \"to-do\": 'To do',\n    \"in-progress\": 'In progress',\n    \"done\": 'Done',\n  };\n\n  const arrMoove = Object.keys(moove);\n  const mooveTask = arrMoove.filter(e => e !== listId);\n\n  const handleOutsideClick = useCallback(\n    event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setTaskModalOpen(false);\n      }\n    },\n    [setTaskModalOpen]\n  );\n\n  useEffect(() => {\n    const updateModalPosition = () => {\n      if (targetElement) {\n        const targetRect = targetElement.getBoundingClientRect();\n        const isMobile = window.innerWidth < 768;\n        const topOffsetX = isMobile ? targetRect.height + 12 : targetRect.height + 8;\n        const topOffsetY = isMobile ? targetRect.left - 70 : targetRect.left;\n        setModalPosition({\n          top: targetRect.top + topOffsetX,\n          left: topOffsetY,\n        });\n      }\n    };\n\n    updateModalPosition();\n\n    window.addEventListener('resize', updateModalPosition);\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      window.removeEventListener('resize', updateModalPosition);\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetElement]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setTaskModalOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst handleMooveTask = (e) => {\n  const category = e.currentTarget.getAttribute('data-moove');\n\n  dispatch(changeTaskCategory({id: taskId, category} ))\n  \n}\n\n  return createPortal(\n    <ModalCardTask\n      style={{ top: modalPosition.top, left: modalPosition.left }}\n      ref={modalRef}\n    >\n      {mooveTask.map(e => (\n        <li  key={e}>\n          <BtnMoove onClick={handleMooveTask} data-moove={e}>\n            <Lable>{moove[e]}</Lable>\n            <Icon\n              src={\n                process.env.PUBLIC_URL +\n                '/images/icons/icon-arrow-circle-broken-right-16x16.svg'\n              }\n              alt=\"button-move\"\n            />\n          </BtnMoove>\n        </li>\n      ))}\n    </ModalCardTask>,\n    modalRoot\n  );\n};\n","import { useAuth } from 'hooks/useAuth';\nimport {\n  Avatar,\n  Card,\n  ContainerDataUser,\n  TextTask,\n  WrapperToolbar,\n  Priority,\n} from './TaskColumnCard.styled';\nimport { Toolbar } from './Toolbar/Toolbar';\nimport { modalType, selectShowModal } from 'redux/modal/selector';\nimport { useSelector } from 'react-redux';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\nimport { useState } from 'react';\nimport { ToolBarTaskModal } from \"./ToolBarTaskModal/ToolBarTaskModal\";\n\nexport const TaskColumnCard = ({\n  task,\n  listId,\n}) => {\n\n  const [taskModalOpen, setTaskModalOpen] = useState(false)\n  const [ targetElement, setTargetElement] = useState(null)\n\n  const modalTypeSelected = useSelector(modalType)\n\n  const isModalOpen = useSelector(selectShowModal);\n\n  const {\n    user: { avatarUrl },\n  } = useAuth();\n  const { priority, title, _id } = task;\n\n  return (\n    <Card id=\"targetElement\">\n\n      <TextTask>{title}</TextTask>\n      {isModalOpen && <TaskModal></TaskModal>}\n\n      <WrapperToolbar>\n        <ContainerDataUser>\n          <Avatar src={avatarUrl} alt=\"avatar\" />\n          <Priority>{priority}</Priority>\n        </ContainerDataUser>\n        <Toolbar\n          setTaskModalOpen={setTaskModalOpen}\n          setTargetElement={setTargetElement}\n        />\n      {taskModalOpen && <ToolBarTaskModal taskId={_id } listId={listId} targetElement={targetElement} setTaskModalOpen={setTaskModalOpen}/>}\n\n      </WrapperToolbar>\n      {modalTypeSelected === \"task\" && isModalOpen && (<TaskModal></TaskModal>)}\n    </Card>\n  );\n};\n","// import { nanoid } from 'nanoid';\nimport { List, ListItem } from './ColumnTasksList.styled';\nimport { TaskColumnCard } from './TaskColumnCard/TaskColumnCard';\n\nexport const ColumnTasksList = ({\n  listId,\n  tasks\n}) => {\n\n  return (\n    <List>\n      {tasks.map(e => (\n        <ListItem key={e._id}>\n          <TaskColumnCard\n            listId={listId}\n            task={e}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { AddTaskBtn } from 'components/AddTaskBtn/AddTaskBtn';\nimport { ColumnsItem } from './TasksColumn.styled';\nimport { ColumnHeadBar } from './TasksComponents/ColumnHeadBar';\nimport { ColumnTasksList } from './TasksComponents/ColumnTasksList';\n\nimport { useDispatch } from 'react-redux';\n\nimport { setModalTypeTask, toggleModal } from 'redux/modal/modalSlice';\n\nexport const TasksColumn = ({ listId, date, tasks }) => {\n  const dispatch = useDispatch();\n\n  const handleAddTaskButtonClick = () => {\n    dispatch(setModalTypeTask());\n    dispatch(toggleModal());\n  };\n\n  return (\n    <ColumnsItem>\n      <ColumnHeadBar title={listId} />\n\n      <ColumnTasksList\n        listId={listId}\n        tasks={tasks}\n      />\n\n      {/* //! Это Руслана код */}\n      {/* <AddTaskBtn listId={listId}  date={date}/> */}\n\n      {/* //! Это я вставил - Никита */}\n      <AddTaskBtn listId={listId} handleAddTask={handleAddTaskButtonClick} />\n    </ColumnsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TasksList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\npadding-bottom: 34px;\n  scrollbar-width: thin; /* Товщина полоси прокрутки */\n  scrollbar-color: red lightgray; /* Колір полоси прокрутки і фону */\n\n\n/* width */\n::-webkit-scrollbar {\n  width: 12px;\n\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 30px #F2F2F2;\n  border-radius: 12px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #E7E5E5;\n  border-radius: 12px;\n}\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n    height: 568px;\n  }\n\n  ::-webkit-scrollbar {\n  width: 14px;\n\n}\n`;\n","import { TasksColumn } from './TasksColumn/TasksColumn';\nimport { TasksList } from './TasksColumnsList.styled';\n\nimport { isSameDay, parseISO } from 'date-fns';\n\nexport const TasksColumnsList = ({ date, tasks }) => {\n\n  const todoTasks = tasks.filter(task => task.category === 'to-do');\n  const inProgressTasks = tasks.filter(task => task.category === 'in-progress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n\n  const toDo = todoTasks.filter(todo => isSameDay(date, parseISO(todo.date)));\n  const inProgress = inProgressTasks.filter(inProgress =>\n    isSameDay(date, parseISO(inProgress.date))\n  );\n  const done = doneTasks.filter(done => isSameDay(date, parseISO(done.date)));\n\n  return (\n    <TasksList>\n      <TasksColumn listId=\"to-do\" date={date} tasks={toDo} />\n      <TasksColumn listId=\"in-progress\" date={date} tasks={inProgress} />\n      <TasksColumn listId=\"done\" date={date} tasks={done} />\n    </TasksList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { DayCalendarHead } from '../DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from './TasksColumnsList';\n\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\nimport {selectAllTasks} from 'redux/task/selectors'\n\nconst ChoosedDay = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const tasks = useSelector(selectAllTasks)\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n\n  return (\n    <>\n      <DayCalendarHead date={date} setDate={handleSetDate} />\n      <TasksColumnsList date={date} tasks={tasks}/>\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from 'styled-components';\n// import styled, { css } from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  margin-top: 24px;\n  margin-bottom: 14px;\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.mainBackgroundColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.CalendarHead};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props => props.weekend && '#3e85f3'};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  width: 469px;\n  height: auto;\n  padding: 28px 32px;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  box-shadow: 0px 4px 16px 0px #1111111a;\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  width: 24px;\n  height: 24px;\n  color: #000;\n  cursor: pointer;\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/modal/modalSlice';\nimport { Backdrop, ModalContainer, CloseIcon } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({children}) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal());\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <Backdrop>\n      <ModalContainer>\n        <CloseIcon onClick={handleToggleModal}></CloseIcon>\n        {children}\n      </ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","export const getDate = state => state.date;","export const selectShowModal = state => state.modal.isOpen;\nexport const modalType = state => state.modal.modalType;\nexport const modalAction = state => state.modal.modalAction;\n","export const selectAllTasks = state => state.tasks.tasks;\n\nexport const selectTasksError = state => state.tasks.error;\n\nexport const selectTasksLoading = state => state.tasks.isLoading;\n\nexport const selectSuccessful = state => state.tasks.successful;\n"],"names":["Div","styled","AddTask","props","theme","ltMainAccentColor","ltTextColor","Text","AddTaskBtn","listId","handleAddTask","id","type","onClick","size","ColumnsItem","Wrap","ColumnTitle","Icon","AiOutlinePlusCircle","page","BtnAddTop","ColumnHeadBar","title","dispatch","useDispatch","setModalTypeTask","toggleModal","List","ListItem","Card","TextTask","WrapperToolbar","ContainerDataUser","Avatar","Priority","children","SectionToolbar","TaskAction","Toolbar","setTargetElement","setTaskModalOpen","e","target","src","process","alt","ButtonContainer","StyledButton","CancelButton","TaskForm","initialValues","start","end","priority","onSubmit","values","console","log","htmlFor","name","placeholder","role","value","TaskModal","Modal","ModalCardTask","BtnMoove","Lable","modalRoot","document","querySelector","ToolBarTaskModal","targetElement","taskId","useState","top","left","modalPosition","setModalPosition","modalRef","useRef","moove","mooveTask","Object","keys","filter","handleOutsideClick","useCallback","event","current","contains","useEffect","updateModalPosition","targetRect","getBoundingClientRect","isMobile","window","innerWidth","topOffsetX","height","topOffsetY","addEventListener","removeEventListener","handleKeyDown","code","handleMooveTask","category","currentTarget","getAttribute","changeTaskCategory","createPortal","style","ref","map","TaskColumnCard","task","taskModalOpen","modalTypeSelected","useSelector","modalType","isModalOpen","selectShowModal","avatarUrl","useAuth","user","_id","ColumnTasksList","tasks","TasksColumn","date","TasksList","TasksColumnsList","todoTasks","inProgressTasks","doneTasks","toDo","todo","isSameDay","parseISO","inProgress","done","Date","getDate","selectAllTasks","DayCalendarHead","setDate","newDate","toString","GridWrapper","CellWrapperOfDate","mainBackgroundColor","CalendarHead","Day","weekend","isCurrentDay","path","useLocation","pathname","includes","formatDay","useMedia","startOfWeek","weekStartsOn","endOfWeek","week","currentDay","formattedDate","format","dayOfWeek","push","day","fullDate","addDays","dateItem","isWeekend","Backdrop","ModalContainer","CloseIcon","IoMdClose","handleToggleModal","state","modal","isOpen"],"sourceRoot":""}