{"version":3,"file":"static/js/158.ef59bc13.chunk.js","mappings":"0RAEaA,EAAMC,EAAAA,GAAAA,IAAH,yJAQHC,EAAUD,EAAAA,GAAAA,OAAH,ysCAoBM,SAAAE,GAAK,OAC3BA,EAAMC,MAAMC,iBADe,IAGhB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,WAAhB,IAKS,SAAAH,GAAK,OAC9BA,EAAMC,MAAMC,iBADkB,IAGhB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,WAAhB,IAGVC,EAAON,EAAAA,GAAAA,KAAH,0H,SCzCJO,EAAa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,cAEnC,OACE,SAACV,EAAD,WACE,UAACE,EAAD,CAASS,GAAIF,EAAQG,KAAK,SAASC,QAASH,EAA5C,WACE,SAAC,MAAD,CAAQI,KAAM,MACd,SAACP,EAAD,UAAM,iBAIb,ECXYQ,EAAcd,EAAAA,GAAAA,GAAH,kqB,oBCEXe,EAAOf,EAAAA,GAAAA,IAAH,oLAWJgB,GAAchB,EAAAA,GAAAA,GAAH,qPAcXiB,IAAOjB,EAAAA,EAAAA,IAAOkB,EAAAA,IAAPlB,CAAH,8NAOL,SAAAE,GAAK,OAAKA,EAAMiB,MAAQ,MAAnB,IACO,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,SAAnB,IACZ,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,aAAnB,IACK,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,OAAnB,IAInBC,GAAYpB,EAAAA,GAAAA,OAAH,4GCvCTqB,GAAgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxBC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,+BACE,UAACT,EAAD,YACE,SAACC,GAAD,UACa,UAAVM,EACG,QACU,gBAAVA,EACA,cACU,SAAVA,EACA,OACA,QAEN,SAACF,GAAD,CAAWR,QAjBG,WAClBW,GAASE,EAAAA,EAAAA,OACTF,GAASG,EAAAA,EAAAA,MACV,EAcK,UACE,SAACT,GAAD,UAKT,EC5BYU,GAAO3B,EAAAA,GAAAA,GAAH,grBAgDJ4B,GAAW5B,EAAAA,GAAAA,GAAH,+G,sBChDR6B,GAAO7B,EAAAA,GAAAA,IAAH,wLAUJ8B,GAAW9B,EAAAA,GAAAA,EAAH,qRAiBR+B,GAAiB/B,EAAAA,GAAAA,IAAH,sHAOdgC,GAAoBhC,EAAAA,GAAAA,IAAH,2EAMjBiC,GAASjC,EAAAA,GAAAA,IAAH,0EAMNkC,GAAWlC,EAAAA,GAAAA,KAAH,yLASD,SAAAE,GAAK,MAAuB,QAAnBA,EAAMiC,SAAqB,UAA+B,WAAnBjC,EAAMiC,SAAwB,UAAY,SAArF,ICvDZC,GAAiBpC,EAAAA,GAAAA,IAAH,yDAMdqC,GAAarC,EAAAA,GAAAA,OAAH,iSAmBViB,GAAOjB,EAAAA,GAAAA,IAAH,yD,WCtBJsC,GAAU,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,iBAAkBC,EAA6B,EAA7BA,iBAAkBC,EAAW,EAAXA,KACtDlB,GAAWC,EAAAA,EAAAA,MAGZkB,EAAQD,EAARC,IAkBL,OACE,UAACN,GAAD,YACE,SAACC,GAAD,CAAYzB,QAlBI,SAAA+B,GAClBH,GAAiB,GACjBD,EAAiBI,EAAEC,OACpB,EAeG,UACE,SAAC,GAAD,CACEC,IACEC,4EAGFC,IAAI,mBAGR,SAACV,GAAD,CAAYzB,QAtBY,SAAA+B,GAC1BpB,GAASG,EAAAA,EAAAA,OACTH,GAASyB,EAAAA,EAAAA,IAAe,SACxBzB,GAASE,EAAAA,EAAAA,OACTF,GAAS0B,EAAAA,EAAAA,IAAYR,GACtB,EAiBG,UACE,SAAC,GAAD,CACEI,IAAKC,yDACLC,IAAI,mBAGR,SAACV,GAAD,CAAYzB,QArBS,SAAA+B,GACvBpB,GAAS2B,EAAAA,GAAAA,IAAWR,GACrB,EAmBG,UACE,SAAC,GAAD,CACEG,IAAKC,wDACLC,IAAI,sBAKb,E,WCjDYI,GAAgBnD,EAAAA,GAAAA,GAAH,+WAoBboD,IAAWpD,EAAAA,EAAAA,IAAOqC,GAAPrC,CAAH,qMAaRqD,GAAQrD,EAAAA,GAAAA,EAAH,+L,WC5BZsD,GAAYC,SAASC,cAAc,eAE5BC,GAAmB,SAAC,GAK1B,IAJLjD,EAII,EAJJA,OACAkD,EAGI,EAHJA,cACAlB,EAEI,EAFJA,iBACAmB,EACI,EADJA,OAGMpC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0CoC,EAAAA,GAAAA,UAAS,CAAEC,IAAK,EAAGC,KAAM,IAAnE,gBAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,GAAAA,UAEXC,EAAQ,CACZ,QAAS,QACT,cAAe,cACf,KAAQ,QAIJC,EADWC,OAAOC,KAAKH,GACFI,QAAO,SAAA5B,GAAC,OAAIA,IAAMnC,CAAV,IAE7BgE,GAAqBC,EAAAA,GAAAA,cACzB,SAAAC,GACMT,EAASU,UAAYV,EAASU,QAAQC,SAASF,EAAM9B,SACvDJ,GAAiB,EAEpB,GACD,CAACA,KAGHqC,EAAAA,GAAAA,YAAU,WACR,IAAMC,EAAsB,WAC1B,GAAIpB,EAAe,CACjB,IAAMqB,EAAarB,EAAcsB,wBAC3BC,EAAWC,OAAOC,WAAa,IAC/BC,EAAaH,EAAWF,EAAWM,OAAS,GAAKN,EAAWM,OAAS,EACrEC,EAAaL,EAAWF,EAAWjB,KAAO,GAAKiB,EAAWjB,KAChEE,EAAiB,CACfH,IAAKkB,EAAWlB,IAAMuB,EACtBtB,KAAMwB,GAET,CACF,EAMD,OAJAR,IAEAI,OAAOK,iBAAiB,SAAUT,GAClCvB,SAASgC,iBAAiB,YAAaf,GAChC,WACLU,OAAOM,oBAAoB,SAAUV,GACrCvB,SAASiC,oBAAoB,YAAahB,EAC3C,CAEF,GAAE,CAACd,KAEJmB,EAAAA,GAAAA,YAAU,WACR,IAAMY,EAAgB,SAAA9C,GACL,WAAXA,EAAE+C,MACJlD,GAAiB,EAEpB,EAGD,OAFA0C,OAAOK,iBAAiB,UAAWE,GAE5B,WACLP,OAAOM,oBAAoB,UAAWC,EACvC,CAEF,GAAE,IAEL,IAAME,EAAkB,SAAChD,GACvB,IAAMiD,EAAWjD,EAAEkD,cAAcC,aAAa,cAE9CvE,GAASwE,EAAAA,GAAAA,IAAmB,CAACrF,GAAIiD,EAAQiC,SAAAA,IAE1C,EAEC,OAAOI,EAAAA,GAAAA,eACL,SAAC7C,GAAD,CACE8C,MAAO,CAAEpC,IAAKE,EAAcF,IAAKC,KAAMC,EAAcD,MACrDoC,IAAKjC,EAFP,SAIGG,EAAU+B,KAAI,SAAAxD,GAAC,OACd,yBACE,UAACS,GAAD,CAAUxC,QAAS+E,EAAiB,aAAYhD,EAAhD,WACE,SAACU,GAAD,UAAQc,EAAMxB,MACd,SAAC,GAAD,CACEE,IACEC,4EAGFC,IAAI,oBARAJ,EADI,MAelBW,GAEH,EC9FY8C,GAAiB,SAAC,GAGxB,IAFL3D,EAEI,EAFJA,KACAjC,EACI,EADJA,OAGA,GAA0CoD,EAAAA,GAAAA,WAAS,GAAnD,gBAAOyC,EAAP,KAAsB7D,EAAtB,KACA,GAA2CoB,EAAAA,GAAAA,UAAS,MAApD,gBAAQF,EAAR,KAAuBnB,EAAvB,KAGU+D,GACNC,EAAAA,GAAAA,KADFC,KAAQF,UAEFG,EAAyBhE,EAAzBgE,SAAUnF,EAAemB,EAAfnB,MAAOoB,EAAQD,EAARC,IAEzB,OACE,UAACb,GAAD,CAAMnB,GAAG,gBAAT,WAEE,SAACoB,GAAD,UAAWR,KAEX,UAACS,GAAD,YACE,UAACC,GAAD,YACE,SAACC,GAAD,CAAQY,IAAKyD,EAAWvD,IAAI,YAC5B,SAACb,GAAD,UAAWuE,QAEb,SAACnE,GAAD,CACEG,KAAMA,EACND,iBAAkBA,EAClBD,iBAAkBA,IAErB8D,IAAiB,SAAC5C,GAAD,CAAkBE,OAAQjB,EAAMlC,OAAQA,EAAQkD,cAAeA,EAAelB,iBAAkBA,SAKvH,EC3CYkE,GAAkB,SAAC,GAGzB,IAFLlG,EAEI,EAFJA,OACAmG,EACI,EADJA,MAGA,OACE,SAAChF,GAAD,UACGgF,EAAMR,KAAI,SAAAxD,GAAC,OACV,SAACf,GAAD,WACE,SAACwE,GAAD,CACE5F,OAAQA,EACRiC,KAAME,KAHKA,EAAED,IADP,KAUjB,E,2CCjBYkE,GAAQ5G,EAAAA,GAAAA,MAAH,sVAoBL6G,GAAc7G,EAAAA,GAAAA,MAAJ,oWAsBV8G,IAAQ9G,EAAAA,EAAAA,IAAO+G,GAAAA,GAAP/G,CAAH,ybA2BLgH,IAAQhH,EAAAA,EAAAA,IAAO+G,GAAAA,GAAP/G,CAAH,4DAKLiH,GAAcjH,EAAAA,GAAAA,KAAH,oqBAMF,SAAAE,GAAK,MAAoB,QAAhBA,EAAMgH,MAAkB,UAA4B,WAAhBhH,EAAMgH,MAAqB,UAAY,SAA/E,GAKzBF,GAUEA,GAAkBA,IAUE,SAAA9G,GAAK,MAAoB,QAAhBA,EAAMgH,MAAkB,YAA8B,WAAhBhH,EAAMgH,MAAqB,YAAc,WAAnF,IAQhBC,GAAenH,EAAAA,GAAAA,IAAH,uKAWZoH,GAAcpH,EAAAA,GAAAA,IAAH,6GAQXqH,GAAgBrH,EAAAA,GAAAA,IAAH,oIASbsH,GAAkBtH,EAAAA,GAAAA,IAAH,wDAKfuH,GAAevH,EAAAA,GAAAA,OAAH,+gBAiCZwH,IAAexH,EAAAA,EAAAA,IAAOuH,GAAPvH,CAAH,iKAUZyH,IAAazH,EAAAA,EAAAA,IAAOuH,GAAPvH,CAAH,wCAIViB,GAAOjB,EAAAA,GAAAA,IAAH,sCAIJ0H,IAAa1H,EAAAA,EAAAA,IAAO2H,EAAAA,IAAP3H,CAAH,mJ,sBC/KV4H,GAAW,WACtB,IAAMrG,GAAWC,EAAAA,EAAAA,MACXqG,EAAO,IAAIC,MAAKC,EAAAA,EAAAA,IAAYC,GAAAA,IAC5BvF,GAAOsF,EAAAA,EAAAA,IAAYE,GAAAA,IACnBtH,GAAOoH,EAAAA,EAAAA,IAAYG,GAAAA,IAEnBC,EAAY1F,GAAiB,SAAT9B,EAElBW,EAAgCmB,EAAhCnB,MAAO8G,EAAyB3F,EAAzB2F,MAAOC,EAAkB5F,EAAlB4F,IAAK5B,EAAahE,EAAbgE,SAErB6B,EAAgB,CACpBhH,MAAM,GAAD,OAAK6G,EAAY7G,EAAQ,IAC9B8G,MAAM,GAAD,OAAKD,EAAYC,EAAQ,IAC9BC,IAAI,GAAD,OAAKF,EAAYE,EAAM,IAC1B5B,SAAS,GAAD,OAAK0B,EAAY1B,EAAW,QAsBtC,OACE,SAACY,GAAD,WACE,SAAC,MAAD,CAAQiB,cAAeA,EAAeC,SAjBrB,SAAAC,GACnB,GAAa,SAAT7H,EAAiB,CACnB,IAAM8H,GAAO,oBAAQhG,GAAS+F,GAC9BjH,GAASmH,EAAAA,GAAAA,IAAWD,IACpBlH,GAASG,EAAAA,EAAAA,MACV,CAED,GAAa,QAATf,EAAgB,CAClB,IAAM8H,GAAO,SAAKZ,MAAMc,EAAAA,GAAAA,SAAOd,EAAM,eAAkBW,GAEvDjH,GAASqH,EAAAA,GAAAA,IAAQH,IACjBlH,GAASG,EAAAA,EAAAA,MACV,CACF,EAIG,UACE,UAAC,MAAD,YACE,UAACkF,GAAD,CAAOiC,QAAQ,QAAf,UAAuB,SAErB,SAAC/B,GAAD,CAAOpG,GAAG,QAAQoI,KAAK,QAAQC,YAAY,mBAE7C,UAAC3B,GAAD,YACE,UAACR,GAAD,CAAOiC,QAAQ,QAAf,UAAuB,SAErB,SAAC/B,GAAD,CAAOpG,GAAG,QAAQoI,KAAK,QAAQC,YAAY,cAE7C,UAACnC,GAAD,CAAOiC,QAAQ,MAAf,UAAqB,OAEnB,SAAC/B,GAAD,CAAOpG,GAAG,MAAMoI,KAAK,MAAMC,YAAY,iBAK3C,UAAC5B,GAAD,CAAc6B,KAAK,QAAQ,kBAAgB,uBAA3C,WACE,UAACnC,GAAD,YACE,SAACG,GAAD,CAAOrG,KAAK,QAAQmI,KAAK,WAAW5B,MAAM,SAC1C,SAACD,GAAD,CAAaC,MAAM,QAAO,UAG5B,UAACL,GAAD,YACE,SAACG,GAAD,CAAOrG,KAAK,QAAQmI,KAAK,WAAW5B,MAAM,YAC1C,SAACD,GAAD,CAAaC,MAAM,WAAU,aAG/B,UAACL,GAAD,YACE,SAACG,GAAD,CAAOrG,KAAK,QAAQmI,KAAK,WAAW5B,MAAM,UAC1C,SAACD,GAAD,CAAaC,MAAM,SAAQ,cAI/B,SAACI,GAAD,UACY,QAAT3G,GACC,iCACE,UAAC4G,GAAD,CAAc5G,KAAK,SAAnB,WACA,SAAC+G,GAAD,IAAc,UAGd,SAACF,GAAD,CAAc7G,KAAK,SAASC,QA/DtB,WAClBW,GAASG,EAAAA,EAAAA,MACV,EA6Da,SAAkD,eAKpD,UAAC+F,GAAD,CAAY9G,KAAK,SAAjB,WACA,SAAC,GAAD,CACJkC,IAAKC,+DACLC,IAAI,gBACJ,kBAQT,ECrHYkG,GAAY,WAQvB,OACE,SAACC,GAAA,EAAD,WACE,SAACtB,GAAD,KAGL,ECRYuB,GAAc,SAAC,GAA6B,IAA3B3I,EAA0B,EAA1BA,OAAcmG,GAAY,EAAlBkB,KAAkB,EAAZlB,OACpCpF,GAAWC,EAAAA,EAAAA,MACX4H,GAAoBrB,EAAAA,EAAAA,IAAYsB,GAAAA,IAEhCC,GAAcvB,EAAAA,EAAAA,IAAYwB,GAAAA,IAQhC,OACE,UAACzI,EAAD,YACE,SAACO,GAAD,CAAeC,MAAOd,KAEtB,SAACkG,GAAD,CACElG,OAAQA,EACRmG,MAAOA,KAOT,SAACpG,EAAD,CAAYC,OAAQA,EAAQC,cAnBC,WAC/Bc,GAASE,EAAAA,EAAAA,OACTF,GAASyB,EAAAA,EAAAA,IAAe,QACxBzB,GAASG,EAAAA,EAAAA,MACV,IAgB0B,SAAtB0H,GAAgCE,IAAgB,SAACL,GAAD,MAItD,ECvCYO,GAAYxJ,EAAAA,GAAAA,GAAH,46B,sBCGTyJ,GAAmB,SAAC,GAAqB,IAAnB5B,EAAkB,EAAlBA,KAAMlB,EAAY,EAAZA,MAEjC+C,EAAY/C,EAAMpC,QAAO,SAAA9B,GAAI,MAAsB,UAAlBA,EAAKmD,QAAT,IAC7B+D,EAAkBhD,EAAMpC,QAAO,SAAA9B,GAAI,MAAsB,gBAAlBA,EAAKmD,QAAT,IACnCgE,EAAYjD,EAAMpC,QAAO,SAAA9B,GAAI,MAAsB,SAAlBA,EAAKmD,QAAT,IAE7BiE,EAAOH,EAAUnF,QAAO,SAAAuF,GAAI,OAAIC,EAAAA,GAAAA,SAAUlC,GAAMmC,EAAAA,GAAAA,SAASF,EAAKjC,MAAlC,IAC5BoC,EAAaN,EAAgBpF,QAAO,SAAA0F,GAAU,OAClDF,EAAAA,GAAAA,SAAUlC,GAAMmC,EAAAA,GAAAA,SAASC,EAAWpC,MADc,IAG9CqC,EAAON,EAAUrF,QAAO,SAAA2F,GAAI,OAAIH,EAAAA,GAAAA,SAAUlC,GAAMmC,EAAAA,GAAAA,SAASE,EAAKrC,MAAlC,IAElC,OACE,UAAC2B,GAAD,YACE,SAACL,GAAD,CAAa3I,OAAO,QAAQqH,KAAMA,EAAMlB,MAAOkD,KAC/C,SAACV,GAAD,CAAa3I,OAAO,cAAcqH,KAAMA,EAAMlB,MAAOsD,KACrD,SAACd,GAAD,CAAa3I,OAAO,OAAOqH,KAAMA,EAAMlB,MAAOuD,MAGnD,E,sBCED,GAjBmB,WACjB,IAAM3I,GAAWC,EAAAA,EAAAA,MACXqG,EAAO,IAAIC,MAAKC,EAAAA,EAAAA,IAAYC,GAAAA,IAC5BrB,GAAQoB,EAAAA,EAAAA,IAAYoC,GAAAA,IAM1B,OACE,iCACE,SAACC,EAAA,EAAD,CAAiBvC,KAAMA,EAAMwC,QANX,SAAAC,GACpB/I,GAAS8I,EAAAA,GAAAA,GAAQC,EAAQC,YAC1B,KAKG,SAACd,GAAD,CAAkB5B,KAAMA,EAAMlB,MAAOA,MAG1C,C,wKCrBY6D,EAAcxK,EAAAA,GAAAA,GAAH,wfACZ,SAAAE,GAAK,OAAKA,EAAMiB,KAAO,OAAS,MAA3B,IASJ,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,OAAS,WAA3B,IAGH,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,YAAc,WAAhC,IACN,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,OAAS,MAA3B,IACE,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,OAAS,MAA3B,IACR,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,OAAS,MAA3B,IAIF,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,OAAS,MAA3B,IACX,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,YAAc,WAAhC,IASPsJ,GAJqBzK,EAAAA,GAAAA,GAAH,2CAIEA,EAAAA,GAAAA,GAAH,wdACd,SAAAE,GAAK,OAAIA,EAAMC,MAAMuK,mBAAhB,IAIV,SAAAxK,GAAK,OAAIA,EAAMC,MAAMwK,YAAhB,IAQJ,SAAAzK,GAAK,OAAKA,EAAMiB,KAAO,UAAY,SAA9B,IAQJ,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,MAAnB,IACM,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,SAAnB,IACZ,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,aAAnB,IACL,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,MAAnB,IACK,SAAAjB,GAAK,OAAKA,EAAMiB,MAAQ,OAAnB,KAInByJ,EAAM5K,EAAAA,GAAAA,EAAH,oNAEL,SAAAE,GAAK,OAAIA,EAAM2K,SAAW,SAArB,IAKC,SAAA3K,GAAK,OAAKA,EAAMiB,KAAO,OAAS,MAA3B,IACH,SAAAjB,GAAK,OAAKA,EAAMiB,KAAO,OAAS,KAA3B,IAIX2G,EAAO9H,EAAAA,GAAAA,EAAH,kTACN,SAAAE,GAAK,OAAIA,EAAM4K,cAAgB,MAA1B,IACM,SAAA5K,GAAK,OACvBA,EAAM4K,aACF,UADJ,WAEO,SAAA5K,GAAK,OAAIA,EAAMC,MAAMuK,mBAAhB,GAHW,I,SC1DdN,EAAkB,SAAC,GAW9B,IAXqD,IAArBvC,EAAoB,EAApBA,KAAMwC,EAAc,EAAdA,QAEhCU,GADeC,EAAAA,EAAAA,MAAbC,SACcC,SAAS,OAEzBC,GADWC,EAAAA,EAAAA,GAAS,sBACG,QAAU,IACjChD,GAAQiD,EAAAA,EAAAA,SAAYxD,EAAM,CAAEyD,aAAc,IAC1CjD,GAAMkD,EAAAA,EAAAA,SAAU1D,EAAM,CAAEyD,aAAc,IACtCE,EAAO,GAETC,EAAarD,EAEVqD,GAAcpD,GAAK,CACxB,IAAMqD,GAAgB/C,EAAAA,EAAAA,SAAO8C,EAAY,KACnCE,GAAYhD,EAAAA,EAAAA,SAAO8C,EAAYN,GAErCK,EAAKI,KAAK,CAAE/D,KAAM6D,EAAeG,IAAKF,EAAWG,SAAUL,IAC3DA,GAAaM,EAAAA,EAAAA,SAAQN,EAAY,EAClC,CAED,OACE,SAACjB,EAAD,CAAarJ,MAAO4J,EAApB,SACGS,EAAKrF,KAAI,SAAA6F,GACR,IAAMlB,GAAef,EAAAA,EAAAA,SAAUiC,EAASF,SAAUjE,GAClD,OACE,UAAC4C,EAAD,CAEE7J,QAAS,kBAAMmK,GAAQV,EAAQ2B,EAASF,SAA/B,EACT3K,MAAO4J,EAHT,WAKE,SAACH,EAAD,CAAKC,SAASoB,EAAAA,EAAAA,GAAUD,EAASF,YAAcf,EAAM5J,MAAO4J,EAA5D,SACGiB,EAASH,MAEXd,IACC,SAAC,EAAD,CAAMD,aAAcA,EAAc3J,MAAO4J,EAAzC,SACGiB,EAASnE,SATTmE,EAASF,SAcnB,KAGN,C,sICzDYI,EAAWlM,EAAAA,GAAAA,IAAH,8LAYRmM,EAAiBnM,EAAAA,GAAAA,IAAH,oTAedoM,GAAYpM,EAAAA,EAAAA,IAAOqM,EAAAA,IAAPrM,CAAH,kJ,SCxBhBsD,EAAYC,SAASC,cAAc,eAE5B0F,EAAQ,SAAC,GAAgB,IAAf/G,EAAc,EAAdA,SACfZ,GAAWC,EAAAA,EAAAA,MACX8K,EAAoB,kBAAM/K,GAASG,EAAAA,EAAAA,MAAf,EAgB1B,OAdAmD,EAAAA,EAAAA,YAAU,WACR,IAAMY,EAAgB,SAAA9C,GACL,WAAXA,EAAE+C,MACJ4G,GAEH,EAGD,OAFApH,OAAOK,iBAAiB,UAAWE,GAE5B,WACLP,OAAOM,oBAAoB,UAAWC,EACvC,CAEF,GAAE,KAEIO,EAAAA,EAAAA,eACL,SAACkG,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,CAAWxL,QAAS0L,IACnBnK,OAGLmB,EAEH,C,uDCnCM,IAAM0E,EAAU,SAAAuE,GAAK,OAAIA,EAAM1E,IAAV,C,+HCArB,IAAM0B,EAAkB,SAAAgD,GAAK,OAAIA,EAAMC,MAAMC,MAAhB,EACvBpD,EAAY,SAAAkD,GAAK,OAAIA,EAAMC,MAAMnD,SAAhB,EACjBnB,EAAc,SAAAqE,GAAK,OAAIA,EAAMC,MAAMtE,WAAhB,EACnBD,EAAe,SAAAsE,GAAK,OAAIA,EAAMC,MAAME,QAAhB,C,wDCH1B,IAAMvC,EAAiB,SAAAoC,GAAK,OAAIA,EAAM5F,MAAMA,KAAhB,C","sources":["components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.js","components/ChoosedDay/TasksColumn/TasksColumn.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/ToolBarTaskModal/ToolBarTaskModal.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/ToolBarTaskModal/ToolBarTaskModal.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.js","components/TaskForm/TaskForm.styled.js","components/TaskForm/TaskForm.js","components/TaskModal/TaskModal.js","components/ChoosedDay/TasksColumn/TasksColumn.js","components/ChoosedDay/TasksColumnsList.styled.jsx","components/ChoosedDay/TasksColumnsList.js","components/ChoosedDay/ChoosedDay.js","components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","redux/currentDate/selector.js","redux/modal/selector.js","redux/task/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  /* padding: 30px 0; */\n  /* background-color: transparent; */\n`;\n\nexport const AddTask = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 20px;\n  width: 100%;\n\n  cursor: pointer;\n  border-radius: 8px;\n  backface-visibility: hidden;\n  transition: transform 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  //! для светлой темы\n  // border: 2px dashed #3e85f3;\n  background-color: #e3f3ff;\n  //? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  color: #111111;\n  //? color: ${props => props.theme.ltTextColor}; //переключение по теме\n\n  //! для темной темы\n  // border: none;\n  // background-color: #3e85f3;\n  //// ? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  // color: #ffffff;\n  //// ? color: ${props => props.theme.ltTextColor}; //переключение по теме\n`;\n\nexport const Text = styled.span`\n  font-size: 14px;\n  font-family: Inter, sans-serif;\n  font-weight: 600;\n  line-height: 18px;\n`;\n","import { FiPlus } from 'react-icons/fi';\nimport { AddTask, Div, Text } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({ listId, handleAddTask}) => {\n  \n  return (\n    <Div>\n      <AddTask id={listId} type=\"button\" onClick={handleAddTask}>\n        <FiPlus size={24} />\n        <Text>Add task</Text>\n      </AddTask>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnsItem = styled.li`\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n\n  /* min-height: 155px; */\n  /* max-height: 432px; */\n\n  height: fit-content;\n  min-width: 280px;\n  line-height: 1.12;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 18px 18px 10px 18px;\n  gap: 16px;\n  font-family: 'InterSemiBolt';\n  max-width: 335px;\n\n  @media screen and (min-width: 768px) {\n    padding: 18px 22px 28px;\n    font-size: 20px;\n    max-width: calc((100% - 48px) / 2);\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n\n    max-width: calc((100% - 54px) / 3);\n  }\n`;\n","import styled from 'styled-components';\n\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 7px 0;\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\nmargin-bottom: 28px;\n  }\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-family: 'InterSemiBolt';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.11;\n  color: #111111;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Icon = styled(AiOutlinePlusCircle)`\n  width: 22px;\n  height: 22px;\n  fill: black;\n  border-radius: 50%;\n  &:hover,\n  &:focus {\n    fill: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const BtnAddTop = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 22px;\n  height: 22px;\n`;\n","import { setModalTypeTask, toggleModal } from 'redux/modal/modalSlice';\nimport { Wrap, ColumnTitle, BtnAddTop, Icon } from './ColumnHeadBar.styled';\nimport { useDispatch } from 'react-redux';\n\nexport const ColumnHeadBar = ({ title }) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(setModalTypeTask())\n    dispatch(toggleModal());\n  };\n\n  return (\n    <>\n      <Wrap>\n        <ColumnTitle>\n          {title === 'to-do'\n            ? 'To do'\n            : title === 'in-progress'\n            ? 'In progress'\n            : title === 'done'\n            ? 'Done'\n            : null}\n        </ColumnTitle>\n        <BtnAddTop onClick={handleClick}>\n          <Icon />\n        </BtnAddTop>\n      </Wrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n\ndisplay: flex;\nflex-direction: column;\ngap: 14px;\nlist-style: none;\nwidth: 100%;\nheight: 356px;\npadding-right: 6px;\n\n  overflow: hidden;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n  margin-bottom: -8px;\n\n  /* width */\n::-webkit-scrollbar {\n  width: 6px;\n\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 30px #F2F2F2;\n  border-radius: 12px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #E7E5E5;\n  border-radius: 12px;\n}\n\n  @media screen and (min-width: 768px) {\n\n  height: 372px;\n  gap: 18px;\n  margin-bottom: 32px;\n\n    /* width */\n::-webkit-scrollbar {\n  width: 8px;\n\n}\n\n  }\n`;\n\nexport const ListItem = styled.li`\nheight: 108px;\n\n\n  @media screen and (min-width: 768px) {\n    height: 112px;\n  }\n`;\n","import styled from \"styled-components\"\n\nexport const Card = styled.div`\nposition: relative;\npadding: 14px 14px 18px 14px;\nwidth: 100%;\nheight: 100%;\nbackground-color: #F7F6F9;\nborder: 1px solid #DCE3E5CC;\nborder-radius: 8px;\n`;\n\nexport const TextTask = styled.p`\nmargin-bottom: 24px;\n\ncolor: #111;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\noverflow: hidden;\nfont-size: 14px;\nfont-family: Inter;\nfont-weight: 500;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 28px;\n  }\n`\n\nexport const WrapperToolbar = styled.div`\nposition: relative;\ndisplay: flex;\nalign-items: self-end;\njustify-content: space-between;\n`;\n\nexport const ContainerDataUser = styled.div`\ndisplay: flex;\nalign-items: self-end;\ngap: 8px;\n`;\n\nexport const Avatar = styled.img`\nwidth: 32px;\nheight: 32px;\nborder-radius: 50%;\n`;\n\nexport const Priority = styled.span`\nfont-size: 10px;\nfont-family: Inter;\nfont-weight: 600;\nline-height: 1.2;\n\ncolor: #F7F6F9;\npadding: 4px 12px;\nborder-radius: 4px;\nbackground-color: ${props => props.children === \"low\" ? \"#72C2F8\" : props.children === \"medium\" ? \"#F3B249\" : \"#EA3D65\"};\n`;\n\n\n\n","import styled from 'styled-components';\n\nexport const SectionToolbar = styled.div`\n  display: flex;\n  gap:10px;\n\n`;\n\nexport const TaskAction = styled.button`\n  width: 14px;\n  height: 14px;\n\n  border-radius: 50%;\n  cursor: pointer;\n\n    @media screen and (min-width: 768px) {\n      width: 16px;\n      height: 16px;\n    }\n  &:hover,\n  &:focus {\n    transform: scale(1.2);\n    transition-duration: 200ms;\n  }\n\n`;\n\nexport const Icon = styled.img`\n  width: 14px;\n  height: 14px;\n`;\n","import { SectionToolbar, TaskAction, Icon } from './Toolbar.styled';\nimport { useDispatch } from 'react-redux';\nimport { setModalAction, toggleModal, setDataTask, setModalTypeTask } from 'redux/modal/modalSlice';\nimport { deleteTask } from 'redux/task/operations';\n\nexport const Toolbar = ({ setTargetElement, setTaskModalOpen, task }) => {\n  const dispatch = useDispatch();\n\n  \nconst {_id } = task;\n\n  const handleClick = e => {\n    setTaskModalOpen(true);\n    setTargetElement(e.target);\n  };\n\n  const handleOpenModalEdit = e => {\n    dispatch(toggleModal());\n    dispatch(setModalAction(\"edit\"));\n    dispatch(setModalTypeTask());\n    dispatch(setDataTask(task));\n  };\n\n  const handleDeleteTask = e => {\n    dispatch(deleteTask(_id))\n  };\n\n  return (\n    <SectionToolbar>\n      <TaskAction onClick={handleClick}>\n        <Icon\n          src={\n            process.env.PUBLIC_URL +\n            '/images/icons/icon-arrow-circle-broken-right-16x16.svg'\n          }\n          alt=\"button-move\"\n        />\n      </TaskAction>\n      <TaskAction onClick={handleOpenModalEdit}>\n        <Icon\n          src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16.svg'}\n          alt=\"button-edit\"\n        />\n      </TaskAction>\n      <TaskAction onClick={handleDeleteTask}>\n        <Icon\n          src={process.env.PUBLIC_URL + '/images/icons/icon-trash-16x16.svg'}\n          alt=\"button-delete\"\n        />\n      </TaskAction>\n    </SectionToolbar>\n  );\n};\n","import styled from \"styled-components\"\nimport { TaskAction } from \"../Toolbar/Toolbar.styled\";\n\nexport const ModalCardTask = styled.ul`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 14px;\npadding: 14px;\nwidth: 147px;\nheight: 90px;\nbackground-color: #FFFFFF;\nborder-radius: 8px;\nbox-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10);\n@media screen and (min-width: 768px) {\npadding: 20px 24px;\n    \n  }\n`;\n\n\nexport const BtnMoove = styled(TaskAction)`\ndisplay: flex;\nwidth: 87px;\nalign-items: center;\njustify-content: space-between;\n\ncolor: #343434;\n\n@media screen and (min-width: 768px) {\nwidth: 99px;\n    \n    }\n`\nexport const Lable = styled.p`\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 500;\nline-height: 1.2;\n\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nline-height: 1.3;\n    \n  }\n`\n\n\n","import { Icon } from '../Toolbar/Toolbar.styled';\nimport { BtnMoove, Lable, ModalCardTask } from './ToolBarTaskModal.styled';\nimport { createPortal } from 'react-dom';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { changeTaskCategory } from 'redux/task/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ToolBarTaskModal = ({\n  listId,\n  targetElement,\n  setTaskModalOpen,\n  taskId\n}) => {\n\n  const dispatch = useDispatch();\n\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n  const modalRef = useRef();\n\n  const moove = {\n    \"to-do\": 'To do',\n    \"in-progress\": 'In progress',\n    \"done\": 'Done',\n  };\n\n  const arrMoove = Object.keys(moove);\n  const mooveTask = arrMoove.filter(e => e !== listId);\n\n  const handleOutsideClick = useCallback(\n    event => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setTaskModalOpen(false);\n      }\n    },\n    [setTaskModalOpen]\n  );\n\n  useEffect(() => {\n    const updateModalPosition = () => {\n      if (targetElement) {\n        const targetRect = targetElement.getBoundingClientRect();\n        const isMobile = window.innerWidth < 768;\n        const topOffsetX = isMobile ? targetRect.height + 12 : targetRect.height + 8;\n        const topOffsetY = isMobile ? targetRect.left - 70 : targetRect.left;\n        setModalPosition({\n          top: targetRect.top + topOffsetX,\n          left: topOffsetY,\n        });\n      }\n    };\n\n    updateModalPosition();\n\n    window.addEventListener('resize', updateModalPosition);\n    document.addEventListener('mousedown', handleOutsideClick);\n    return () => {\n      window.removeEventListener('resize', updateModalPosition);\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [targetElement]);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setTaskModalOpen(false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\nconst handleMooveTask = (e) => {\n  const category = e.currentTarget.getAttribute('data-moove');\n\n  dispatch(changeTaskCategory({id: taskId, category} ))\n  \n}\n\n  return createPortal(\n    <ModalCardTask\n      style={{ top: modalPosition.top, left: modalPosition.left }}\n      ref={modalRef}\n    >\n      {mooveTask.map(e => (\n        <li  key={e}>\n          <BtnMoove onClick={handleMooveTask} data-moove={e}>\n            <Lable>{moove[e]}</Lable>\n            <Icon\n              src={\n                process.env.PUBLIC_URL +\n                '/images/icons/icon-arrow-circle-broken-right-16x16.svg'\n              }\n              alt=\"button-move\"\n            />\n          </BtnMoove>\n        </li>\n      ))}\n    </ModalCardTask>,\n    modalRoot\n  );\n};\n","import { useAuth } from 'hooks/useAuth';\nimport {\n  Avatar,\n  Card,\n  ContainerDataUser,\n  TextTask,\n  WrapperToolbar,\n  Priority,\n} from './TaskColumnCard.styled';\nimport { Toolbar } from './Toolbar/Toolbar';\n\nimport { useState } from 'react';\nimport { ToolBarTaskModal } from \"./ToolBarTaskModal/ToolBarTaskModal\";\n\nexport const TaskColumnCard = ({\n  task,\n  listId,\n}) => {\n\n  const [taskModalOpen, setTaskModalOpen] = useState(false)\n  const [ targetElement, setTargetElement] = useState(null)\n\n  const {\n    user: { avatarUrl },\n  } = useAuth();\n  const { priority, title, _id } = task;\n\n  return (\n    <Card id=\"targetElement\">\n\n      <TextTask>{title}</TextTask>\n\n      <WrapperToolbar>\n        <ContainerDataUser>\n          <Avatar src={avatarUrl} alt=\"avatar\" />\n          <Priority>{priority}</Priority>\n        </ContainerDataUser>\n        <Toolbar\n          task={task}\n          setTaskModalOpen={setTaskModalOpen}\n          setTargetElement={setTargetElement}\n        />\n      {taskModalOpen && <ToolBarTaskModal taskId={_id } listId={listId} targetElement={targetElement} setTaskModalOpen={setTaskModalOpen}/>}\n\n      </WrapperToolbar>\n    </Card>\n  );\n};\n","// import { nanoid } from 'nanoid';\nimport { List, ListItem } from './ColumnTasksList.styled';\nimport { TaskColumnCard } from './TaskColumnCard/TaskColumnCard';\n\nexport const ColumnTasksList = ({\n  listId,\n  tasks\n}) => {\n\n  return (\n    <List>\n      {tasks.map(e => (\n        <ListItem key={e._id}>\n          <TaskColumnCard\n            listId={listId}\n            task={e}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\nimport { FiPlus } from 'react-icons/fi';\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\ngap: 8px;\nmargin-bottom: 16px;\n\ncolor: #343434CC;\nfont-size: 12px;\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 500;\nline-height: 1.2;\n\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nfont-weight: 600;\n  line-height: 1.3;\nmargin-bottom: 18px;\n}\n`\nexport const LabelRadio  = styled.label`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ngap: 6px;\ncursor: pointer;\nposition: relative;\n\ncolor: #343434;\nfont-size: 12px;\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 600;\nline-height: 1.2;\n\n@media screen and (min-width: 768px) {\nfont-size: 14px;\nfont-weight: 600;\nline-height: 1.3;\n}\n`;\n\nexport const Input = styled(Field)`\npadding: 12px 14px;\nwidth: 100%;\n\ncolor: #343434;\nfont-size: 14px;\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 600;\nline-height: 1.3;\nborder: none;\nbackground-color: #F6F6F6;\nborder-radius: 8px;\noutline: none; \n\n:focus  {\n  box-shadow: 0px 2px 4px 0px #1111111a;\n  }\n\n  @media screen and (min-width: 768px) {\npadding: 14px 18px;\nfont-size: 14px;\nfont-weight: 600;\nline-height: 1.3;\n}\n`;\n\nexport const Radio = styled(Field)`\nposition: absolute;\n  opacity: 0;\n`;\n\nexport const RadioCustom = styled.span`\n  position: relative;\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  background-color: ${props => props.value === \"low\" ? \"#72C2F8\" : props.value === \"medium\" ? \"#F3B249\" : \"#EA3D65\"};\n  transition: all 0.3s ease;\ntext-align: center;\n\n\n${Radio}:checked ~ & {\n  width: 8px;\n  height: 8px;\n  \n  @media screen and (min-width: 768px) {\n    width: 10px;\n  height: 10px;\n}\n  }\n\n  ${Radio}:checked, ${Radio}:checked ~ &::before {\n  content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  width: 12px;\n  height: 12px;\n\n  border-radius: 14px;\n  border: 1.3px solid ${props => props.value === \"low\" ? \"#72C2F880\" : props.value === \"medium\" ? \"#F3B24980\" : \"#EA3D6580\"};\n  @media screen and (min-width: 768px) {\n    width: 14px;\n  height: 14px;\n  }\n}\n`;\n\nexport const WrapperRadio = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 16px;\nmargin-bottom: 32px;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 28px;\n  }\n`;\n\nexport const WrapperTime = styled.div`\ndisplay: flex;\ngap: 15px;\n@media screen and (min-width: 768px) {\n  gap: 16px;\n}\n`;\n\nexport const ContainerForm = styled.div`\nwidth: 100%;\npadding: 48px 18px 40px;\n\n@media screen and (min-width: 768px) {\n  padding: 40px 28px;\n}\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  width: 135px;\n  height: 42px;\n\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  border-radius: 8px;\n  background: #3e85f3;\n\n  border: none;\n  outline: none;\n  padding: 0;\n\n  color: #FFF;\ntext-align: center;\nfont-size: 14px;\nfont-family: Inter;\nfont-style: normal;\nfont-weight: 600;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.3;\n    width: 182px;\n  height: 48px;\n  }\n`;\n\nexport const CancelButton = styled(StyledButton)`\n  background: #e5edfa;\n  width: 118px;\npadding: 0;\n  color: black;\n  @media screen and (min-width: 768px) {\n    width: 144px;\n  }\n`;\n\nexport const EditButton = styled(StyledButton)`\n  width: 100%;\n`;\n\nexport const Icon = styled.img`\ncolor: #fff;\n`\n\nexport const IconFiPlus = styled(FiPlus)`\n    width: 18px;\n    height: 18px;\n\n  @media screen and (min-width: 768px) {\n    width: 20px;\n    height: 20px;\n  }\n`\n","import { Formik, Form } from 'formik';\nimport {\n  CancelButton,\n  StyledButton,\n  ButtonContainer,\n  EditButton,\n  LabelRadio,\n  Label,\n  WrapperTime,\n  Input,\n  Radio,\n  WrapperRadio,\n  ContainerForm,\n  RadioCustom,\n  Icon,\n  IconFiPlus\n} from './TaskForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { format } from 'date-fns';\nimport { getDate } from 'redux/currentDate/selector';\n\nimport { toggleModal } from 'redux/modal/modalSlice';\nimport { getModalTask, modalAction } from 'redux/modal/selector';\nimport { updateTask, addTask } from 'redux/task/operations';\n\nexport const TaskForm = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const task = useSelector(getModalTask);\n  const type = useSelector(modalAction);\n\n  const howRender = task && type === 'edit';\n\n  const { title, start, end, priority } = task;\n\n  const initialValues = {\n    title: `${howRender ? title : ''}`,\n    start: `${howRender ? start : ''}`,\n    end: `${howRender ? end : ''}`,\n    priority: `${howRender ? priority : 'low'}`,\n  };\n\n  const handleClick = () => {\n    dispatch(toggleModal());\n  };\n\n  const handleSubmit = data => {\n    if (type === 'edit') {\n      const newTask = { ...task, ...data };\n      dispatch(updateTask(newTask));\n      dispatch(toggleModal());\n    }\n\n    if (type === 'add') {\n      const newTask = { date: format(date, 'yyyy-MM-dd'), ...data };\n\n      dispatch(addTask(newTask));\n      dispatch(toggleModal());\n    }\n  };\n\n  return (\n    <ContainerForm>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Label htmlFor=\"title\">\n            Title\n            <Input id=\"title\" name=\"title\" placeholder=\"Enter text\" />\n          </Label>\n          <WrapperTime>\n            <Label htmlFor=\"start\">\n              Start\n              <Input id=\"start\" name=\"start\" placeholder=\"09:00\" />\n            </Label>\n            <Label htmlFor=\"end\">\n              End\n              <Input id=\"end\" name=\"end\" placeholder=\"11:59\" />\n            </Label>\n          </WrapperTime>\n\n          {/* <div id=\"priority-radio-group\">Picked</div> */}\n          <WrapperRadio role=\"group\" aria-labelledby=\"priority-radio-group\">\n            <LabelRadio>\n              <Radio type=\"radio\" name=\"priority\" value=\"low\" />\n              <RadioCustom value=\"low\"/>\n              Low\n            </LabelRadio>\n            <LabelRadio>\n              <Radio type=\"radio\" name=\"priority\" value=\"medium\" />\n              <RadioCustom value=\"medium\"/>\n              Medium\n            </LabelRadio>\n            <LabelRadio>\n              <Radio type=\"radio\" name=\"priority\" value=\"high\" />\n              <RadioCustom value=\"high\"/>\n              High\n            </LabelRadio>\n          </WrapperRadio>\n          <ButtonContainer>\n            {type === 'add' ? (\n              <>\n                <StyledButton type=\"submit\"> \n                <IconFiPlus /> \n                Add\n                </StyledButton>\n                <CancelButton type=\"button\" onClick={handleClick}>\n                  Cancel\n                </CancelButton>\n              </>\n            ) : (\n              <EditButton type=\"submit\">\n              <Icon\n          src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16-white.svg'}\n          alt=\"button-edit\"\n        />\n              Edit</EditButton>\n            )}\n          </ButtonContainer>\n        </Form>\n      </Formik>\n    </ContainerForm>\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport { TaskForm } from 'components/TaskForm/TaskForm';\n\n// import { useDispatch } from 'react-redux';\n// import { setModalTypeTask, toggleModal } from 'redux/modal/modalSlice';\n\nexport const TaskModal = () => {\n  // const dispatch = useDispatch();\n\n  // const handleClick = () => {\n  //   dispatch(toggleModal());\n  //   dispatch(setModalTypeTask())\n  // };\n\n  return (\n    <Modal>\n      <TaskForm></TaskForm>\n    </Modal>\n  );\n};\n","import { AddTaskBtn } from 'components/AddTaskBtn/AddTaskBtn';\nimport { ColumnsItem } from './TasksColumn.styled';\nimport { ColumnHeadBar } from './TasksComponents/ColumnHeadBar';\nimport { ColumnTasksList } from './TasksComponents/ColumnTasksList';\n\nimport { useDispatch } from 'react-redux';\nimport { modalType, selectShowModal } from 'redux/modal/selector';\nimport { useSelector } from 'react-redux';\nimport { TaskModal } from 'components/TaskModal/TaskModal';\nimport { setModalTypeTask, toggleModal, setModalAction } from 'redux/modal/modalSlice';\n\nexport const TasksColumn = ({ listId, date, tasks }) => {\n  const dispatch = useDispatch();\n  const modalTypeSelected = useSelector(modalType)\n\n  const isModalOpen = useSelector(selectShowModal);\n  \n  const handleAddTaskButtonClick = () => {\n    dispatch(setModalTypeTask());\n    dispatch(setModalAction(\"add\"));\n    dispatch(toggleModal());\n  };\n\n  return (\n    <ColumnsItem>\n      <ColumnHeadBar title={listId} />\n\n      <ColumnTasksList\n        listId={listId}\n        tasks={tasks}\n      />\n\n      {/* //! Это Руслана код */}\n      {/* <AddTaskBtn listId={listId}  date={date}/> */}\n\n      {/* //! Это я вставил - Никита */}\n      <AddTaskBtn listId={listId} handleAddTask={handleAddTaskButtonClick} />\n      {modalTypeSelected === \"task\" && isModalOpen && (<TaskModal></TaskModal>)}\n\n    </ColumnsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TasksList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\npadding-bottom: 34px;\n  scrollbar-width: thin; /* Товщина полоси прокрутки */\n  scrollbar-color: red lightgray; /* Колір полоси прокрутки і фону */\n\n\n/* width */\n::-webkit-scrollbar {\n  width: 12px;\n\n}\n\n/* Track */\n::-webkit-scrollbar-track {\n  box-shadow: inset 0 0 30px #F2F2F2;\n  border-radius: 12px;\n}\n\n/* Handle */\n::-webkit-scrollbar-thumb {\n  background: #E7E5E5;\n  border-radius: 12px;\n}\n\n  @media screen and (min-width: 1440px) {\n    gap: 27px;\n    height: 568px;\n  }\n\n  ::-webkit-scrollbar {\n  width: 14px;\n\n}\n`;\n","import { TasksColumn } from './TasksColumn/TasksColumn';\nimport { TasksList } from './TasksColumnsList.styled';\n\nimport { isSameDay, parseISO } from 'date-fns';\n\nexport const TasksColumnsList = ({ date, tasks }) => {\n\n  const todoTasks = tasks.filter(task => task.category === 'to-do');\n  const inProgressTasks = tasks.filter(task => task.category === 'in-progress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n\n  const toDo = todoTasks.filter(todo => isSameDay(date, parseISO(todo.date)));\n  const inProgress = inProgressTasks.filter(inProgress =>\n    isSameDay(date, parseISO(inProgress.date))\n  );\n  const done = doneTasks.filter(done => isSameDay(date, parseISO(done.date)));\n\n  return (\n    <TasksList>\n      <TasksColumn listId=\"to-do\" date={date} tasks={toDo} />\n      <TasksColumn listId=\"in-progress\" date={date} tasks={inProgress} />\n      <TasksColumn listId=\"done\" date={date} tasks={done} />\n    </TasksList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { DayCalendarHead } from '../DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from './TasksColumnsList';\n\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\nimport {selectAllTasks} from 'redux/task/selectors'\n\nconst ChoosedDay = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const tasks = useSelector(selectAllTasks)\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n\n  return (\n    <>\n      <DayCalendarHead date={date} setDate={handleSetDate} />\n      <TasksColumnsList date={date} tasks={tasks}/>\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from 'styled-components';\n// import styled, { css } from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  margin-top: 24px;\n  margin-bottom: 14px;\n  background-color: #fff;\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1280px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.mainBackgroundColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.CalendarHead};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props => props.weekend && '#3e85f3'};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { IoMdClose } from 'react-icons/io';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1200;\n`;\n\nexport const ModalContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  width: 303px;\n  height: auto;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  background: #fff;\n  box-shadow: 0px 4px 16px 0px #1111111a;\n\n  @media screen and (min-width: 768px) {\n    width: 396px;\n}\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  width: 24px;\n  height: 24px;\n  color: #000;\n  cursor: pointer;\n`;\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleModal } from 'redux/modal/modalSlice';\nimport { Backdrop, ModalContainer, CloseIcon } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({children}) => {\n  const dispatch = useDispatch();\n  const handleToggleModal = () => dispatch(toggleModal());\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <Backdrop>\n      <ModalContainer>\n        <CloseIcon onClick={handleToggleModal}></CloseIcon>\n        {children}\n      </ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","export const getDate = state => state.date;","export const selectShowModal = state => state.modal.isOpen;\nexport const modalType = state => state.modal.modalType;\nexport const modalAction = state => state.modal.modalAction;\nexport const getModalTask = state => state.modal.dataTask;\n","export const selectAllTasks = state => state.tasks.tasks;\n\nexport const selectTasksError = state => state.tasks.error;\n\nexport const selectTasksLoading = state => state.tasks.isLoading;\n\nexport const selectSuccessful = state => state.tasks.successful;\n"],"names":["Div","styled","AddTask","props","theme","ltMainAccentColor","ltTextColor","Text","AddTaskBtn","listId","handleAddTask","id","type","onClick","size","ColumnsItem","Wrap","ColumnTitle","Icon","AiOutlinePlusCircle","page","BtnAddTop","ColumnHeadBar","title","dispatch","useDispatch","setModalTypeTask","toggleModal","List","ListItem","Card","TextTask","WrapperToolbar","ContainerDataUser","Avatar","Priority","children","SectionToolbar","TaskAction","Toolbar","setTargetElement","setTaskModalOpen","task","_id","e","target","src","process","alt","setModalAction","setDataTask","deleteTask","ModalCardTask","BtnMoove","Lable","modalRoot","document","querySelector","ToolBarTaskModal","targetElement","taskId","useState","top","left","modalPosition","setModalPosition","modalRef","useRef","moove","mooveTask","Object","keys","filter","handleOutsideClick","useCallback","event","current","contains","useEffect","updateModalPosition","targetRect","getBoundingClientRect","isMobile","window","innerWidth","topOffsetX","height","topOffsetY","addEventListener","removeEventListener","handleKeyDown","code","handleMooveTask","category","currentTarget","getAttribute","changeTaskCategory","createPortal","style","ref","map","TaskColumnCard","taskModalOpen","avatarUrl","useAuth","user","priority","ColumnTasksList","tasks","Label","LabelRadio","Input","Field","Radio","RadioCustom","value","WrapperRadio","WrapperTime","ContainerForm","ButtonContainer","StyledButton","CancelButton","EditButton","IconFiPlus","FiPlus","TaskForm","date","Date","useSelector","getDate","getModalTask","modalAction","howRender","start","end","initialValues","onSubmit","data","newTask","updateTask","format","addTask","htmlFor","name","placeholder","role","TaskModal","Modal","TasksColumn","modalTypeSelected","modalType","isModalOpen","selectShowModal","TasksList","TasksColumnsList","todoTasks","inProgressTasks","doneTasks","toDo","todo","isSameDay","parseISO","inProgress","done","selectAllTasks","DayCalendarHead","setDate","newDate","toString","GridWrapper","CellWrapperOfDate","mainBackgroundColor","CalendarHead","Day","weekend","isCurrentDay","path","useLocation","pathname","includes","formatDay","useMedia","startOfWeek","weekStartsOn","endOfWeek","week","currentDay","formattedDate","dayOfWeek","push","day","fullDate","addDays","dateItem","isWeekend","Backdrop","ModalContainer","CloseIcon","IoMdClose","handleToggleModal","state","modal","isOpen","dataTask"],"sourceRoot":""}