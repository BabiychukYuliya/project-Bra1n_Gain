{"version":3,"file":"static/js/825.6ffd0113.chunk.js","mappings":"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","sources":["components/ChoosedMonth/CalendarTable/CalendarTable.styled.jsx","../node_modules/nanoid/index.browser.js","components/ChoosedMonth/CalendarTable/CalendarTable.js","components/ChoosedMonth/ChoosedMonth.jsx","components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.js","redux/currentDate/selector.js","redux/task/selectors.js","../node_modules/date-fns/esm/isWeekend/index.js","../node_modules/react-use/esm/misc/util.js","../node_modules/react-use/esm/useMedia.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst getTaskColor = props => {\n  switch (props.priority) {\n    case 'low':\n      return 'color: #3E85F3; background-color: #CEEEFD;';\n    case 'medium':\n      return 'color: #F3B249; background-color: #FCF0D4;';\n    case 'high':\n      return 'color: #EA3D65; background-color: #FFD2DD;';\n    default:\n      return 'color: #3E85F3; background-color: #FFFFFF';\n  }\n};\n\nexport const GridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  border-radius: 8px;\n`;\n\nexport const CurrentDay = styled.div`\n  color: ${props =>\n    props.isCurrentDate\n      ? `${props.theme.colors.currentdayBgColor}`\n      : 'inherit'};\n  background-color: ${props => (props.isCurrentDate ? '#3e85f3' : 'inherit')};\n  border-radius: 6px;\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  width: 22px;\n\n  &:hover,\n  &:focus {\n    background: #3e85f3;\n    color: #fff;\n  }\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    margin: -4px -8px;\n    border-radius: 8px;\n  }\n`;\n\nexport const CellWrapper = styled(NavLink)`\n  min-width: 28px;\n  min-height: 94px;\n  border: 1px solid ${props => props.theme.colors.borderColor};\n  background: ${props => props.theme.colors.currentdayBgColor};\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  color: ${props => props.theme.colors.headerFontcolor};\n\n  &:first-child {\n    border-top-left-radius: 8px;\n  }\n\n  &:last-child {\n    border-bottom-right-radius: 8px;\n  }\n\n  &:nth-child(7) {\n    border-top-right-radius: 8px;\n  }\n\n  &:nth-last-child(7) {\n    border-bottom-left-radius: 8px;\n  }\n\n  @media (min-width: 376px) {\n    min-width: 48px;\n  }\n\n  @media (min-width: 768px) {\n    font-size: 16px;\n    min-width: 100px;\n    height: 144px;\n    line-height: 1.12;\n  }\n\n  @media (min-width: 1440px) {\n    height: 135px;\n  }\n`;\n\nexport const DayWrapper = styled.div`\n  padding: 10px 12px;\n  font-weight: 700;\n  font-family: 'InterBolt';\n\n  @media (min-width: 768px) {\n    padding: 18px 22px;\n  }\n`;\n\nexport const ShowDayWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const Modal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ModalContent = styled.div`\n  background-color: #ffffff;\n  padding: 40px;\n`;\n\nexport const TaskItem = styled.li`\n  height: 22px;\n  padding: 4px 4px 4px 8px;\n  font-family: 'InterBolt';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.4;\n  border-radius: 8px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 4px;\n  ${props => getTaskColor(props)};\n\n  @media (min-width: 768px) {\n    min-width: 94px;\n    height: 26px;\n    padding: 4px 8px 4px 12px;\n    font-size: 14px;\n    line-height: 1.29;\n  }\n\n  @media (min-width: 1280px) {\n    min-width: 114px;\n  }\n`;\n\nexport const TasksMoreLabel = styled.div`\n  margin-top: auto;\n  margin: auto;\n  color: #3e85f3;\n  text-align: center;\n  overflow: hidden;\n  font-size: 14px;\n`;\nexport const TaskWrapper = styled.ul`\n  list-style-type: none;\n  padding: 0 8px 0px 8px;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React, { useState, useEffect } from 'react';\nimport {\n  CellWrapper,\n  CurrentDay,\n  DayWrapper,\n  GridWrapper,\n  ShowDayWrapper,\n  TaskItem,\n  TaskWrapper,\n} from './CalendarTable.styled';\nimport { nanoid } from 'nanoid';\n\nexport const CalendarTable = ({ date, setDate, tasks }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [calendarGrid, setCalendarGrid] = useState([]);\n\n  useEffect(() => {\n    generateCalendar();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date]);\n\n  const handleDateClick = date => {\n    setSelectedDate(date);\n    // setIsModalOpen(true);\n  };\n\n  const generateCalendar = () => {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const firstDayIndex = new Date(year, month, 1).getDay();\n\n    const calendarGrid = [];\n    const emptyCellsBefore = firstDayIndex === 0 ? 6 : firstDayIndex - 1;\n    const totalWeeks = Math.ceil((emptyCellsBefore + daysInMonth) / 7);\n\n    const isCurrentTask = (date, task) => {\n      const day = trimDate(date);\n      if (task.date === day) {\n        return true;\n      }\n      return false;\n    };\n\n    const trimDate = date => {\n      var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n\n      return [year, month, day].join('-');\n    };\n\n    for (let i = 0; i < emptyCellsBefore; i++) {\n      calendarGrid.push(<CellWrapper key={nanoid()} />);\n    }\n\n    for (let dayNum = 1; dayNum <= daysInMonth; dayNum++) {\n      const clickDate = new Date(year, month, dayNum);\n\n      const isCurrentDay =\n        dayNum === date.getDate() &&\n        month === new Date().getMonth() &&\n        year === new Date().getFullYear();\n\n      calendarGrid.push(\n        <CellWrapper\n          key={nanoid()}\n          selected={selectedDate === date}\n          to={`/layout/calendar/day/${dayNum}`}\n        >\n          <ShowDayWrapper onClick={() => setDate(clickDate)}>\n            <DayWrapper>\n              <CurrentDay isCurrentDate={isCurrentDay}>{dayNum}</CurrentDay>\n            </DayWrapper>\n          </ShowDayWrapper>\n          <TaskWrapper>\n            {tasks?.map(task =>\n              isCurrentTask(clickDate, task) ? (\n                <TaskItem\n                  key={task._id}\n                  priority={task.priority}\n                  onClick={() => handleDateClick(date)}\n                >\n                  {task.title}\n                </TaskItem>\n              ) : null\n            )}\n          </TaskWrapper>\n        </CellWrapper>\n      );\n    }\n\n    const remainingCells = totalWeeks * 7 - emptyCellsBefore - daysInMonth;\n    for (let i = 0; i < remainingCells; i++) {\n      calendarGrid.push(<CellWrapper key={nanoid()} />);\n    }\n\n    setCalendarGrid(calendarGrid);\n  };\n\n  return (\n    <>\n      <GridWrapper>{calendarGrid}</GridWrapper>\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { CalendarTable } from './CalendarTable/CalendarTable';\n\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\nimport { DayCalendarHead } from 'components/DayCalendarHead/DayCalendarHead';\nimport { selectAllTasks } from 'redux/task/selectors';\n\nconst ChoosedMonth = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const tasks = useSelector(selectAllTasks);\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n\n  return (\n    <div>\n      <DayCalendarHead date={date} setDate={handleSetDate} />\n      <CalendarTable date={date} setDate={handleSetDate} tasks={tasks} />\n    </div>\n  );\n};\n\nexport default ChoosedMonth;\n","import styled from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.calendarMonthBorder};\n  margin-top: 24px;\n  margin-bottom: 14px;\n  background-color: ${props => props.theme.colors.componentsBgColor};\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1280px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.colors.componentsBgColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.colors.headerFontcolor};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props =>\n    props.weekend ? '#3e85f3' : `${props.theme.colors.dayCalendarHeadBgColor}`};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","export const getDate = state => state.date;","export const selectAllTasks = state => state.tasks.tasks;\n\nexport const selectTasksError = state => state.tasks.error;\n\nexport const selectTasksLoading = state => state.tasks.isLoading;\n\nexport const selectSuccessful = state => state.tasks.successful;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isWeekend\n * @category Weekday Helpers\n * @summary Does the given date fall on a weekend?\n *\n * @description\n * Does the given date fall on a weekend?\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date falls on a weekend\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Does 5 October 2014 fall on a weekend?\n * const result = isWeekend(new Date(2014, 9, 5))\n * //=> true\n */\nexport default function isWeekend(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  return day === 0 || day === 6;\n}","export var noop = function () { };\nexport function on(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.addEventListener) {\n        obj.addEventListener.apply(obj, args);\n    }\n}\nexport function off(obj) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (obj && obj.removeEventListener) {\n        obj.removeEventListener.apply(obj, args);\n    }\n}\nexport var isBrowser = typeof window !== 'undefined';\nexport var isNavigator = typeof navigator !== 'undefined';\n","import { useEffect, useState } from 'react';\nimport { isBrowser } from './misc/util';\nvar getInitialState = function (query, defaultState) {\n    // Prevent a React hydration mismatch when a default value is provided by not defaulting to window.matchMedia(query).matches.\n    if (defaultState !== undefined) {\n        return defaultState;\n    }\n    if (isBrowser) {\n        return window.matchMedia(query).matches;\n    }\n    // A default value has not been provided, and you are rendering on the server, warn of a possible hydration mismatch when defaulting to false.\n    if (process.env.NODE_ENV !== 'production') {\n        console.warn('`useMedia` When server side rendering, defaultState should be defined to prevent a hydration mismatches.');\n    }\n    return false;\n};\nvar useMedia = function (query, defaultState) {\n    var _a = useState(getInitialState(query, defaultState)), state = _a[0], setState = _a[1];\n    useEffect(function () {\n        var mounted = true;\n        var mql = window.matchMedia(query);\n        var onChange = function () {\n            if (!mounted) {\n                return;\n            }\n            setState(!!mql.matches);\n        };\n        mql.addListener(onChange);\n        setState(mql.matches);\n        return function () {\n            mounted = false;\n            mql.removeListener(onChange);\n        };\n    }, [query]);\n    return state;\n};\nexport default useMedia;\n"],"names":["GridWrapper","styled","CurrentDay","props","isCurrentDate","theme","colors","currentdayBgColor","CellWrapper","NavLink","borderColor","headerFontcolor","DayWrapper","ShowDayWrapper","TaskItem","priority","getTaskColor","TaskWrapper","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","CalendarTable","date","setDate","tasks","useState","selectedDate","setSelectedDate","calendarGrid","setCalendarGrid","useEffect","generateCalendar","year","getFullYear","month","getMonth","daysInMonth","Date","getDate","firstDayIndex","getDay","emptyCellsBefore","totalWeeks","Math","ceil","trimDate","d","day","length","join","i","push","dayNum","clickDate","isCurrentDay","selected","to","onClick","map","task","isCurrentTask","handleDateClick","title","_id","remainingCells","dispatch","useDispatch","useSelector","selectAllTasks","handleSetDate","newDate","DayCalendarHead","page","calendarMonthBorder","componentsBgColor","CellWrapperOfDate","Day","weekend","dayCalendarHeadBgColor","mainBackgroundColor","path","useLocation","pathname","includes","formatDay","useMedia","start","startOfWeek","weekStartsOn","end","endOfWeek","week","currentDay","formattedDate","format","dayOfWeek","fullDate","addDays","dateItem","isSameDay","isWeekend","state","dirtyDate","requiredArgs","arguments","toDate","isBrowser","window","query","defaultState","_a","undefined","matchMedia","matches","getInitialState","setState","mounted","mql","onChange","addListener","removeListener"],"sourceRoot":""}