{"version":3,"file":"static/js/421.250e499f.chunk.js","mappings":"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","sources":["components/AddTaskBtn/AddTaskBtn.styled.jsx","components/AddTaskBtn/AddTaskBtn.js","components/ChoosedDay/TasksColumn/TasksColumn.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/ColumnHeadBar.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.styled.jsx","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/Toolbar/Toolbar.js","components/ChoosedDay/TasksColumn/TasksComponents/TaskColumnCard/TaskColumnCard.js","components/ChoosedDay/TasksColumn/TasksComponents/ColumnTasksList.js","components/ChoosedDay/TasksColumn/TasksColumn.jsx","components/ChoosedDay/TasksColumnsList.styled.jsx","components/ChoosedDay/TasksColumnsList.js","components/ChoosedDay/ChoosedDay.js","components/DayCalendarHead/DayCalendarHead.styled.jsx","components/DayCalendarHead/DayCalendarHead.js","redux/currentDate/selector.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0;\n  background-color: beige;\n`;\n\nexport const AddTask = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  padding: 16px 20px;\n  width: 100%;\n\n  cursor: pointer;\n  border-radius: 8px;\n  backface-visibility: hidden;\n  transition: transform 0.2s ease-in-out;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  //! для светлой темы\n  // border: 2px dashed #3e85f3;\n  background-color: #e3f3ff;\n  //? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  color: #111111;\n  //? color: ${props => props.theme.ltTextColor}; //переключение по теме\n\n  //! для темной темы\n  // border: none;\n  // background-color: #3e85f3;\n  //// ? background-color: ${props =>\n    props.theme.ltMainAccentColor}; //переключение по теме\n  // color: #ffffff;\n  //// ? color: ${props => props.theme.ltTextColor}; //переключение по теме\n`;\n\nexport const Text = styled.span`\n  font-size: 14px;\n  font-family: Inter, sans-serif;\n  font-weight: 600;\n  line-height: 18px;\n`;\n","import { FiPlus } from 'react-icons/fi';\nimport { AddTask, Div, Text } from './AddTaskBtn.styled';\n\nexport const AddTaskBtn = ({ listId, handleAddTask}) => {\n  \n  return (\n    <Div>\n      <AddTask id={listId} type=\"button\" onClick={handleAddTask}>\n        <FiPlus size={24} />\n        <Text>Add task</Text>\n      </AddTask>\n    </Div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ColumnsItem = styled.li`\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  width: 100%;\n  height: 100%;\n  min-height: 155px;\n  height: fit-content;\n  min-width: 335px;\n  line-height: 1.12;\n  font-size: 18px;\n  font-weight: 700;\n  padding: 18px 18px 10px 18px;\n  gap: 16px;\n  font-family: 'InterSemiBolt';\n\n  @media screen and (min-width: 768px) {\n    padding: 18px 22px;\n    font-size: 20px;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { AiOutlinePlusCircle } from 'react-icons/ai';\n\nexport const Wrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 7px 0;\n`;\n\nexport const ColumnTitle = styled.h3`\n  font-family: 'InterSemiBolt';\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.11;\n  color: #111111;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: 1.2;\n  }\n`;\n\nexport const Icon = styled(AiOutlinePlusCircle)`\n  width: 22px;\n  height: 22px;\n  fill: black;\n  border-radius: 50%;\n  &:hover,\n  &:focus {\n    fill: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const BtnAddTop = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 22px;\n  height: 22px;\n`;\n","import { Wrap, ColumnTitle, BtnAddTop, Icon } from './ColumnHeadBar.styled';\n\nexport const ColumnHeadBar = ({ title }) => {\n  return (\n    <>\n      <Wrap>\n        <ColumnTitle>\n          {title === 'toDo'\n            ? 'To do'\n            : title === 'inProgress'\n            ? 'In progress'\n            : title === 'done'\n            ? 'Done'\n            : null}\n        </ColumnTitle>\n        <BtnAddTop>\n          <Icon />\n        </BtnAddTop>\n      </Wrap>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  list-style: none;\n  width: 100%;\n  height: 280px;\n\n  overflow: hidden;\n  overflow-y: auto;\n  scroll-snap-type: y mandatory;\n\n  @media screen and (min-width: 768px) {\n    height: 368px;\n    gap: 18px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  max-width: 300px;\n  height: 108px;\n\n  @media screen and (min-width: 768px) {\n    height: 112px;\n  }\n`;\n","import styled from \"styled-components\"\n\nexport const Card = styled.div`\npadding: 14px 14px 18px 14px;\nwidth: 100%;\nheight: 100%;\nbackground-color: #F7F6F9;\nborder: 1px solid #DCE3E5CC;\nborder-radius: 8px;\n\n`;\n\nexport const TextTask = styled.p`\nmargin-bottom: 28px;\n\ncolor: #111;\ntext-overflow: ellipsis;\nwhite-space: nowrap;\noverflow: hidden;\nfont-size: 14px;\nfont-family: Inter;\nfont-weight: 500;\nline-height: 1.3;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 32px;\n  }\n`\nexport const Toolbar = styled.div`\npadding: 14px 14px 18px 14px;\nwidth: 100%;\nheight: 100%;\nbackground-color: #F7F6F9;\nborder: 1px solid #DCE3E5CC;\nborder-radius: 8px;\n\n`;\n","import styled from 'styled-components';\n\nexport const SectionToolbar = styled.div`\n  display: flex;\n  background-color: tomato;\n  width: 62px;\n  box-sizing: content-box;\n  padding: 0px;\n  \n  @media screen and (min-width: 768px) {\n    background-color: tomato;\n    width: 68px;\n    box-sizing: content-box;\n    padding: 0px;\n\n  }\n`;\n\nexport const TaskAction = styled.button`\n  max-width: 14px;\n  max-height: 14px;\npadding: 0px;\n  border-radius: 50%;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    fill: green;\n  }\n\n  :not(:last-child) {\nmargin-right: 10px;\n  }\n  @media (min-width: 768px) {\n    width: 16px;\n    height: 16px;\n  }\n\n`;\n","import { SectionToolbar, TaskAction } from './Toolbar.styled';\n\nexport const Toolbar = () => {\n    \n    return (\n      <SectionToolbar>\n        <TaskAction>\n          <img\n            src={process.env.PUBLIC_URL + '/images/icons/icon-arrow-circle-broken-right-16x16.svg'}\n            alt=\"button-move\"\n          />\n        </TaskAction>\n        <TaskAction>\n          <img\n            src={process.env.PUBLIC_URL + '/images/icons/icon-pencil-16x16.svg'}\n            alt=\"button-edit\"\n          />\n        </TaskAction>\n        <TaskAction>\n          <img\n            src={process.env.PUBLIC_URL + '/images/icons/icon-trash-16x16.svg'}\n            alt=\"button-delete\"\n          />\n        </TaskAction>\n      </SectionToolbar>\n    );\n  };","import { Card, TextTask } from \"./TaskColumnCard.styled\"\nimport { Toolbar } from './Toolbar/Toolbar';\n\nexport const TaskColumnCard = ({task}) => {\n\n  return(\n    <Card>\n      <TextTask>{task}</TextTask>\n      <Toolbar/>\n    </Card>\n  )\n}","import { nanoid } from 'nanoid';\nimport { List, ListItem } from './ColumnTasksList.styled';\nimport { TaskColumnCard } from './TaskColumnCard/TaskColumnCard';\n\nexport const ColumnTasksList = ({ listId }) => {\n  const test = [\n    'Euer esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n    'Euer esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n    'Eue esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n    'Eu esse enim cillum voluptate minim voluptate velit eiusmod dolor Lorem.',\n  ];\n  return (\n    <List>\n      {test.map(e => (\n        <ListItem key={nanoid()}>\n          <TaskColumnCard task={e} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { AddTaskBtn } from 'components/AddTaskBtn/AddTaskBtn';\nimport { ColumnsItem } from './TasksColumn.styled';\nimport { ColumnHeadBar } from './TasksComponents/ColumnHeadBar';\nimport { ColumnTasksList } from './TasksComponents/ColumnTasksList';\nimport { useState } from 'react';\n\nexport const TasksColumn = ({ listId, date, tasks }) => {\n  // const [isOpen, setIsModalOpen] = useState(false);\n  const [setIsModalOpen] = useState(false);\n\n  const handleAddTask = () => setIsModalOpen(true);\n\n  return (\n    <ColumnsItem>\n      <ColumnHeadBar title={listId} />\n\n      <ColumnTasksList listId={listId} tasks={tasks} />\n      {/* //! Это Руслана код */}\n      {/* <AddTaskBtn listId={listId}  date={date}/> */}\n\n      {/* //! Это я вставил - Никита */}\n      <AddTaskBtn listId={listId} handleAddTask={handleAddTask} />\n    </ColumnsItem>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TasksList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 16px;\n  padding: 0px;\n  padding-bottom: 44px;\n  margin-top: 16px;\n  overflow: hidden;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n\n  @media screen and (min-width: 1280px) {\n    gap: 27px;\n  }\n`;\n","import { TasksColumn } from './TasksColumn/TasksColumn';\nimport { TasksList } from './TasksColumnsList.styled';\n\nimport { useSelector } from 'react-redux';\nimport { isSameDay, parseISO } from 'date-fns';\n\nexport const TasksColumnsList = ({ date }) => {\n  const tasks = useSelector(state => state.tasks.tasks);\n\n  const todoTasks = tasks.filter(task => task.category === 'toDo');\n  const inProgressTasks = tasks.filter(task => task.category === 'inProgress');\n  const doneTasks = tasks.filter(task => task.category === 'done');\n\n  const toDo = todoTasks.filter(todo => isSameDay(date, parseISO(todo.date)));\n  const inProgress = inProgressTasks.filter(inProgress =>\n    isSameDay(date, parseISO(inProgress.date))\n  );\n  const done = doneTasks.filter(done => isSameDay(date, parseISO(done.date)));\n\n  return (\n    <TasksList>\n      <TasksColumn listId=\"toDo\" date={date} tasks={toDo} />\n      <TasksColumn listId=\"inProgress\" date={date} tasks={inProgress} />\n      <TasksColumn listId=\"done\" date={date} tasks={done} />\n    </TasksList>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { DayCalendarHead } from '../DayCalendarHead/DayCalendarHead';\nimport { TasksColumnsList } from './TasksColumnsList';\n\nimport { getDate } from 'redux/currentDate/selector';\nimport { setDate } from 'redux/currentDate/curentDateSlice';\nimport { useEffect } from 'react';\nimport { fetchAllTasks } from 'redux/task/operations';\n\nconst ChoosedDay = () => {\n  const dispatch = useDispatch();\n  const date = new Date(useSelector(getDate));\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n\n  const dataDay = {\n    month,\n    day,\n    year,\n  };\n\n  const handleSetDate = newDate => {\n    dispatch(setDate(newDate.toString()));\n  };\n  useEffect(() => {\n    dispatch(fetchAllTasks(dataDay));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date, dispatch]);\n\n  return (\n    <>\n      <DayCalendarHead date={date} setDate={handleSetDate} />\n      <TasksColumnsList date={date} />\n    </>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from 'styled-components';\n// import styled, { css } from 'styled-components';\n\nexport const GridWrapper = styled.ul`\n  height: ${props => (props.page ? '50px' : '74px')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(220, 227, 229, 0.5);\n  margin-top: 24px;\n  margin-bottom: 14px;\n  padding: ${props => (props.page ? '16px' : '14px 18px')};\n\n  @media (min-width: 768px) {\n    padding: ${props => (props.page ? '14px 40px' : '10px 32px')};\n    height: ${props => (props.page ? '46px' : '68px')};\n    margin-bottom: ${props => (props.page ? '18px' : '16px')};\n    margin-top: ${props => (props.page ? '32px' : '24px')};\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: ${props => (props.page ? '15px' : '16px')};\n    padding: ${props => (props.page ? '14px 60px' : '10px 46px')};\n    margin-top: 32px;\n  }\n`;\n\nexport const CellWrapperWeekend = styled.li`\n  color: #3e85f3;\n`;\n\nexport const CellWrapperOfDate = styled.li`\n  background: ${props => props.theme.mainBackgroundColor};\n  font-family: 'Inter';\n\n  text-align: center;\n  color: ${props => props.theme.CalendarHead};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  gap: 4px;\n  border-radius: 8px;\n\n  cursor: ${props => (props.page ? 'default' : 'pointer')};\n\n  @media (min-width: 376px) {\n    min-width: 40px;\n    gap: 6px;\n  }\n\n  :hover {\n    color: ${props => !props.page && '#fff'};\n    background-color: ${props => !props.page && '#3e85f3'};\n    transform: ${props => !props.page && 'scale(1.12)'};\n    font-size: ${props => !props.page && '12px'};\n    transition-duration: ${props => !props.page && '500ms'};\n  }\n`;\n\nexport const Day = styled.p`\n  font-weight: 600;\n  color: ${props => props.weekend && '#3e85f3'};\n  text-transform: uppercase;\n  font-size: 16px;\n  line-height: 1.12;\n  @media (min-width: 768px) {\n    font-size: ${props => (props.page ? '16px' : '14px')};\n    line-height: ${props => (props.page ? '1.12' : '1.3')};\n  }\n`;\n\nexport const Date = styled.p`\n  color: ${props => props.isCurrentDay && '#fff'};\n  background-color: ${props =>\n    props.isCurrentDay\n      ? '#3e85f3'\n      : `${props => props.theme.mainBackgroundColor}`};\n  border-radius: 6px;\n  padding: 4px 6px;\n  font-weight: 700;\n\n  font-size: 12px;\n  line-height: 1.17;\n\n  @media (min-width: 768px) {\n    padding: 4px 8px;\n    border-radius: 8px;\n    font-size: 16px;\n    line-height: 1.12;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { useMedia } from 'react-use';\nimport {\n  startOfWeek,\n  endOfWeek,\n  format,\n  addDays,\n  isSameDay,\n  isWeekend,\n} from 'date-fns';\n\nimport {\n  CellWrapperOfDate,\n  GridWrapper,\n  Date,\n  Day,\n} from './DayCalendarHead.styled';\n\nexport const DayCalendarHead = ({ date, setDate }) => {\n  const { pathname } = useLocation();\n  const path = pathname.includes('day');\n  const isMobile = useMedia('(max-width: 767px)');\n  const formatDay = isMobile ? 'EEEEE' : 'E';\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n  const week = [];\n\n  let currentDay = start;\n\n  while (currentDay <= end) {\n    const formattedDate = format(currentDay, 'd');\n    const dayOfWeek = format(currentDay, formatDay);\n\n    week.push({ date: formattedDate, day: dayOfWeek, fullDate: currentDay });\n    currentDay = addDays(currentDay, 1);\n  }\n\n  return (\n    <GridWrapper page={!path}>\n      {week.map(dateItem => {\n        const isCurrentDay = isSameDay(dateItem.fullDate, date);\n        return (\n          <CellWrapperOfDate\n            key={dateItem.fullDate}\n            onClick={() => path && setDate(dateItem.fullDate)}\n            page={!path}\n          >\n            <Day weekend={isWeekend(dateItem.fullDate) && !path} page={!path}>\n              {dateItem.day}\n            </Day>\n            {path && (\n              <Date isCurrentDay={isCurrentDay} page={!path}>\n                {dateItem.date}\n              </Date>\n            )}\n          </CellWrapperOfDate>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n","export const getDate = state => state.date;"],"names":["Div","styled","AddTask","props","theme","ltMainAccentColor","ltTextColor","Text","AddTaskBtn","listId","handleAddTask","id","type","onClick","size","ColumnsItem","Wrap","ColumnTitle","Icon","AiOutlinePlusCircle","page","BtnAddTop","ColumnHeadBar","title","List","ListItem","Card","TextTask","SectionToolbar","TaskAction","Toolbar","src","process","alt","TaskColumnCard","task","ColumnTasksList","map","e","nanoid","TasksColumn","tasks","date","useState","setIsModalOpen","TasksList","TasksColumnsList","useSelector","state","todoTasks","filter","category","inProgressTasks","doneTasks","toDo","todo","isSameDay","parseISO","inProgress","done","dispatch","useDispatch","Date","getDate","day","dataDay","month","getMonth","year","getFullYear","useEffect","fetchAllTasks","DayCalendarHead","setDate","newDate","toString","GridWrapper","CellWrapperOfDate","mainBackgroundColor","CalendarHead","Day","weekend","isCurrentDay","path","useLocation","pathname","includes","formatDay","useMedia","start","startOfWeek","weekStartsOn","end","endOfWeek","week","currentDay","formattedDate","format","dayOfWeek","push","fullDate","addDays","dateItem","isWeekend"],"sourceRoot":""}