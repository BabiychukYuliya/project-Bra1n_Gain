{"version":3,"file":"static/js/459.20e48742.chunk.js","mappings":"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","sources":["components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.jsx","utils/calendarToolbar/formatPeriod.js","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.js","utils/calendarToolbar/changeDate.js","components/UserForm/UserForm.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  MdOutlineKeyboardArrowLeft,\n  MdOutlineKeyboardArrowRight,\n} from 'react-icons/md';\n\nimport {\n  DatePickerStyles,\n  DatePickerWrapper,\n} from 'components/UserForm/UserForm.styled';\n\nexport const Period = styled.span`\n  padding: 6px 12px;\n  width: ${props => props.typePeriod === \"day\" ? \"116px\" : \"150px\"} ;\n  color: #fff;\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 1.3;\n  background-color: #3e85f3;\n  border-radius: 8px;\n  cursor: pointer;\n  text-align: center;\n  @media screen and (min-width: 768px) {\n    padding: 8px 12px;\n  width: ${props => props.typePeriod === \"day\" ? \"136px\" : \"170px\"} ;\n  line-height: 1.2;\n\n    font-size: 16px;\n  }\n`;\n\nexport const PickerWrapper = styled(DatePickerWrapper)`\n  position: absolute;\n  left: 0;\n  top: 8px;\n\n  @media screen and (min-width: 768px) {\n    top: 13px;\n  }\n\n  .react-datepicker {\n    width: 235px;\n    height: 100%;\n    padding: 18px;\n  }\n\n  .react-datepicker__month-container {\n    width: 235px;\n  }\n\n  .react-datepicker__header {\n    padding: 0;\n  }\n  .react-datepicker__current-month {\n    margin: 0;\n    margin-bottom: 18px;\n  }\n  .react-datepicker__navigation {\n    top: 16px;\n    width: 20px;\n    height: 20px;\n    text-align: center;\n\n    :focus-visible {\n      outline: 2px solid #fff;\n    }\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 20px;\n  }\n  .react-datepicker__navigation-icon--previous {\n    top: 1px;\n    right: 0;\n  }\n\n  .react-datepicker__navigation--next {\n    right: 20px;\n  }\n\n  .react-datepicker__navigation-icon--next {\n    top: 1px;\n    left: 0;\n  }\n  .react-datepicker__navigation-icon--next::before {\n  }\n\n  .react-datepicker__current-month {\n    font-size: 16px;\n    font-family: Inter;\n    font-weight: 600;\n    letter-spacing: -0.32px;\n  }\n  .react-datepicker__day-names {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 199px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 8px;\n\n    border: none;\n  }\n\n  .react-datepicker__day-name {\n    width: 24px;\n    height: 17px;\n    padding: 0;\n\n    font-size: 14px;\n    font-family: Inter;\n    font-weight: 500;\n    letter-spacing: -0.28px;\n    line-height: 1.3;\n    color: #ffffff80;\n    cursor: default;\n  }\n\n  .react-datepicker__month {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 13px;\n    width: 235px;\n    padding-left: 18px;\n    padding-right: 18px;\n    padding-top: 10px;\n    border-top: 1px solid #ffffff33;\n  }\n\n  .react-datepicker__day--outside-month,\n  .react-datepicker__day--disabled {\n    color: #ffffff33;\n  }\n\n  .react-datepicker__day--disabled.react-datepicker__day {\n    cursor: default;\n  }\n\n  .react-datepicker__day--weekend {\n    opacity: 1;\n  }\n\n  .react-datepicker__week {\n    width: 199px;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .react-datepicker__day {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n\n    font-size: 14px;\n    font-family: Inter;\n    line-height: 1.3;\n    letter-spacing: -0.28px;\n    cursor: pointer;\n\n    :hover {\n      background-color: #fff;\n      color: #3e85f3;\n      border-radius: 24px;\n      opacity: 0.8;\n    }\n\n    :focus,\n    :focus-visible {\n      background-color: #fff;\n      color: #3e85f3;\n      border-radius: 24px;\n      opacity: 1;\n    }\n\n    :focus-visible {\n      outline: none;\n    }\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    background-color: #fff;\n    color: #3e85f3;\n    opacity: 0.7;\n  }\n\n  .react-datepicker__day--today {\n    border: 1px solid #fff;\n    background-color: transparent;\n    color: #fff;\n  }\n  .react-datepicker__day--selected.react-datepicker__day--today,\n  .react-datepicker__day--outside-month.react-datepicker__day--selected {\n    background-color: #fff;\n    color: #3e85f3;\n  }\n`;\n\nexport const DatePickerCastom = styled(DatePickerStyles)`\n  display: none;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    justify-content: none;\n    gap: 8px;\n  }\n\n`;\n\nexport const ContainerBtn = styled.div`\n  display: flex;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 36px;\n  height: 30px;\n  font-size: 14px;\n  color: #343434;\n  border: 1px solid #edf1f2;\n  background-color: #fff;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 38px;\n    height: 34px;\n  }\n`;\n\nexport const ButtonLeft = styled(Button)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border-right: none;\n  background-color: ${props => props.typeDate === 'month' && '#CAE8FF'};\n`;\n\nexport const ButtonRight = styled(Button)`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  background-color: ${props => props.typeDate === 'day' && '#CAE8FF'};\n`;\n\nexport const ArrowLeft = styled(MdOutlineKeyboardArrowLeft)`\n  width: 16px;\n  height: 16px;\n  fill: ${props => (props.disabled ? '#DCE3E5' : '#343434')};\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const ArrowRight = styled(MdOutlineKeyboardArrowRight)`\n  width: 16px;\n  height: 16px;\n  fill: #343434;\n\n  @media screen and (min-width: 768px) {\n    width: 18px;\n    height: 18px;\n  }\n`;\n","export const formatPeriod = (date, type) => {\n  const options = {};\n  let formattedDate = '';\n\n  if (type === 'month') {\n    options.month = 'long';\n    options.year = 'numeric';\n    formattedDate = new Intl.DateTimeFormat('en-US', options).format(date);\n  } else if (type === 'day') {\n    options.day = 'numeric';\n    options.month = 'short';\n    options.year = 'numeric';\n    const newDate = new Intl.DateTimeFormat('en-US', options).format(date);\n    const year = newDate.split(\",\")[1];\n    const dayMonth = newDate.split(\",\")[0].split(\" \").reverse().join(\" \");\n    formattedDate = `${dayMonth}${year}`\n  }\n\n  return formattedDate;\n}","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  ArrowLeft,\n  ArrowRight,\n  ButtonLeft,\n  ButtonRight,\n  ContainerBtn,\n  Period,\n  Wrapper,\n  PickerWrapper,\n  DatePickerCastom,\n} from './PeriodPaginator.styled';\n\nimport { formatPeriod } from 'utils/calendarToolbar/formatPeriod';\nimport { changeDate } from 'utils/calendarToolbar/changeDate';\n\nexport const PeriodPaginator = ({ minDate, date, setDate, typenav }) => {\n  const { pathname } = useLocation();\n  const path = typenav ? typenav : pathname.includes('day') ? 'day' : 'month';\n  const page = pathname.includes('calendar');\n  const navigate = useNavigate();\n\n  const [period, setPeriod] = useState(() => formatPeriod(date, path));\n  const [openPicker, setOpenPicker] = useState(false);\n  const [minDateDisabled, setMinDateDisabled] = useState(false);\n\n  const handlePickerChange = newValue => {\n    setDate(newValue);\n    setOpenPicker(false);\n  };\n\n  const handleClickPeriod = () => {\n    if (path === 'day') {\n      setOpenPicker(true);\n    }\n  };\n\n  const handleClick = num => {\n    setDate(changeDate(date, num, path));\n  };\n\n  useEffect(() => {\n    if (!page) return;\n    const newParams = date.getDate();\n    if (path === 'day') {\n      navigate(`/layout/calendar/day/${newParams}`, { replace: true });\n    }\n    if (path === 'month') {\n      navigate(`/layout/calendar/month/${newParams}`, { replace: true });\n    }\n  }, [date, navigate, path, page]);\n\n  useEffect(() => {\n    setPeriod(formatPeriod(date, path));\n  }, [path, date]);\n\n  useEffect(() => {\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n\n    if (path === 'day') {\n      const formattedDate = `${\n        months[date.getMonth()]\n      } ${date.getDate()} ${date.getFullYear()}`;\n\n      setMinDateDisabled(formattedDate === minDate);\n    }\n    if (path === 'month') {\n      const formattedDate = `${months[date.getMonth()]} ${date.getFullYear()}`;\n      const arrDate = minDate.split(' ');\n      const newMinDate = `${arrDate[0]} ${arrDate[2]}`;\n      setOpenPicker(false);\n      setMinDateDisabled(formattedDate === newMinDate);\n    }\n  }, [date, minDate, path]);\n\n  return (\n    <Wrapper>\n      <Period typePeriod={path} onClick={handleClickPeriod}>{period}</Period>\n\n      <PickerWrapper>\n        {openPicker && path === 'day' && (\n          <DatePickerCastom\n            open\n            selected={date}\n            calendarStartDay={1}\n            closeOnSelect={true}\n            minDate={new Date(minDate)}\n            onChange={handlePickerChange}\n            formatWeekDay={nameOfDay => nameOfDay.slice(0, 1)}\n            onClickOutside={() => setOpenPicker(false)}\n          />\n        )}\n      </PickerWrapper>\n\n      <ContainerBtn>\n        <ButtonLeft onClick={() => handleClick(-1)} disabled={minDateDisabled}>\n          <ArrowLeft disabled={minDateDisabled} />\n        </ButtonLeft>\n\n        <ButtonRight onClick={() => handleClick(1)}>\n          <ArrowRight />\n        </ButtonRight>\n      </ContainerBtn>\n    </Wrapper>\n  );\n};\n","export const changeDate = (date, num, type) => {\n  const modifiedDate = new Date(date);\n  if (type === 'month') {\n    modifiedDate.setMonth(modifiedDate.getMonth() + num);\n    return modifiedDate;\n  }\n  if (type === 'day') {\n    modifiedDate.setDate(modifiedDate.getDate() + num);\n    return modifiedDate;\n  }\n};\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { BiErrorCircle, BiCheckCircle, BiChevronDown } from 'react-icons/bi';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background: ${props => props.theme.colors.componentsBgColor};\n  border-radius: 0 16px 16px 16px;\n  padding: 40px 18px;\n\n  @media screen and (min-width: 1280px) {\n    padding-top: 60px;\n  }\n`;\n\nexport const FormUserProfile = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media screen and (min-width: 375px) {\n    width: 299px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 354px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 758px;\n  }\n`;\n\nexport const BtnUploadAvatar = styled(Field)`\n  opacity: 1;\n  position: absolute;\n  bottom: -6%;\n  right: 20%;\n  overflow: hidden;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n  font-size: 15px;\n\n\n\n  ::before {\n    content: ' +';\n    color: rgba(255, 255, 255, 1);\n    cursor: pointer;\n    padding: 5px;\n    background: ${props => props.theme.colors.buttonsColor};\n    position: absolute;\n    // transition: background анимация;\n    top: -8px;\n    left: -6px;\n    width: 40px;\n    height: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    width: 24px;\n    height: 24px;\n    bottom: -5%;\n    right: 20%;\n\n    ::before {\n      top: -8px;\n      left: -6px;\n      width: 40px;\n      height: 40px;\n    }\n  }\n`;\n\nexport const Avatar = styled.img`\n  border-radius: inherit;\n\n  width: 68px;\n  height: 68px;\n\n  @media screen and (min-width: 768px) {\n    top: 0;\n    left: -60px;\n    width: 120px;\n    height: 120px;\n  }\n`;\n\nexport const LabelAvatar = styled.label`\n  position: relative;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  position: absolute;\n  top: -71px;\n  right: -36px;\n  width: 72px;\n  height: 72px;\n  border: 2px solid ${props => props.theme.colors.buttonsColor};\n  border-radius: 50%;\n\n  @media screen and (min-width: 768px) {\n    top: 0;\n    left: -60px;\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ErrorMassege = styled.div`\n  position: absolute;\n  bottom: 3px;\n  left: 15px;\n  font-size: 10px;\n  line-height: 1.16;\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n    bottom: 0;\n  }\n`;\n\nexport const ErrorCircleIcon = styled(BiErrorCircle)`\n  position: absolute;\n  opacity: 0;\n  top: 30px;\n  right: 18px;\n  &.error {\n    opacity: 1;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 33px;\n  }\n`;\n\nexport const CheckCircleIcon = styled(BiCheckCircle)`\n  position: absolute;\n  opacity: 0;\n  top: 30px;\n  right: 18px;\n  &.success {\n    opacity: 1;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 33px;\n  }\n`;\n\nexport const BiChevronDownIcon = styled(BiChevronDown)`\n  position: absolute;\n  top: 30px;\n  right: 18px;\n  pointer-events: none;\n\n  @media screen and (min-width: 768px) {\n    top: 33px;\n  }\n`;\n\nexport const UserName = styled.p`\n  margin: 0 auto;\n  margin-top: 18px;\n  color: ${props => props.theme.colors.textColor};\n\n  font-size: 14px;\n  font-weight: 700;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 144px;\n    font-size: 18px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const UserLabel = styled.span`\n  margin-top: 6px;\n  margin-bottom: 40px;\n  text-align: center;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n    color: ${props => props.theme.colors.textColor};\n\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  height: 40px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.colors.inputNormal};\n  outline: none;\n  margin-top: 8px;\n  margin-bottom: 18px;\n  padding: 12px 14px;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: ${props => props.theme.colors.componentsBgColor};\n  color: ${props => props.theme.colors.textColor};\n\n\n\n  :hover,\n  :focus {\n    border-color: ${props => props.theme.colors.inputHover};\n  }\n\n  &.error {\n    border-color: rgba(231, 74, 59, 1);\n  }\n\n  &.success {\n    border-color: rgba(60, 188, 129, 1);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.13;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 354px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  color: rgba(17, 17, 17, 1);\n\n  &.error {\n    color: rgba(231, 74, 59, 1);\n  }\n\n  &.success {\n    color: ${props => props.theme.colors.inputCorrect};\n\n    \n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.3;\n  }\n`;\n\nexport const MainFieldWrapper = styled.div`\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 50px;\n    margin-bottom: 70px;\n  }\n`;\nexport const BlockFieldWrapper = styled.div`\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  margin: 0 auto;\n  margin-top: 22px;\n  width: 195px;\n  height: 46px;\n  border-radius: 16px;\n  border: none;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  background: ${props => props.theme.colors.buttonsColor}\n  color: ${props => props.theme.colors.Primary};\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 262px;\n  }\n\n  //   transition: background-color анимация;\n\n  :disabled {\n    cursor: not-allowed;\n  }\n\n  :hover,\n  :focus {\n    background-color: rgba(43, 120, 239, 1);\n  }\n\n  :disabled {\n    opacity: 0.4;\n  }\n`;\n\nexport const DatePickerStyles = styled(DatePicker)`\n  width: 100%;\n  height: 40px;\n  background: ${props => props.theme.colors.componentsBgColor};\n  color: ${props => props.theme.colors.textColor};\n  border-radius: 8px;\n  border: 1px solid rgba(17, 17, 17, 0.1);\n  outline: none;\n  margin-top: 8px;\n  margin-bottom: 18px;\n  padding: 12px 14px;\n  font-family: Inter-600, sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 1.3;\n  cursor: pointer;\n\n  &.success {\n    border-color: rgba(60, 188, 129, 1);\n  }\n\n  :hover,\n  :focus {\n    border-color: rgba(17, 17, 17, 1);\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 1.3;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 354px;\n  }\n`;\n\nexport const DatePickerWrapper = styled.div`\n  position: relative;\n  .react-datepicker {\n    background-color: rgba(62, 133, 243, 1);\n    border-radius: 16px;\n    overflow: hidden;\n    border: none;\n    color: rgba(255, 255, 255, 1);\n    width: 327px;\n    height: 354px;\n    display: flex;\n    justify-content: center;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.3;\n  }\n  .react-datepicker__header {\n    position: relative;\n\n    background-color: rgba(62, 133, 243, 1);\n    border-bottom: 1px solid rgba(62, 133, 243, 1);\n  }\n\n  .react-datepicker__navigation-icon {\n    ::before {\n      border-color: rgba(255, 255, 255, 1);\n    }\n\n    .react-datepicker__navigation--next {\n      right: 9px;\n      top: 35px;\n    }\n  }\n\n  .react-datepicker__month-select,\n  .react-datepicker__year-select {\n    padding: 5px;\n    width: 90px;\n    color: rgba(255, 255, 255, 1);\n\n    text-align: center;\n    font-size: 10px;\n    overflow-y: auto;\n    cursor: pointer;\n\n    @media screen and (min-width: 375px) {\n      width: 110px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 120px;\n      font-size: 16px;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    ::-webkit-scrollbar {\n      box-sizing: border-box;\n      width: 5px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n      background: rgba(255, 255, 255, 1);\n      border-radius: 10px;\n      margin-top: 15px;\n      margin-bottom: 15px;\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n      border-radius: 10px;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n    }\n  }\n\n  .react-datepicker__current-month {\n    margin-top: 15px;\n    margin-bottom: 11px;\n    font-size: 20px;\n    font-weight: 600;\n    line-height: 1.2;\n\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day-name {\n    width: 46px;\n    height: 42px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n  }\n\n  .react-datepicker__day {\n    width: 46px;\n    height: 46px;\n    margin: 0;\n    padding: 9px;\n    color: rgba(255, 255, 255, 1);\n    :hover,\n    :focus {\n      background-color: var(--auth-bg-color);\n      color: var(--hover-btn-background-color);\n      border-radius: 24px;\n      opacity: 0.7;\n    }\n  }\n\n  .react-datepicker__day--weekend {\n    // color: rgba(255, 255, 255, 1);\n    color: ${props => props.theme.colors.Primary};\n\n    opacity: 40%;\n  }\n\n  .react-datepicker__day--today,\n  .react-datepicker__day--selected {\n    background-color: rgba(255, 255, 255, 1);\n    color: rgba(62, 133, 243, 1);\n    border-radius: 50%;\n    opacity: 1;\n  }\n\n  .react-datepicker__day--keyboard-selected {\n    border-radius: 50%;\n  }\n\n  .react-datepicker__month {\n    margin: 0;\n  }\n\n  .react-datepicker__navigation--previous {\n    left: 7px;\n    top: 30px;\n  }\n\n  .react-datepicker__navigation--next {\n    right: 7px;\n    top: 30px;\n  }\n\n  .react-datepicker__day-names {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  }\n`;\n"],"names":["Period","styled","props","typePeriod","PickerWrapper","DatePickerWrapper","DatePickerCastom","DatePickerStyles","Wrapper","ContainerBtn","Button","ButtonLeft","typeDate","ButtonRight","ArrowLeft","MdOutlineKeyboardArrowLeft","disabled","ArrowRight","MdOutlineKeyboardArrowRight","formatPeriod","date","type","options","formattedDate","month","year","Intl","DateTimeFormat","format","day","newDate","split","dayMonth","reverse","join","PeriodPaginator","minDate","setDate","typenav","pathname","useLocation","path","includes","page","navigate","useNavigate","useState","period","setPeriod","openPicker","setOpenPicker","minDateDisabled","setMinDateDisabled","handleClick","num","modifiedDate","Date","setMonth","getMonth","getDate","changeDate","useEffect","newParams","replace","months","getFullYear","arrDate","newMinDate","onClick","open","selected","calendarStartDay","closeOnSelect","onChange","newValue","formatWeekDay","nameOfDay","slice","onClickOutside","theme","colors","componentsBgColor","FormUserProfile","Form","BtnUploadAvatar","Field","buttonsColor","Avatar","LabelAvatar","AvatarWrapper","FieldWrapper","ErrorMassege","ErrorCircleIcon","BiErrorCircle","CheckCircleIcon","BiCheckCircle","BiChevronDownIcon","BiChevronDown","UserName","textColor","UserLabel","Input","inputNormal","inputHover","Label","inputCorrect","MainFieldWrapper","BlockFieldWrapper","SubmitBtn","Primary","DatePicker"],"sourceRoot":""}